// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: user.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Status is User Node Situation
type Status int32

const (
	Status_IDLE      Status = 0 // Default Status on Launch
	Status_CONNECTED Status = 1 // Status after starting Host
	Status_AVAILABLE Status = 2 // After Bootstrapping Host and Connected on Local Lobby
	Status_PENDING   Status = 3 // Awaiting Peer Authorization
	Status_INVITED   Status = 4 // Has received Invitation
	Status_TRANSFER  Status = 5 // In Progress of Transfer
	Status_STANDBY   Status = 6 // Away from Sonr Application
	Status_FAILED    Status = 7 // Failed to Connect Host
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "IDLE",
		1: "CONNECTED",
		2: "AVAILABLE",
		3: "PENDING",
		4: "INVITED",
		5: "TRANSFER",
		6: "STANDBY",
		7: "FAILED",
	}
	Status_value = map[string]int32{
		"IDLE":      0,
		"CONNECTED": 1,
		"AVAILABLE": 2,
		"PENDING":   3,
		"INVITED":   4,
		"TRANSFER":  5,
		"STANDBY":   6,
		"FAILED":    7,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

// Cardinal: Designation for the Compass Direction Value
type Cardinal int32

const (
	Cardinal_N    Cardinal = 0  // North
	Cardinal_NbE  Cardinal = 1  // North by East
	Cardinal_NNE  Cardinal = 2  // North North East
	Cardinal_NEbN Cardinal = 3  // NorthEast by North
	Cardinal_NE   Cardinal = 4  // North East
	Cardinal_NEbE Cardinal = 5  // NorthEast by East
	Cardinal_ENE  Cardinal = 6  // East North East
	Cardinal_EbN  Cardinal = 7  // East by North
	Cardinal_E    Cardinal = 8  // East
	Cardinal_EbS  Cardinal = 9  // East by South
	Cardinal_ESE  Cardinal = 10 // East South East
	Cardinal_SEbE Cardinal = 11 // SouthEast by East
	Cardinal_SE   Cardinal = 12 // South East
	Cardinal_SEbS Cardinal = 13 // SouthEast by South
	Cardinal_SSE  Cardinal = 14 // South South East
	Cardinal_SbE  Cardinal = 15 // South by East
	Cardinal_S    Cardinal = 16 // South
	Cardinal_SbW  Cardinal = 17 // South by West
	Cardinal_SSW  Cardinal = 18 // South South West
	Cardinal_SWbS Cardinal = 19 // SouthWest by South
	Cardinal_SW   Cardinal = 20 // South West
	Cardinal_SWbW Cardinal = 21 // SouthWest by West
	Cardinal_WSW  Cardinal = 22 // West South West
	Cardinal_WbS  Cardinal = 23 // West by South
	Cardinal_W    Cardinal = 24 // West
	Cardinal_WbN  Cardinal = 25 // West by North
	Cardinal_WNW  Cardinal = 26 // West North West
	Cardinal_NWbW Cardinal = 27 // North West by West
	Cardinal_NW   Cardinal = 28 // North West
	Cardinal_NWbN Cardinal = 29 // North West by North
	Cardinal_NNW  Cardinal = 30 // North North West
	Cardinal_NbW  Cardinal = 31 // North by West
)

// Enum value maps for Cardinal.
var (
	Cardinal_name = map[int32]string{
		0:  "N",
		1:  "NbE",
		2:  "NNE",
		3:  "NEbN",
		4:  "NE",
		5:  "NEbE",
		6:  "ENE",
		7:  "EbN",
		8:  "E",
		9:  "EbS",
		10: "ESE",
		11: "SEbE",
		12: "SE",
		13: "SEbS",
		14: "SSE",
		15: "SbE",
		16: "S",
		17: "SbW",
		18: "SSW",
		19: "SWbS",
		20: "SW",
		21: "SWbW",
		22: "WSW",
		23: "WbS",
		24: "W",
		25: "WbN",
		26: "WNW",
		27: "NWbW",
		28: "NW",
		29: "NWbN",
		30: "NNW",
		31: "NbW",
	}
	Cardinal_value = map[string]int32{
		"N":    0,
		"NbE":  1,
		"NNE":  2,
		"NEbN": 3,
		"NE":   4,
		"NEbE": 5,
		"ENE":  6,
		"EbN":  7,
		"E":    8,
		"EbS":  9,
		"ESE":  10,
		"SEbE": 11,
		"SE":   12,
		"SEbS": 13,
		"SSE":  14,
		"SbE":  15,
		"S":    16,
		"SbW":  17,
		"SSW":  18,
		"SWbS": 19,
		"SW":   20,
		"SWbW": 21,
		"WSW":  22,
		"WbS":  23,
		"W":    24,
		"WbN":  25,
		"WNW":  26,
		"NWbW": 27,
		"NW":   28,
		"NWbN": 29,
		"NNW":  30,
		"NbW":  31,
	}
)

func (x Cardinal) Enum() *Cardinal {
	p := new(Cardinal)
	*p = x
	return p
}

func (x Cardinal) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Cardinal) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[1].Descriptor()
}

func (Cardinal) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[1]
}

func (x Cardinal) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Cardinal.Descriptor instead.
func (Cardinal) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

// Platform is the Operating System of Device
type Platform int32

const (
	Platform_Undefined Platform = 0
	Platform_Android   Platform = 1
	Platform_IOS       Platform = 2
	Platform_MacOS     Platform = 3
	Platform_Windows   Platform = 4
	Platform_Linux     Platform = 5
	Platform_Web       Platform = 6
)

// Enum value maps for Platform.
var (
	Platform_name = map[int32]string{
		0: "Undefined",
		1: "Android",
		2: "IOS",
		3: "MacOS",
		4: "Windows",
		5: "Linux",
		6: "Web",
	}
	Platform_value = map[string]int32{
		"Undefined": 0,
		"Android":   1,
		"IOS":       2,
		"MacOS":     3,
		"Windows":   4,
		"Linux":     5,
		"Web":       6,
	}
)

func (x Platform) Enum() *Platform {
	p := new(Platform)
	*p = x
	return p
}

func (x Platform) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Platform) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[2].Descriptor()
}

func (Platform) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[2]
}

func (x Platform) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Platform.Descriptor instead.
func (Platform) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2}
}

type KeyPair_Type int32

const (
	KeyPair_PRIVATE_KEY KeyPair_Type = 0
	KeyPair_PUBLIC_KEY  KeyPair_Type = 1
)

// Enum value maps for KeyPair_Type.
var (
	KeyPair_Type_name = map[int32]string{
		0: "PRIVATE_KEY",
		1: "PUBLIC_KEY",
	}
	KeyPair_Type_value = map[string]int32{
		"PRIVATE_KEY": 0,
		"PUBLIC_KEY":  1,
	}
)

func (x KeyPair_Type) Enum() *KeyPair_Type {
	p := new(KeyPair_Type)
	*p = x
	return p
}

func (x KeyPair_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyPair_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[3].Descriptor()
}

func (KeyPair_Type) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[3]
}

func (x KeyPair_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyPair_Type.Descriptor instead.
func (KeyPair_Type) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1, 0}
}

// Proximity is the Distance between Peers, from Ultrasonic
type Position_Proximity int32

const (
	Position_NotFound  Position_Proximity = 0 // Unable to Calculate
	Position_Immediate Position_Proximity = 1 // Within 5 Meters
	Position_Near      Position_Proximity = 2 // Within 10 Meters
	Position_Distant   Position_Proximity = 3 // Within 15 Meters
)

// Enum value maps for Position_Proximity.
var (
	Position_Proximity_name = map[int32]string{
		0: "NotFound",
		1: "Immediate",
		2: "Near",
		3: "Distant",
	}
	Position_Proximity_value = map[string]int32{
		"NotFound":  0,
		"Immediate": 1,
		"Near":      2,
		"Distant":   3,
	}
)

func (x Position_Proximity) Enum() *Position_Proximity {
	p := new(Position_Proximity)
	*p = x
	return p
}

func (x Position_Proximity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Position_Proximity) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[4].Descriptor()
}

func (Position_Proximity) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[4]
}

func (x Position_Proximity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Position_Proximity.Descriptor instead.
func (Position_Proximity) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6, 0}
}

// Available Settings Options
type Settings_Option int32

const (
	Settings_None              Settings_Option = 0 // Arbitrary Zero Value
	Settings_DefaultVideoCall  Settings_Option = 1 // Default App to be used for Video Calls
	Settings_FallbackVideoCall Settings_Option = 2 // Fallback App for Video Calls
	Settings_DarkMode          Settings_Option = 3 // Dark Mode Preference
	Settings_RunInBackground   Settings_Option = 4 // Sonr Background Run Preference
)

// Enum value maps for Settings_Option.
var (
	Settings_Option_name = map[int32]string{
		0: "None",
		1: "DefaultVideoCall",
		2: "FallbackVideoCall",
		3: "DarkMode",
		4: "RunInBackground",
	}
	Settings_Option_value = map[string]int32{
		"None":              0,
		"DefaultVideoCall":  1,
		"FallbackVideoCall": 2,
		"DarkMode":          3,
		"RunInBackground":   4,
	}
)

func (x Settings_Option) Enum() *Settings_Option {
	p := new(Settings_Option)
	*p = x
	return p
}

func (x Settings_Option) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Settings_Option) Descriptor() protoreflect.EnumDescriptor {
	return file_user_proto_enumTypes[5].Descriptor()
}

func (Settings_Option) Type() protoreflect.EnumType {
	return &file_user_proto_enumTypes[5]
}

func (x Settings_Option) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Settings_Option.Descriptor instead.
func (Settings_Option) EnumDescriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7, 0}
}

// Client Keys for Services
type APIKeys struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IpApiKey          string `protobuf:"bytes,1,opt,name=ipApiKey,proto3" json:"ipApiKey,omitempty"`
	RapidApiHost      string `protobuf:"bytes,2,opt,name=rapidApiHost,proto3" json:"rapidApiHost,omitempty"`
	RapidApiKey       string `protobuf:"bytes,3,opt,name=rapidApiKey,proto3" json:"rapidApiKey,omitempty"`
	HandshakeKey      string `protobuf:"bytes,4,opt,name=handshakeKey,proto3" json:"handshakeKey,omitempty"`
	HandshakeSecret   string `protobuf:"bytes,5,opt,name=handshakeSecret,proto3" json:"handshakeSecret,omitempty"`
	HubKey            string `protobuf:"bytes,6,opt,name=hubKey,proto3" json:"hubKey,omitempty"`
	HubSecret         string `protobuf:"bytes,7,opt,name=hubSecret,proto3" json:"hubSecret,omitempty"`
	StorjApiKey       string `protobuf:"bytes,8,opt,name=storjApiKey,proto3" json:"storjApiKey,omitempty"`
	StorjRootPassword string `protobuf:"bytes,9,opt,name=storjRootPassword,proto3" json:"storjRootPassword,omitempty"`
}

func (x *APIKeys) Reset() {
	*x = APIKeys{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *APIKeys) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*APIKeys) ProtoMessage() {}

func (x *APIKeys) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use APIKeys.ProtoReflect.Descriptor instead.
func (*APIKeys) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{0}
}

func (x *APIKeys) GetIpApiKey() string {
	if x != nil {
		return x.IpApiKey
	}
	return ""
}

func (x *APIKeys) GetRapidApiHost() string {
	if x != nil {
		return x.RapidApiHost
	}
	return ""
}

func (x *APIKeys) GetRapidApiKey() string {
	if x != nil {
		return x.RapidApiKey
	}
	return ""
}

func (x *APIKeys) GetHandshakeKey() string {
	if x != nil {
		return x.HandshakeKey
	}
	return ""
}

func (x *APIKeys) GetHandshakeSecret() string {
	if x != nil {
		return x.HandshakeSecret
	}
	return ""
}

func (x *APIKeys) GetHubKey() string {
	if x != nil {
		return x.HubKey
	}
	return ""
}

func (x *APIKeys) GetHubSecret() string {
	if x != nil {
		return x.HubSecret
	}
	return ""
}

func (x *APIKeys) GetStorjApiKey() string {
	if x != nil {
		return x.StorjApiKey
	}
	return ""
}

func (x *APIKeys) GetStorjRootPassword() string {
	if x != nil {
		return x.StorjRootPassword
	}
	return ""
}

// Private Public Key Pair
type KeyPair struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Private *KeyPair_Key `protobuf:"bytes,1,opt,name=private,proto3" json:"private,omitempty"`
	Public  *KeyPair_Key `protobuf:"bytes,2,opt,name=public,proto3" json:"public,omitempty"`
}

func (x *KeyPair) Reset() {
	*x = KeyPair{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPair) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPair) ProtoMessage() {}

func (x *KeyPair) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPair.ProtoReflect.Descriptor instead.
func (*KeyPair) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1}
}

func (x *KeyPair) GetPrivate() *KeyPair_Key {
	if x != nil {
		return x.Private
	}
	return nil
}

func (x *KeyPair) GetPublic() *KeyPair_Key {
	if x != nil {
		return x.Public
	}
	return nil
}

// Information about device for User
type Device struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string      `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                            // Device Identifier
	Name       string      `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                        // User Defined Name
	Platform   Platform    `protobuf:"varint,3,opt,name=platform,proto3,enum=Platform" json:"platform,omitempty"` // Operating System
	Model      string      `protobuf:"bytes,4,opt,name=model,proto3" json:"model,omitempty"`                      // Model of Device
	Version    string      `protobuf:"bytes,5,opt,name=version,proto3" json:"version,omitempty"`                  // Operating System Version
	FileSystem *FileSystem `protobuf:"bytes,6,opt,name=fileSystem,proto3" json:"fileSystem,omitempty"`            // Directories for this Device
	KeyPair    *KeyPair    `protobuf:"bytes,7,opt,name=keyPair,proto3" json:"keyPair,omitempty"`
}

func (x *Device) Reset() {
	*x = Device{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Device) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Device) ProtoMessage() {}

func (x *Device) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Device.ProtoReflect.Descriptor instead.
func (*Device) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{2}
}

func (x *Device) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Device) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Device) GetPlatform() Platform {
	if x != nil {
		return x.Platform
	}
	return Platform_Undefined
}

func (x *Device) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Device) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *Device) GetFileSystem() *FileSystem {
	if x != nil {
		return x.FileSystem
	}
	return nil
}

func (x *Device) GetKeyPair() *KeyPair {
	if x != nil {
		return x.KeyPair
	}
	return nil
}

// FileSystem is for Directores Where Data can be stored
type FileSystem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Documents string `protobuf:"bytes,1,opt,name=documents,proto3" json:"documents,omitempty"` // User Generated Files - Both
	Downloads string `protobuf:"bytes,2,opt,name=downloads,proto3" json:"downloads,omitempty"` // Downloaded Files - Desktop
	Library   string `protobuf:"bytes,3,opt,name=library,proto3" json:"library,omitempty"`     // Persistent Non Exposed Files - Desktop
	Support   string `protobuf:"bytes,4,opt,name=support,proto3" json:"support,omitempty"`     // Non Exposed Support Files - Mobile
	Temporary string `protobuf:"bytes,5,opt,name=temporary,proto3" json:"temporary,omitempty"` // Temporary Storage - Mobile
}

func (x *FileSystem) Reset() {
	*x = FileSystem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileSystem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileSystem) ProtoMessage() {}

func (x *FileSystem) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileSystem.ProtoReflect.Descriptor instead.
func (*FileSystem) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{3}
}

func (x *FileSystem) GetDocuments() string {
	if x != nil {
		return x.Documents
	}
	return ""
}

func (x *FileSystem) GetDownloads() string {
	if x != nil {
		return x.Downloads
	}
	return ""
}

func (x *FileSystem) GetLibrary() string {
	if x != nil {
		return x.Library
	}
	return ""
}

func (x *FileSystem) GetSupport() string {
	if x != nil {
		return x.Support
	}
	return ""
}

func (x *FileSystem) GetTemporary() string {
	if x != nil {
		return x.Temporary
	}
	return ""
}

// Basic Info Sent to Peers to Establish Connections
type Peer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         *Peer_ID         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                            // ID references
	Platform   Platform         `protobuf:"varint,2,opt,name=platform,proto3,enum=Platform" json:"platform,omitempty"` // Peers Device Platform
	Model      string           `protobuf:"bytes,3,opt,name=model,proto3" json:"model,omitempty"`                      // Peers Device Model
	Position   *Position        `protobuf:"bytes,4,opt,name=position,proto3" json:"position,omitempty"`                // Peers Positional Information
	Profile    *Profile         `protobuf:"bytes,5,opt,name=profile,proto3" json:"profile,omitempty"`                  // Peers General Information
	Properties *Peer_Properties `protobuf:"bytes,6,opt,name=properties,proto3" json:"properties,omitempty"`            // Peer specific options set
}

func (x *Peer) Reset() {
	*x = Peer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer) ProtoMessage() {}

func (x *Peer) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer.ProtoReflect.Descriptor instead.
func (*Peer) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4}
}

func (x *Peer) GetId() *Peer_ID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Peer) GetPlatform() Platform {
	if x != nil {
		return x.Platform
	}
	return Platform_Undefined
}

func (x *Peer) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *Peer) GetPosition() *Position {
	if x != nil {
		return x.Position
	}
	return nil
}

func (x *Peer) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *Peer) GetProperties() *Peer_Properties {
	if x != nil {
		return x.Properties
	}
	return nil
}

// General Information about Peer passed during Authentication
type Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SName     string   `protobuf:"bytes,1,opt,name=sName,proto3" json:"sName,omitempty"`                      // Sonr Based Username
	FirstName string   `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`              // General Info
	LastName  string   `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`                // General Info
	Picture   []byte   `protobuf:"bytes,4,opt,name=picture,proto3" json:"picture,omitempty"`                  // Profile Picture
	Platform  Platform `protobuf:"varint,5,opt,name=platform,proto3,enum=Platform" json:"platform,omitempty"` // Peers Device Operating System
}

func (x *Profile) Reset() {
	*x = Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Profile) ProtoMessage() {}

func (x *Profile) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Profile.ProtoReflect.Descriptor instead.
func (*Profile) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{5}
}

func (x *Profile) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

func (x *Profile) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *Profile) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *Profile) GetPicture() []byte {
	if x != nil {
		return x.Picture
	}
	return nil
}

func (x *Profile) GetPlatform() Platform {
	if x != nil {
		return x.Platform
	}
	return Platform_Undefined
}

// Position Includes All Directional Info of Peer
type Position struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Facing        *Position_Compass       `protobuf:"bytes,1,opt,name=facing,proto3" json:"facing,omitempty"`                                // Compass Direction of Peer on Z axis
	Heading       *Position_Compass       `protobuf:"bytes,2,opt,name=heading,proto3" json:"heading,omitempty"`                              // Compass Direction of Peer on X axis
	Proximity     Position_Proximity      `protobuf:"varint,3,opt,name=proximity,proto3,enum=Position_Proximity" json:"proximity,omitempty"` // Proximity from the User - Calculated
	Accelerometer *Position_Accelerometer `protobuf:"bytes,4,opt,name=accelerometer,proto3" json:"accelerometer,omitempty"`                  // Accelerometer Values
	Orientation   *Position_Orientation   `protobuf:"bytes,5,opt,name=orientation,proto3" json:"orientation,omitempty"`                      // Orientation Values
}

func (x *Position) Reset() {
	*x = Position{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position) ProtoMessage() {}

func (x *Position) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position.ProtoReflect.Descriptor instead.
func (*Position) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6}
}

func (x *Position) GetFacing() *Position_Compass {
	if x != nil {
		return x.Facing
	}
	return nil
}

func (x *Position) GetHeading() *Position_Compass {
	if x != nil {
		return x.Heading
	}
	return nil
}

func (x *Position) GetProximity() Position_Proximity {
	if x != nil {
		return x.Proximity
	}
	return Position_NotFound
}

func (x *Position) GetAccelerometer() *Position_Accelerometer {
	if x != nil {
		return x.Accelerometer
	}
	return nil
}

func (x *Position) GetOrientation() *Position_Orientation {
	if x != nil {
		return x.Orientation
	}
	return nil
}

type Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key    string          `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`                             // Option as String
	Value  *Settings_Value `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`                         // Value for Setting
	Option Settings_Option `protobuf:"varint,3,opt,name=option,proto3,enum=Settings_Option" json:"option,omitempty"` // Type of Setting
}

func (x *Settings) Reset() {
	*x = Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings) ProtoMessage() {}

func (x *Settings) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings.ProtoReflect.Descriptor instead.
func (*Settings) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7}
}

func (x *Settings) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *Settings) GetValue() *Settings_Value {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *Settings) GetOption() Settings_Option {
	if x != nil {
		return x.Option
	}
	return Settings_None
}

type KeyPair_Key struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path   string       `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	Buffer []byte       `protobuf:"bytes,2,opt,name=buffer,proto3" json:"buffer,omitempty"`
	Type   KeyPair_Type `protobuf:"varint,3,opt,name=type,proto3,enum=KeyPair_Type" json:"type,omitempty"`
}

func (x *KeyPair_Key) Reset() {
	*x = KeyPair_Key{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyPair_Key) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyPair_Key) ProtoMessage() {}

func (x *KeyPair_Key) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyPair_Key.ProtoReflect.Descriptor instead.
func (*KeyPair_Key) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{1, 0}
}

func (x *KeyPair_Key) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *KeyPair_Key) GetBuffer() []byte {
	if x != nil {
		return x.Buffer
	}
	return nil
}

func (x *KeyPair_Key) GetType() KeyPair_Type {
	if x != nil {
		return x.Type
	}
	return KeyPair_PRIVATE_KEY
}

// ID References
type Peer_ID struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Peer      string `protobuf:"bytes,1,opt,name=peer,proto3" json:"peer,omitempty"`           // Host PeerID
	Device    string `protobuf:"bytes,2,opt,name=device,proto3" json:"device,omitempty"`       // Device ID
	SName     string `protobuf:"bytes,3,opt,name=sName,proto3" json:"sName,omitempty"`         // User ID
	MultiAddr string `protobuf:"bytes,4,opt,name=multiAddr,proto3" json:"multiAddr,omitempty"` // Peer MultiAddr
}

func (x *Peer_ID) Reset() {
	*x = Peer_ID{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer_ID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer_ID) ProtoMessage() {}

func (x *Peer_ID) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer_ID.ProtoReflect.Descriptor instead.
func (*Peer_ID) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4, 0}
}

func (x *Peer_ID) GetPeer() string {
	if x != nil {
		return x.Peer
	}
	return ""
}

func (x *Peer_ID) GetDevice() string {
	if x != nil {
		return x.Device
	}
	return ""
}

func (x *Peer_ID) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

func (x *Peer_ID) GetMultiAddr() string {
	if x != nil {
		return x.MultiAddr
	}
	return ""
}

// Properties
type Peer_Properties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Whether Peer can use automatic point to Transfer
	EnabledPointShare bool `protobuf:"varint,1,opt,name=enabledPointShare,proto3" json:"enabledPointShare,omitempty"`
	IsFlatMode        bool `protobuf:"varint,2,opt,name=isFlatMode,proto3" json:"isFlatMode,omitempty"`
}

func (x *Peer_Properties) Reset() {
	*x = Peer_Properties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Peer_Properties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Peer_Properties) ProtoMessage() {}

func (x *Peer_Properties) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Peer_Properties.ProtoReflect.Descriptor instead.
func (*Peer_Properties) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{4, 1}
}

func (x *Peer_Properties) GetEnabledPointShare() bool {
	if x != nil {
		return x.EnabledPointShare
	}
	return false
}

func (x *Peer_Properties) GetIsFlatMode() bool {
	if x != nil {
		return x.IsFlatMode
	}
	return false
}

// Accelerometer Sensor Values
type Position_Accelerometer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X float64 `protobuf:"fixed64,1,opt,name=x,proto3" json:"x,omitempty"` // X-Axis Value
	Y float64 `protobuf:"fixed64,2,opt,name=y,proto3" json:"y,omitempty"` // Y-Axis Value
	Z float64 `protobuf:"fixed64,3,opt,name=z,proto3" json:"z,omitempty"` // Z-Axis Value
}

func (x *Position_Accelerometer) Reset() {
	*x = Position_Accelerometer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position_Accelerometer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position_Accelerometer) ProtoMessage() {}

func (x *Position_Accelerometer) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position_Accelerometer.ProtoReflect.Descriptor instead.
func (*Position_Accelerometer) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6, 0}
}

func (x *Position_Accelerometer) GetX() float64 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *Position_Accelerometer) GetY() float64 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *Position_Accelerometer) GetZ() float64 {
	if x != nil {
		return x.Z
	}
	return 0
}

// Compass Direction Values
type Position_Compass struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cardinal     Cardinal `protobuf:"varint,1,opt,name=cardinal,proto3,enum=Cardinal" json:"cardinal,omitempty"`         // Cardinal Designation of normal Value
	AntiCardinal Cardinal `protobuf:"varint,2,opt,name=antiCardinal,proto3,enum=Cardinal" json:"antiCardinal,omitempty"` // Cardinal Designation of Antipodal Value
	Direction    float64  `protobuf:"fixed64,3,opt,name=direction,proto3" json:"direction,omitempty"`                    // Normal Compass Value
	Antipodal    float64  `protobuf:"fixed64,4,opt,name=antipodal,proto3" json:"antipodal,omitempty"`                    // Inverse Compass Direction of Peer
}

func (x *Position_Compass) Reset() {
	*x = Position_Compass{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position_Compass) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position_Compass) ProtoMessage() {}

func (x *Position_Compass) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position_Compass.ProtoReflect.Descriptor instead.
func (*Position_Compass) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6, 1}
}

func (x *Position_Compass) GetCardinal() Cardinal {
	if x != nil {
		return x.Cardinal
	}
	return Cardinal_N
}

func (x *Position_Compass) GetAntiCardinal() Cardinal {
	if x != nil {
		return x.AntiCardinal
	}
	return Cardinal_N
}

func (x *Position_Compass) GetDirection() float64 {
	if x != nil {
		return x.Direction
	}
	return 0
}

func (x *Position_Compass) GetAntipodal() float64 {
	if x != nil {
		return x.Antipodal
	}
	return 0
}

// Euler Angle Orientation
type Position_Orientation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pitch float64 `protobuf:"fixed64,1,opt,name=pitch,proto3" json:"pitch,omitempty"`
	Roll  float64 `protobuf:"fixed64,2,opt,name=roll,proto3" json:"roll,omitempty"`
	Yaw   float64 `protobuf:"fixed64,3,opt,name=yaw,proto3" json:"yaw,omitempty"`
}

func (x *Position_Orientation) Reset() {
	*x = Position_Orientation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Position_Orientation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Position_Orientation) ProtoMessage() {}

func (x *Position_Orientation) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Position_Orientation.ProtoReflect.Descriptor instead.
func (*Position_Orientation) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{6, 2}
}

func (x *Position_Orientation) GetPitch() float64 {
	if x != nil {
		return x.Pitch
	}
	return 0
}

func (x *Position_Orientation) GetRoll() float64 {
	if x != nil {
		return x.Roll
	}
	return 0
}

func (x *Position_Orientation) GetYaw() float64 {
	if x != nil {
		return x.Yaw
	}
	return 0
}

// Value of Settings Option
type Settings_Value struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Enabled bool   `protobuf:"varint,1,opt,name=enabled,proto3" json:"enabled,omitempty"` // If Value is for simple enable/disable
	Value   string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`      // If Value is complex
}

func (x *Settings_Value) Reset() {
	*x = Settings_Value{}
	if protoimpl.UnsafeEnabled {
		mi := &file_user_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Settings_Value) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Settings_Value) ProtoMessage() {}

func (x *Settings_Value) ProtoReflect() protoreflect.Message {
	mi := &file_user_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Settings_Value.ProtoReflect.Descriptor instead.
func (*Settings_Value) Descriptor() ([]byte, []int) {
	return file_user_proto_rawDescGZIP(), []int{7, 0}
}

func (x *Settings_Value) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *Settings_Value) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

var File_user_proto protoreflect.FileDescriptor

var file_user_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbf, 0x02, 0x0a,
	0x07, 0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x70, 0x41, 0x70,
	0x69, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x70, 0x41, 0x70,
	0x69, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x72, 0x61, 0x70, 0x69, 0x64, 0x41, 0x70, 0x69,
	0x48, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x61, 0x70, 0x69,
	0x64, 0x41, 0x70, 0x69, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x61, 0x70, 0x69,
	0x64, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72,
	0x61, 0x70, 0x69, 0x64, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x68, 0x61,
	0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x28,
	0x0a, 0x0f, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61, 0x6b, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x68, 0x61, 0x6e, 0x64, 0x73, 0x68, 0x61,
	0x6b, 0x65, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x75, 0x62, 0x4b,
	0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x68, 0x75, 0x62, 0x4b, 0x65, 0x79,
	0x12, 0x1c, 0x0a, 0x09, 0x68, 0x75, 0x62, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x68, 0x75, 0x62, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x6a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x6a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79,
	0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x6a, 0x52, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x73,
	0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74, 0x6f,
	0x72, 0x6a, 0x52, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xd6,
	0x01, 0x0a, 0x07, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x12, 0x26, 0x0a, 0x07, 0x70, 0x72,
	0x69, 0x76, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4b, 0x65,
	0x79, 0x50, 0x61, 0x69, 0x72, 0x2e, 0x4b, 0x65, 0x79, 0x52, 0x07, 0x70, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x4b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x2e, 0x4b, 0x65, 0x79,
	0x52, 0x06, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x1a, 0x54, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70,
	0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x21, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x4b, 0x65, 0x79, 0x50,
	0x61, 0x69, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x27,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x52, 0x49, 0x56, 0x41, 0x54,
	0x45, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x55, 0x42, 0x4c, 0x49,
	0x43, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x01, 0x22, 0xd4, 0x01, 0x0a, 0x06, 0x44, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x14, 0x0a,
	0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a,
	0x0a, 0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0b, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x0a,
	0x66, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x22, 0x0a, 0x07, 0x6b, 0x65,
	0x79, 0x50, 0x61, 0x69, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x4b, 0x65,
	0x79, 0x50, 0x61, 0x69, 0x72, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x50, 0x61, 0x69, 0x72, 0x22, 0x9a,
	0x01, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1c, 0x0a,
	0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a,
	0x09, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x74, 0x65, 0x6d, 0x70, 0x6f, 0x72, 0x61, 0x72, 0x79, 0x22, 0x9c, 0x03, 0x0a, 0x04,
	0x50, 0x65, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x12, 0x25,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x09, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x12, 0x25, 0x0a, 0x08, 0x70,
	0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07, 0x70,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x69, 0x65, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x1a, 0x64, 0x0a, 0x02, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x65,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x41, 0x64, 0x64, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x41, 0x64, 0x64, 0x72, 0x1a, 0x5a,
	0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2c, 0x0a, 0x11,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x50, 0x6f, 0x69, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x73,
	0x46, 0x6c, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x69, 0x73, 0x46, 0x6c, 0x61, 0x74, 0x4d, 0x6f, 0x64, 0x65, 0x22, 0x9a, 0x01, 0x0a, 0x07, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61,
	0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65,
	0x12, 0x25, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x09, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x22, 0xf2, 0x04, 0x0a, 0x08, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x43, 0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73, 0x52, 0x06, 0x66, 0x61, 0x63, 0x69, 0x6e, 0x67, 0x12,
	0x2b, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x73, 0x73, 0x52, 0x07, 0x68, 0x65, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x09,
	0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x13, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x78, 0x69,
	0x6d, 0x69, 0x74, 0x79, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x78, 0x69, 0x6d, 0x69, 0x74, 0x79, 0x12,
	0x3d, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x41, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52,
	0x0d, 0x61, 0x63, 0x63, 0x65, 0x6c, 0x65, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x37,
	0x0a, 0x0b, 0x6f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x4f,
	0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x6f, 0x72, 0x69, 0x65,
	0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x39, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x65, 0x6c,
	0x65, 0x72, 0x6f, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x01, 0x79, 0x12, 0x0c, 0x0a, 0x01, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x01, 0x7a, 0x1a, 0x9b, 0x01, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x73, 0x73, 0x12, 0x25,
	0x0a, 0x08, 0x63, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x09, 0x2e, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x08, 0x63, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x0c, 0x61, 0x6e, 0x74, 0x69, 0x43, 0x61, 0x72,
	0x64, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x09, 0x2e, 0x43, 0x61,
	0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x0c, 0x61, 0x6e, 0x74, 0x69, 0x43, 0x61, 0x72, 0x64,
	0x69, 0x6e, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x74, 0x69, 0x70, 0x6f, 0x64, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x01, 0x52, 0x09, 0x61, 0x6e, 0x74, 0x69, 0x70, 0x6f, 0x64, 0x61, 0x6c,
	0x1a, 0x49, 0x0a, 0x0b, 0x4f, 0x72, 0x69, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x70, 0x69, 0x74, 0x63, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05,
	0x70, 0x69, 0x74, 0x63, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x01, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x79, 0x61, 0x77,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x79, 0x61, 0x77, 0x22, 0x3f, 0x0a, 0x09, 0x50,
	0x72, 0x6f, 0x78, 0x69, 0x6d, 0x69, 0x74, 0x79, 0x12, 0x0c, 0x0a, 0x08, 0x4e, 0x6f, 0x74, 0x46,
	0x6f, 0x75, 0x6e, 0x64, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6d, 0x6d, 0x65, 0x64, 0x69,
	0x61, 0x74, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x65, 0x61, 0x72, 0x10, 0x02, 0x12,
	0x0b, 0x0a, 0x07, 0x44, 0x69, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x10, 0x03, 0x22, 0x8a, 0x02, 0x0a,
	0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x25, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x53, 0x65, 0x74,
	0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x10, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x37, 0x0a, 0x05,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x62, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x61, 0x6c, 0x6c, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x46, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x61, 0x6c, 0x6c, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x61, 0x72, 0x6b, 0x4d, 0x6f,
	0x64, 0x65, 0x10, 0x03, 0x12, 0x13, 0x0a, 0x0f, 0x52, 0x75, 0x6e, 0x49, 0x6e, 0x42, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x10, 0x04, 0x2a, 0x71, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x08, 0x0a, 0x04, 0x49, 0x44, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x4f, 0x4e, 0x4e, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x41, 0x56, 0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x50,
	0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e, 0x56, 0x49,
	0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45,
	0x52, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x42, 0x59, 0x10, 0x06,
	0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x07, 0x2a, 0xa6, 0x02, 0x0a,
	0x08, 0x43, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x61, 0x6c, 0x12, 0x05, 0x0a, 0x01, 0x4e, 0x10, 0x00,
	0x12, 0x07, 0x0a, 0x03, 0x4e, 0x62, 0x45, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x4e, 0x45,
	0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x45, 0x62, 0x4e, 0x10, 0x03, 0x12, 0x06, 0x0a, 0x02,
	0x4e, 0x45, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x45, 0x62, 0x45, 0x10, 0x05, 0x12, 0x07,
	0x0a, 0x03, 0x45, 0x4e, 0x45, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x62, 0x4e, 0x10, 0x07,
	0x12, 0x05, 0x0a, 0x01, 0x45, 0x10, 0x08, 0x12, 0x07, 0x0a, 0x03, 0x45, 0x62, 0x53, 0x10, 0x09,
	0x12, 0x07, 0x0a, 0x03, 0x45, 0x53, 0x45, 0x10, 0x0a, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x45, 0x62,
	0x45, 0x10, 0x0b, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x45, 0x10, 0x0c, 0x12, 0x08, 0x0a, 0x04, 0x53,
	0x45, 0x62, 0x53, 0x10, 0x0d, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x53, 0x45, 0x10, 0x0e, 0x12, 0x07,
	0x0a, 0x03, 0x53, 0x62, 0x45, 0x10, 0x0f, 0x12, 0x05, 0x0a, 0x01, 0x53, 0x10, 0x10, 0x12, 0x07,
	0x0a, 0x03, 0x53, 0x62, 0x57, 0x10, 0x11, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x53, 0x57, 0x10, 0x12,
	0x12, 0x08, 0x0a, 0x04, 0x53, 0x57, 0x62, 0x53, 0x10, 0x13, 0x12, 0x06, 0x0a, 0x02, 0x53, 0x57,
	0x10, 0x14, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x57, 0x62, 0x57, 0x10, 0x15, 0x12, 0x07, 0x0a, 0x03,
	0x57, 0x53, 0x57, 0x10, 0x16, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x62, 0x53, 0x10, 0x17, 0x12, 0x05,
	0x0a, 0x01, 0x57, 0x10, 0x18, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x62, 0x4e, 0x10, 0x19, 0x12, 0x07,
	0x0a, 0x03, 0x57, 0x4e, 0x57, 0x10, 0x1a, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x57, 0x62, 0x57, 0x10,
	0x1b, 0x12, 0x06, 0x0a, 0x02, 0x4e, 0x57, 0x10, 0x1c, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x57, 0x62,
	0x4e, 0x10, 0x1d, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x4e, 0x57, 0x10, 0x1e, 0x12, 0x07, 0x0a, 0x03,
	0x4e, 0x62, 0x57, 0x10, 0x1f, 0x2a, 0x5b, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x6e, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x10, 0x01, 0x12, 0x07, 0x0a,
	0x03, 0x49, 0x4f, 0x53, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x61, 0x63, 0x4f, 0x53, 0x10,
	0x03, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x10, 0x04, 0x12, 0x09,
	0x0a, 0x05, 0x4c, 0x69, 0x6e, 0x75, 0x78, 0x10, 0x05, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x65, 0x62,
	0x10, 0x06, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_user_proto_rawDescOnce sync.Once
	file_user_proto_rawDescData = file_user_proto_rawDesc
)

func file_user_proto_rawDescGZIP() []byte {
	file_user_proto_rawDescOnce.Do(func() {
		file_user_proto_rawDescData = protoimpl.X.CompressGZIP(file_user_proto_rawDescData)
	})
	return file_user_proto_rawDescData
}

var file_user_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_user_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_user_proto_goTypes = []interface{}{
	(Status)(0),                    // 0: Status
	(Cardinal)(0),                  // 1: Cardinal
	(Platform)(0),                  // 2: Platform
	(KeyPair_Type)(0),              // 3: KeyPair.Type
	(Position_Proximity)(0),        // 4: Position.Proximity
	(Settings_Option)(0),           // 5: Settings.Option
	(*APIKeys)(nil),                // 6: APIKeys
	(*KeyPair)(nil),                // 7: KeyPair
	(*Device)(nil),                 // 8: Device
	(*FileSystem)(nil),             // 9: FileSystem
	(*Peer)(nil),                   // 10: Peer
	(*Profile)(nil),                // 11: Profile
	(*Position)(nil),               // 12: Position
	(*Settings)(nil),               // 13: Settings
	(*KeyPair_Key)(nil),            // 14: KeyPair.Key
	(*Peer_ID)(nil),                // 15: Peer.ID
	(*Peer_Properties)(nil),        // 16: Peer.Properties
	(*Position_Accelerometer)(nil), // 17: Position.Accelerometer
	(*Position_Compass)(nil),       // 18: Position.Compass
	(*Position_Orientation)(nil),   // 19: Position.Orientation
	(*Settings_Value)(nil),         // 20: Settings.Value
}
var file_user_proto_depIdxs = []int32{
	14, // 0: KeyPair.private:type_name -> KeyPair.Key
	14, // 1: KeyPair.public:type_name -> KeyPair.Key
	2,  // 2: Device.platform:type_name -> Platform
	9,  // 3: Device.fileSystem:type_name -> FileSystem
	7,  // 4: Device.keyPair:type_name -> KeyPair
	15, // 5: Peer.id:type_name -> Peer.ID
	2,  // 6: Peer.platform:type_name -> Platform
	12, // 7: Peer.position:type_name -> Position
	11, // 8: Peer.profile:type_name -> Profile
	16, // 9: Peer.properties:type_name -> Peer.Properties
	2,  // 10: Profile.platform:type_name -> Platform
	18, // 11: Position.facing:type_name -> Position.Compass
	18, // 12: Position.heading:type_name -> Position.Compass
	4,  // 13: Position.proximity:type_name -> Position.Proximity
	17, // 14: Position.accelerometer:type_name -> Position.Accelerometer
	19, // 15: Position.orientation:type_name -> Position.Orientation
	20, // 16: Settings.value:type_name -> Settings.Value
	5,  // 17: Settings.option:type_name -> Settings.Option
	3,  // 18: KeyPair.Key.type:type_name -> KeyPair.Type
	1,  // 19: Position.Compass.cardinal:type_name -> Cardinal
	1,  // 20: Position.Compass.antiCardinal:type_name -> Cardinal
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_user_proto_init() }
func file_user_proto_init() {
	if File_user_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_user_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*APIKeys); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPair); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Device); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileSystem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyPair_Key); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer_ID); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Peer_Properties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position_Accelerometer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position_Compass); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Position_Orientation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_user_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Settings_Value); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_user_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_user_proto_goTypes,
		DependencyIndexes: file_user_proto_depIdxs,
		EnumInfos:         file_user_proto_enumTypes,
		MessageInfos:      file_user_proto_msgTypes,
	}.Build()
	File_user_proto = out.File
	file_user_proto_rawDesc = nil
	file_user_proto_goTypes = nil
	file_user_proto_depIdxs = nil
}
