// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: contact.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ContactCard_Design_Color int32

const (
	ContactCard_Design_Transparent  ContactCard_Design_Color = 0  // Clear Color
	ContactCard_Design_Primary      ContactCard_Design_Color = 1  // Blue Varient
	ContactCard_Design_Secondary    ContactCard_Design_Color = 2  // Purple Varient
	ContactCard_Design_Tertiary     ContactCard_Design_Color = 3  // Green Varient
	ContactCard_Design_Critical     ContactCard_Design_Color = 4  // Red Varient
	ContactCard_Design_AccentPink   ContactCard_Design_Color = 5  // Light Pink
	ContactCard_Design_AccentBlue   ContactCard_Design_Color = 6  // Light Blue
	ContactCard_Design_AccentNavy   ContactCard_Design_Color = 7  // Strong Navy
	ContactCard_Design_AccentPurple ContactCard_Design_Color = 8  // Light Purple
	ContactCard_Design_Black        ContactCard_Design_Color = 9  // Black Varient
	ContactCard_Design_White        ContactCard_Design_Color = 10 // White Varient
	ContactCard_Design_Grey         ContactCard_Design_Color = 11 // Grey Varient
)

// Enum value maps for ContactCard_Design_Color.
var (
	ContactCard_Design_Color_name = map[int32]string{
		0:  "Transparent",
		1:  "Primary",
		2:  "Secondary",
		3:  "Tertiary",
		4:  "Critical",
		5:  "AccentPink",
		6:  "AccentBlue",
		7:  "AccentNavy",
		8:  "AccentPurple",
		9:  "Black",
		10: "White",
		11: "Grey",
	}
	ContactCard_Design_Color_value = map[string]int32{
		"Transparent":  0,
		"Primary":      1,
		"Secondary":    2,
		"Tertiary":     3,
		"Critical":     4,
		"AccentPink":   5,
		"AccentBlue":   6,
		"AccentNavy":   7,
		"AccentPurple": 8,
		"Black":        9,
		"White":        10,
		"Grey":         11,
	}
)

func (x ContactCard_Design_Color) Enum() *ContactCard_Design_Color {
	p := new(ContactCard_Design_Color)
	*p = x
	return p
}

func (x ContactCard_Design_Color) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContactCard_Design_Color) Descriptor() protoreflect.EnumDescriptor {
	return file_contact_proto_enumTypes[0].Descriptor()
}

func (ContactCard_Design_Color) Type() protoreflect.EnumType {
	return &file_contact_proto_enumTypes[0]
}

func (x ContactCard_Design_Color) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContactCard_Design_Color.Descriptor instead.
func (ContactCard_Design_Color) EnumDescriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 4, 0}
}

type ContactCard_General_Gender_Options int32

const (
	ContactCard_General_Gender_Unspecified ContactCard_General_Gender_Options = 0
	ContactCard_General_Gender_Male        ContactCard_General_Gender_Options = 1
	ContactCard_General_Gender_Female      ContactCard_General_Gender_Options = 2
)

// Enum value maps for ContactCard_General_Gender_Options.
var (
	ContactCard_General_Gender_Options_name = map[int32]string{
		0: "Unspecified",
		1: "Male",
		2: "Female",
	}
	ContactCard_General_Gender_Options_value = map[string]int32{
		"Unspecified": 0,
		"Male":        1,
		"Female":      2,
	}
)

func (x ContactCard_General_Gender_Options) Enum() *ContactCard_General_Gender_Options {
	p := new(ContactCard_General_Gender_Options)
	*p = x
	return p
}

func (x ContactCard_General_Gender_Options) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContactCard_General_Gender_Options) Descriptor() protoreflect.EnumDescriptor {
	return file_contact_proto_enumTypes[1].Descriptor()
}

func (ContactCard_General_Gender_Options) Type() protoreflect.EnumType {
	return &file_contact_proto_enumTypes[1]
}

func (x ContactCard_General_Gender_Options) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContactCard_General_Gender_Options.Descriptor instead.
func (ContactCard_General_Gender_Options) EnumDescriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 5, 2, 0}
}

// Social Media Service
type ContactCard_Social_Media int32

const (
	ContactCard_Social_Instagram ContactCard_Social_Media = 0 // Feed/Post/Link
	ContactCard_Social_TikTok    ContactCard_Social_Media = 1 // Post/Link
	ContactCard_Social_Facebook  ContactCard_Social_Media = 2 // Link Only
	ContactCard_Social_YouTube   ContactCard_Social_Media = 3 // Post/Link
	ContactCard_Social_Medium    ContactCard_Social_Media = 5 // Feed/Post/Link
	ContactCard_Social_Twitter   ContactCard_Social_Media = 6 // Feed/Post/Link
	ContactCard_Social_Snapchat  ContactCard_Social_Media = 7 // Link Only
	ContactCard_Social_Github    ContactCard_Social_Media = 8 // Link Only
	ContactCard_Social_LinkedIn  ContactCard_Social_Media = 9
	ContactCard_Social_Twitch    ContactCard_Social_Media = 10
	ContactCard_Social_Pinterest ContactCard_Social_Media = 11
	ContactCard_Social_Vimeo     ContactCard_Social_Media = 12
	ContactCard_Social_Gumroad   ContactCard_Social_Media = 13
)

// Enum value maps for ContactCard_Social_Media.
var (
	ContactCard_Social_Media_name = map[int32]string{
		0:  "Instagram",
		1:  "TikTok",
		2:  "Facebook",
		3:  "YouTube",
		5:  "Medium",
		6:  "Twitter",
		7:  "Snapchat",
		8:  "Github",
		9:  "LinkedIn",
		10: "Twitch",
		11: "Pinterest",
		12: "Vimeo",
		13: "Gumroad",
	}
	ContactCard_Social_Media_value = map[string]int32{
		"Instagram": 0,
		"TikTok":    1,
		"Facebook":  2,
		"YouTube":   3,
		"Medium":    5,
		"Twitter":   6,
		"Snapchat":  7,
		"Github":    8,
		"LinkedIn":  9,
		"Twitch":    10,
		"Pinterest": 11,
		"Vimeo":     12,
		"Gumroad":   13,
	}
)

func (x ContactCard_Social_Media) Enum() *ContactCard_Social_Media {
	p := new(ContactCard_Social_Media)
	*p = x
	return p
}

func (x ContactCard_Social_Media) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContactCard_Social_Media) Descriptor() protoreflect.EnumDescriptor {
	return file_contact_proto_enumTypes[2].Descriptor()
}

func (ContactCard_Social_Media) Type() protoreflect.EnumType {
	return &file_contact_proto_enumTypes[2]
}

func (x ContactCard_Social_Media) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContactCard_Social_Media.Descriptor instead.
func (ContactCard_Social_Media) EnumDescriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 6, 0}
}

// Music Service
type ContactCard_Social_Music int32

const (
	ContactCard_Social_Spotify    ContactCard_Social_Music = 0
	ContactCard_Social_AppleMusic ContactCard_Social_Music = 1
	ContactCard_Social_SoundCloud ContactCard_Social_Music = 2
)

// Enum value maps for ContactCard_Social_Music.
var (
	ContactCard_Social_Music_name = map[int32]string{
		0: "Spotify",
		1: "AppleMusic",
		2: "SoundCloud",
	}
	ContactCard_Social_Music_value = map[string]int32{
		"Spotify":    0,
		"AppleMusic": 1,
		"SoundCloud": 2,
	}
)

func (x ContactCard_Social_Music) Enum() *ContactCard_Social_Music {
	p := new(ContactCard_Social_Music)
	*p = x
	return p
}

func (x ContactCard_Social_Music) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContactCard_Social_Music) Descriptor() protoreflect.EnumDescriptor {
	return file_contact_proto_enumTypes[3].Descriptor()
}

func (ContactCard_Social_Music) Type() protoreflect.EnumType {
	return &file_contact_proto_enumTypes[3]
}

func (x ContactCard_Social_Music) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContactCard_Social_Music.Descriptor instead.
func (ContactCard_Social_Music) EnumDescriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 6, 1}
}

type ContactCard_Social_Payment int32

const (
	ContactCard_Social_CashApp  ContactCard_Social_Payment = 0
	ContactCard_Social_Venmo    ContactCard_Social_Payment = 1
	ContactCard_Social_PayPal   ContactCard_Social_Payment = 2
	ContactCard_Social_Bitcoin  ContactCard_Social_Payment = 3
	ContactCard_Social_Ethereum ContactCard_Social_Payment = 4
)

// Enum value maps for ContactCard_Social_Payment.
var (
	ContactCard_Social_Payment_name = map[int32]string{
		0: "CashApp",
		1: "Venmo",
		2: "PayPal",
		3: "Bitcoin",
		4: "Ethereum",
	}
	ContactCard_Social_Payment_value = map[string]int32{
		"CashApp":  0,
		"Venmo":    1,
		"PayPal":   2,
		"Bitcoin":  3,
		"Ethereum": 4,
	}
)

func (x ContactCard_Social_Payment) Enum() *ContactCard_Social_Payment {
	p := new(ContactCard_Social_Payment)
	*p = x
	return p
}

func (x ContactCard_Social_Payment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContactCard_Social_Payment) Descriptor() protoreflect.EnumDescriptor {
	return file_contact_proto_enumTypes[4].Descriptor()
}

func (ContactCard_Social_Payment) Type() protoreflect.EnumType {
	return &file_contact_proto_enumTypes[4]
}

func (x ContactCard_Social_Payment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContactCard_Social_Payment.Descriptor instead.
func (ContactCard_Social_Payment) EnumDescriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 6, 2}
}

// Social Tile Visibility
type ContactCard_Social_Visibility int32

const (
	ContactCard_Social_Unknown       ContactCard_Social_Visibility = 0 // No Visibility Set
	ContactCard_Social_Private       ContactCard_Social_Visibility = 1 // Private Account
	ContactCard_Social_Public        ContactCard_Social_Visibility = 2 // Public Account
	ContactCard_Social_PrivateHidden ContactCard_Social_Visibility = 3 // Private and Hidden
	ContactCard_Social_PublicHidden  ContactCard_Social_Visibility = 4 // Public and Hidden
)

// Enum value maps for ContactCard_Social_Visibility.
var (
	ContactCard_Social_Visibility_name = map[int32]string{
		0: "Unknown",
		1: "Private",
		2: "Public",
		3: "PrivateHidden",
		4: "PublicHidden",
	}
	ContactCard_Social_Visibility_value = map[string]int32{
		"Unknown":       0,
		"Private":       1,
		"Public":        2,
		"PrivateHidden": 3,
		"PublicHidden":  4,
	}
)

func (x ContactCard_Social_Visibility) Enum() *ContactCard_Social_Visibility {
	p := new(ContactCard_Social_Visibility)
	*p = x
	return p
}

func (x ContactCard_Social_Visibility) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContactCard_Social_Visibility) Descriptor() protoreflect.EnumDescriptor {
	return file_contact_proto_enumTypes[5].Descriptor()
}

func (ContactCard_Social_Visibility) Type() protoreflect.EnumType {
	return &file_contact_proto_enumTypes[5]
}

func (x ContactCard_Social_Visibility) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContactCard_Social_Visibility.Descriptor instead.
func (ContactCard_Social_Visibility) EnumDescriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 6, 3}
}

// Contact is Extensive User Info that can be passed
type ContactCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPublic  bool                            `protobuf:"varint,1,opt,name=isPublic,proto3" json:"isPublic,omitempty"`                                                                                          // If Contact card is Public
	Profile   *Profile                        `protobuf:"bytes,2,opt,name=profile,proto3" json:"profile,omitempty"`                                                                                             // General Profile Information
	General   *ContactCard_General            `protobuf:"bytes,3,opt,name=general,proto3" json:"general,omitempty"`                                                                                             // Base General Contact Fields, Key is Label
	Design    *ContactCard_Design             `protobuf:"bytes,4,opt,name=design,proto3" json:"design,omitempty"`                                                                                               // Card Design Properties
	Addresses map[string]*ContactCard_Address `protobuf:"bytes,5,rep,name=addresses,proto3" json:"addresses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Address Fields, Key is Label
	Socials   map[string]*ContactCard_Social  `protobuf:"bytes,6,rep,name=socials,proto3" json:"socials,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`     // Social Media Fields, Key is Username
	Websites  map[string]*URLLink             `protobuf:"bytes,7,rep,name=websites,proto3" json:"websites,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`   // Website Links
}

func (x *ContactCard) Reset() {
	*x = ContactCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contact_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCard) ProtoMessage() {}

func (x *ContactCard) ProtoReflect() protoreflect.Message {
	mi := &file_contact_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCard.ProtoReflect.Descriptor instead.
func (*ContactCard) Descriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0}
}

func (x *ContactCard) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *ContactCard) GetProfile() *Profile {
	if x != nil {
		return x.Profile
	}
	return nil
}

func (x *ContactCard) GetGeneral() *ContactCard_General {
	if x != nil {
		return x.General
	}
	return nil
}

func (x *ContactCard) GetDesign() *ContactCard_Design {
	if x != nil {
		return x.Design
	}
	return nil
}

func (x *ContactCard) GetAddresses() map[string]*ContactCard_Address {
	if x != nil {
		return x.Addresses
	}
	return nil
}

func (x *ContactCard) GetSocials() map[string]*ContactCard_Social {
	if x != nil {
		return x.Socials
	}
	return nil
}

func (x *ContactCard) GetWebsites() map[string]*URLLink {
	if x != nil {
		return x.Websites
	}
	return nil
}

// Address: Field for Contact field
type ContactCard_Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsPrimary   bool   `protobuf:"varint,1,opt,name=isPrimary,proto3" json:"isPrimary,omitempty"`    // If this is the Primary field for Address
	Label       string `protobuf:"bytes,2,opt,name=label,proto3" json:"label,omitempty"`             // Address Label for Type
	Street      string `protobuf:"bytes,3,opt,name=street,proto3" json:"street,omitempty"`           // Address First Line Street
	StreetTwo   string `protobuf:"bytes,4,opt,name=streetTwo,proto3" json:"streetTwo,omitempty"`     // Address Second Line Street
	City        string `protobuf:"bytes,5,opt,name=city,proto3" json:"city,omitempty"`               // City of Address
	State       string `protobuf:"bytes,6,opt,name=state,proto3" json:"state,omitempty"`             // Address State
	Zipcode     string `protobuf:"bytes,7,opt,name=zipcode,proto3" json:"zipcode,omitempty"`         // Address Zip Code
	Country     string `protobuf:"bytes,8,opt,name=country,proto3" json:"country,omitempty"`         // Address Country
	CountryCode string `protobuf:"bytes,9,opt,name=countryCode,proto3" json:"countryCode,omitempty"` // Address Country Code
}

func (x *ContactCard_Address) Reset() {
	*x = ContactCard_Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contact_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCard_Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCard_Address) ProtoMessage() {}

func (x *ContactCard_Address) ProtoReflect() protoreflect.Message {
	mi := &file_contact_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCard_Address.ProtoReflect.Descriptor instead.
func (*ContactCard_Address) Descriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 3}
}

func (x *ContactCard_Address) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *ContactCard_Address) GetLabel() string {
	if x != nil {
		return x.Label
	}
	return ""
}

func (x *ContactCard_Address) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *ContactCard_Address) GetStreetTwo() string {
	if x != nil {
		return x.StreetTwo
	}
	return ""
}

func (x *ContactCard_Address) GetCity() string {
	if x != nil {
		return x.City
	}
	return ""
}

func (x *ContactCard_Address) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ContactCard_Address) GetZipcode() string {
	if x != nil {
		return x.Zipcode
	}
	return ""
}

func (x *ContactCard_Address) GetCountry() string {
	if x != nil {
		return x.Country
	}
	return ""
}

func (x *ContactCard_Address) GetCountryCode() string {
	if x != nil {
		return x.CountryCode
	}
	return ""
}

// Design: Card Design Values
type ContactCard_Design struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card    int32                    `protobuf:"varint,1,opt,name=card,proto3" json:"card,omitempty"`                                     // Background Card Value
	Primary ContactCard_Design_Color `protobuf:"varint,2,opt,name=primary,proto3,enum=ContactCard_Design_Color" json:"primary,omitempty"` // Primary Color
	Accent  ContactCard_Design_Color `protobuf:"varint,3,opt,name=accent,proto3,enum=ContactCard_Design_Color" json:"accent,omitempty"`   // Accent Color for Text/Buttons
}

func (x *ContactCard_Design) Reset() {
	*x = ContactCard_Design{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contact_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCard_Design) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCard_Design) ProtoMessage() {}

func (x *ContactCard_Design) ProtoReflect() protoreflect.Message {
	mi := &file_contact_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCard_Design.ProtoReflect.Descriptor instead.
func (*ContactCard_Design) Descriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 4}
}

func (x *ContactCard_Design) GetCard() int32 {
	if x != nil {
		return x.Card
	}
	return 0
}

func (x *ContactCard_Design) GetPrimary() ContactCard_Design_Color {
	if x != nil {
		return x.Primary
	}
	return ContactCard_Design_Transparent
}

func (x *ContactCard_Design) GetAccent() ContactCard_Design_Color {
	if x != nil {
		return x.Accent
	}
	return ContactCard_Design_Transparent
}

// Field : General Field for Contact field
type ContactCard_General struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bio      string                      `protobuf:"bytes,1,opt,name=bio,proto3" json:"bio,omitempty"`           // If this is the Primary field for Kind
	Username string                      `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"` // Type of Field
	Name     *ContactCard_General_Name   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Date     *ContactCard_General_Date   `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	Gender   *ContactCard_General_Gender `protobuf:"bytes,5,opt,name=gender,proto3" json:"gender,omitempty"`
	Phone    *ContactCard_General_Phone  `protobuf:"bytes,6,opt,name=phone,proto3" json:"phone,omitempty"`
	Email    *ContactCard_General_Email  `protobuf:"bytes,7,opt,name=email,proto3" json:"email,omitempty"`
	Title    *ContactCard_General_Title  `protobuf:"bytes,8,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *ContactCard_General) Reset() {
	*x = ContactCard_General{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contact_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCard_General) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCard_General) ProtoMessage() {}

func (x *ContactCard_General) ProtoReflect() protoreflect.Message {
	mi := &file_contact_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCard_General.ProtoReflect.Descriptor instead.
func (*ContactCard_General) Descriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 5}
}

func (x *ContactCard_General) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *ContactCard_General) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ContactCard_General) GetName() *ContactCard_General_Name {
	if x != nil {
		return x.Name
	}
	return nil
}

func (x *ContactCard_General) GetDate() *ContactCard_General_Date {
	if x != nil {
		return x.Date
	}
	return nil
}

func (x *ContactCard_General) GetGender() *ContactCard_General_Gender {
	if x != nil {
		return x.Gender
	}
	return nil
}

func (x *ContactCard_General) GetPhone() *ContactCard_General_Phone {
	if x != nil {
		return x.Phone
	}
	return nil
}

func (x *ContactCard_General) GetEmail() *ContactCard_General_Email {
	if x != nil {
		return x.Email
	}
	return nil
}

func (x *ContactCard_General) GetTitle() *ContactCard_General_Title {
	if x != nil {
		return x.Title
	}
	return nil
}

// Social: Field provides Display Information and Provider Information
type ContactCard_Social struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Properties
	IsPrimary  bool                          `protobuf:"varint,1,opt,name=isPrimary,proto3" json:"isPrimary,omitempty"` // If this is the Primary field for SocialMedia Provider
	Name       string                        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Username   string                        `protobuf:"bytes,3,opt,name=username,proto3" json:"username,omitempty"`
	Link       string                        `protobuf:"bytes,4,opt,name=link,proto3" json:"link,omitempty"`
	Picture    string                        `protobuf:"bytes,5,opt,name=picture,proto3" json:"picture,omitempty"`
	Bio        string                        `protobuf:"bytes,6,opt,name=bio,proto3" json:"bio,omitempty"`
	Visibility ContactCard_Social_Visibility `protobuf:"varint,7,opt,name=visibility,proto3,enum=ContactCard_Social_Visibility" json:"visibility,omitempty"` // Is the User's Account Private
	// Types that are assignable to Tile:
	//	*ContactCard_Social_Icon_
	//	*ContactCard_Social_Feed_
	//	*ContactCard_Social_Playlist_
	//	*ContactCard_Social_Post_
	Tile isContactCard_Social_Tile `protobuf_oneof:"tile"`
	// Types that are assignable to Provider:
	//	*ContactCard_Social_Media_
	//	*ContactCard_Social_Music_
	//	*ContactCard_Social_Payment_
	Provider isContactCard_Social_Provider `protobuf_oneof:"provider"`
}

func (x *ContactCard_Social) Reset() {
	*x = ContactCard_Social{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contact_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCard_Social) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCard_Social) ProtoMessage() {}

func (x *ContactCard_Social) ProtoReflect() protoreflect.Message {
	mi := &file_contact_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCard_Social.ProtoReflect.Descriptor instead.
func (*ContactCard_Social) Descriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 6}
}

func (x *ContactCard_Social) GetIsPrimary() bool {
	if x != nil {
		return x.IsPrimary
	}
	return false
}

func (x *ContactCard_Social) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ContactCard_Social) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *ContactCard_Social) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *ContactCard_Social) GetPicture() string {
	if x != nil {
		return x.Picture
	}
	return ""
}

func (x *ContactCard_Social) GetBio() string {
	if x != nil {
		return x.Bio
	}
	return ""
}

func (x *ContactCard_Social) GetVisibility() ContactCard_Social_Visibility {
	if x != nil {
		return x.Visibility
	}
	return ContactCard_Social_Unknown
}

func (m *ContactCard_Social) GetTile() isContactCard_Social_Tile {
	if m != nil {
		return m.Tile
	}
	return nil
}

func (x *ContactCard_Social) GetIcon() *ContactCard_Social_Icon {
	if x, ok := x.GetTile().(*ContactCard_Social_Icon_); ok {
		return x.Icon
	}
	return nil
}

func (x *ContactCard_Social) GetFeed() *ContactCard_Social_Feed {
	if x, ok := x.GetTile().(*ContactCard_Social_Feed_); ok {
		return x.Feed
	}
	return nil
}

func (x *ContactCard_Social) GetPlaylist() *ContactCard_Social_Playlist {
	if x, ok := x.GetTile().(*ContactCard_Social_Playlist_); ok {
		return x.Playlist
	}
	return nil
}

func (x *ContactCard_Social) GetPost() *ContactCard_Social_Post {
	if x, ok := x.GetTile().(*ContactCard_Social_Post_); ok {
		return x.Post
	}
	return nil
}

func (m *ContactCard_Social) GetProvider() isContactCard_Social_Provider {
	if m != nil {
		return m.Provider
	}
	return nil
}

func (x *ContactCard_Social) GetMedia() ContactCard_Social_Media {
	if x, ok := x.GetProvider().(*ContactCard_Social_Media_); ok {
		return x.Media
	}
	return ContactCard_Social_Instagram
}

func (x *ContactCard_Social) GetMusic() ContactCard_Social_Music {
	if x, ok := x.GetProvider().(*ContactCard_Social_Music_); ok {
		return x.Music
	}
	return ContactCard_Social_Spotify
}

func (x *ContactCard_Social) GetPayment() ContactCard_Social_Payment {
	if x, ok := x.GetProvider().(*ContactCard_Social_Payment_); ok {
		return x.Payment
	}
	return ContactCard_Social_CashApp
}

type isContactCard_Social_Tile interface {
	isContactCard_Social_Tile()
}

type ContactCard_Social_Icon_ struct {
	Icon *ContactCard_Social_Icon `protobuf:"bytes,10,opt,name=icon,proto3,oneof"`
}

type ContactCard_Social_Feed_ struct {
	Feed *ContactCard_Social_Feed `protobuf:"bytes,11,opt,name=feed,proto3,oneof"`
}

type ContactCard_Social_Playlist_ struct {
	Playlist *ContactCard_Social_Playlist `protobuf:"bytes,12,opt,name=playlist,proto3,oneof"`
}

type ContactCard_Social_Post_ struct {
	Post *ContactCard_Social_Post `protobuf:"bytes,13,opt,name=post,proto3,oneof"`
}

func (*ContactCard_Social_Icon_) isContactCard_Social_Tile() {}

func (*ContactCard_Social_Feed_) isContactCard_Social_Tile() {}

func (*ContactCard_Social_Playlist_) isContactCard_Social_Tile() {}

func (*ContactCard_Social_Post_) isContactCard_Social_Tile() {}

type isContactCard_Social_Provider interface {
	isContactCard_Social_Provider()
}

type ContactCard_Social_Media_ struct {
	Media ContactCard_Social_Media `protobuf:"varint,14,opt,name=media,proto3,enum=ContactCard_Social_Media,oneof"`
}

type ContactCard_Social_Music_ struct {
	Music ContactCard_Social_Music `protobuf:"varint,15,opt,name=music,proto3,enum=ContactCard_Social_Music,oneof"`
}

type ContactCard_Social_Payment_ struct {
	Payment ContactCard_Social_Payment `protobuf:"varint,16,opt,name=payment,proto3,enum=ContactCard_Social_Payment,oneof"`
}

func (*ContactCard_Social_Media_) isContactCard_Social_Provider() {}

func (*ContactCard_Social_Music_) isContactCard_Social_Provider() {}

func (*ContactCard_Social_Payment_) isContactCard_Social_Provider() {}

type ContactCard_General_Name struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix     string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Suffix     string `protobuf:"bytes,2,opt,name=suffix,proto3" json:"suffix,omitempty"`
	MiddleName string `protobuf:"bytes,3,opt,name=middleName,proto3" json:"middleName,omitempty"`
	NickName   string `protobuf:"bytes,4,opt,name=nickName,proto3" json:"nickName,omitempty"`
}

func (x *ContactCard_General_Name) Reset() {
	*x = ContactCard_General_Name{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contact_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCard_General_Name) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCard_General_Name) ProtoMessage() {}

func (x *ContactCard_General_Name) ProtoReflect() protoreflect.Message {
	mi := &file_contact_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCard_General_Name.ProtoReflect.Descriptor instead.
func (*ContactCard_General_Name) Descriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 5, 0}
}

func (x *ContactCard_General_Name) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *ContactCard_General_Name) GetSuffix() string {
	if x != nil {
		return x.Suffix
	}
	return ""
}

func (x *ContactCard_General_Name) GetMiddleName() string {
	if x != nil {
		return x.MiddleName
	}
	return ""
}

func (x *ContactCard_General_Name) GetNickName() string {
	if x != nil {
		return x.NickName
	}
	return ""
}

type ContactCard_General_Date struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Birthday int32            `protobuf:"varint,1,opt,name=birthday,proto3" json:"birthday,omitempty"`
	Dates    map[string]int32 `protobuf:"bytes,2,rep,name=dates,proto3" json:"dates,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
}

func (x *ContactCard_General_Date) Reset() {
	*x = ContactCard_General_Date{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contact_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCard_General_Date) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCard_General_Date) ProtoMessage() {}

func (x *ContactCard_General_Date) ProtoReflect() protoreflect.Message {
	mi := &file_contact_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCard_General_Date.ProtoReflect.Descriptor instead.
func (*ContactCard_General_Date) Descriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 5, 1}
}

func (x *ContactCard_General_Date) GetBirthday() int32 {
	if x != nil {
		return x.Birthday
	}
	return 0
}

func (x *ContactCard_General_Date) GetDates() map[string]int32 {
	if x != nil {
		return x.Dates
	}
	return nil
}

type ContactCard_General_Gender struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value ContactCard_General_Gender_Options `protobuf:"varint,1,opt,name=value,proto3,enum=ContactCard_General_Gender_Options" json:"value,omitempty"`
}

func (x *ContactCard_General_Gender) Reset() {
	*x = ContactCard_General_Gender{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contact_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCard_General_Gender) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCard_General_Gender) ProtoMessage() {}

func (x *ContactCard_General_Gender) ProtoReflect() protoreflect.Message {
	mi := &file_contact_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCard_General_Gender.ProtoReflect.Descriptor instead.
func (*ContactCard_General_Gender) Descriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 5, 2}
}

func (x *ContactCard_General_Gender) GetValue() ContactCard_General_Gender_Options {
	if x != nil {
		return x.Value
	}
	return ContactCard_General_Gender_Unspecified
}

type ContactCard_General_Phone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Primary string            `protobuf:"bytes,1,opt,name=primary,proto3" json:"primary,omitempty"`
	Numbers map[string]string `protobuf:"bytes,2,rep,name=numbers,proto3" json:"numbers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ContactCard_General_Phone) Reset() {
	*x = ContactCard_General_Phone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contact_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCard_General_Phone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCard_General_Phone) ProtoMessage() {}

func (x *ContactCard_General_Phone) ProtoReflect() protoreflect.Message {
	mi := &file_contact_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCard_General_Phone.ProtoReflect.Descriptor instead.
func (*ContactCard_General_Phone) Descriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 5, 3}
}

func (x *ContactCard_General_Phone) GetPrimary() string {
	if x != nil {
		return x.Primary
	}
	return ""
}

func (x *ContactCard_General_Phone) GetNumbers() map[string]string {
	if x != nil {
		return x.Numbers
	}
	return nil
}

type ContactCard_General_Email struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Primary   string            `protobuf:"bytes,1,opt,name=primary,proto3" json:"primary,omitempty"`
	Addresses map[string]string `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *ContactCard_General_Email) Reset() {
	*x = ContactCard_General_Email{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contact_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCard_General_Email) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCard_General_Email) ProtoMessage() {}

func (x *ContactCard_General_Email) ProtoReflect() protoreflect.Message {
	mi := &file_contact_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCard_General_Email.ProtoReflect.Descriptor instead.
func (*ContactCard_General_Email) Descriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 5, 4}
}

func (x *ContactCard_General_Email) GetPrimary() string {
	if x != nil {
		return x.Primary
	}
	return ""
}

func (x *ContactCard_General_Email) GetAddresses() map[string]string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type ContactCard_General_Title struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Company  string `protobuf:"bytes,1,opt,name=company,proto3" json:"company,omitempty"`
	Position string `protobuf:"bytes,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *ContactCard_General_Title) Reset() {
	*x = ContactCard_General_Title{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contact_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCard_General_Title) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCard_General_Title) ProtoMessage() {}

func (x *ContactCard_General_Title) ProtoReflect() protoreflect.Message {
	mi := &file_contact_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCard_General_Title.ProtoReflect.Descriptor instead.
func (*ContactCard_General_Title) Descriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 5, 5}
}

func (x *ContactCard_General_Title) GetCompany() string {
	if x != nil {
		return x.Company
	}
	return ""
}

func (x *ContactCard_General_Title) GetPosition() string {
	if x != nil {
		return x.Position
	}
	return ""
}

type ContactCard_Social_Icon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Index  int32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`   // Position in Contact Array
	Row    int32 `protobuf:"varint,3,opt,name=row,proto3" json:"row,omitempty"`       // Row Location
	Column int32 `protobuf:"varint,4,opt,name=column,proto3" json:"column,omitempty"` // Column Location
	Size   int32 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`     // Size of Tile
}

func (x *ContactCard_Social_Icon) Reset() {
	*x = ContactCard_Social_Icon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contact_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCard_Social_Icon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCard_Social_Icon) ProtoMessage() {}

func (x *ContactCard_Social_Icon) ProtoReflect() protoreflect.Message {
	mi := &file_contact_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCard_Social_Icon.ProtoReflect.Descriptor instead.
func (*ContactCard_Social_Icon) Descriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 6, 0}
}

func (x *ContactCard_Social_Icon) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ContactCard_Social_Icon) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ContactCard_Social_Icon) GetRow() int32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *ContactCard_Social_Icon) GetColumn() int32 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *ContactCard_Social_Icon) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ContactCard_Social_Feed struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Index  int32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`   // Position in Contact Array
	Row    int32 `protobuf:"varint,3,opt,name=row,proto3" json:"row,omitempty"`       // Row Location
	Column int32 `protobuf:"varint,4,opt,name=column,proto3" json:"column,omitempty"` // Column Location
	Size   int32 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`     // Size of Tile
}

func (x *ContactCard_Social_Feed) Reset() {
	*x = ContactCard_Social_Feed{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contact_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCard_Social_Feed) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCard_Social_Feed) ProtoMessage() {}

func (x *ContactCard_Social_Feed) ProtoReflect() protoreflect.Message {
	mi := &file_contact_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCard_Social_Feed.ProtoReflect.Descriptor instead.
func (*ContactCard_Social_Feed) Descriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 6, 1}
}

func (x *ContactCard_Social_Feed) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ContactCard_Social_Feed) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ContactCard_Social_Feed) GetRow() int32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *ContactCard_Social_Feed) GetColumn() int32 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *ContactCard_Social_Feed) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ContactCard_Social_Playlist struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Index  int32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`   // Position in Contact Array
	Row    int32 `protobuf:"varint,3,opt,name=row,proto3" json:"row,omitempty"`       // Row Location
	Column int32 `protobuf:"varint,4,opt,name=column,proto3" json:"column,omitempty"` // Column Location
	Size   int32 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`     // Size of Tile
}

func (x *ContactCard_Social_Playlist) Reset() {
	*x = ContactCard_Social_Playlist{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contact_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCard_Social_Playlist) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCard_Social_Playlist) ProtoMessage() {}

func (x *ContactCard_Social_Playlist) ProtoReflect() protoreflect.Message {
	mi := &file_contact_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCard_Social_Playlist.ProtoReflect.Descriptor instead.
func (*ContactCard_Social_Playlist) Descriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 6, 2}
}

func (x *ContactCard_Social_Playlist) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ContactCard_Social_Playlist) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ContactCard_Social_Playlist) GetRow() int32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *ContactCard_Social_Playlist) GetColumn() int32 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *ContactCard_Social_Playlist) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type ContactCard_Social_Post struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page   int32 `protobuf:"varint,1,opt,name=page,proto3" json:"page,omitempty"`
	Index  int32 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`   // Position in Contact Array
	Row    int32 `protobuf:"varint,3,opt,name=row,proto3" json:"row,omitempty"`       // Row Location
	Column int32 `protobuf:"varint,4,opt,name=column,proto3" json:"column,omitempty"` // Column Location
	Size   int32 `protobuf:"varint,5,opt,name=size,proto3" json:"size,omitempty"`     // Size of Tile
}

func (x *ContactCard_Social_Post) Reset() {
	*x = ContactCard_Social_Post{}
	if protoimpl.UnsafeEnabled {
		mi := &file_contact_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContactCard_Social_Post) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContactCard_Social_Post) ProtoMessage() {}

func (x *ContactCard_Social_Post) ProtoReflect() protoreflect.Message {
	mi := &file_contact_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContactCard_Social_Post.ProtoReflect.Descriptor instead.
func (*ContactCard_Social_Post) Descriptor() ([]byte, []int) {
	return file_contact_proto_rawDescGZIP(), []int{0, 6, 3}
}

func (x *ContactCard_Social_Post) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ContactCard_Social_Post) GetIndex() int32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *ContactCard_Social_Post) GetRow() int32 {
	if x != nil {
		return x.Row
	}
	return 0
}

func (x *ContactCard_Social_Post) GetColumn() int32 {
	if x != nil {
		return x.Column
	}
	return 0
}

func (x *ContactCard_Social_Post) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

var File_contact_proto protoreflect.FileDescriptor

var file_contact_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x0a, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x8f, 0x1d, 0x0a, 0x0b, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62,
	0x6c, 0x69, 0x63, 0x12, 0x22, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x52, 0x07,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x2b, 0x0a, 0x06, 0x64, 0x65, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x52, 0x06, 0x64, 0x65,
	0x73, 0x69, 0x67, 0x6e, 0x12, 0x39, 0x0a, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x45,
	0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12,
	0x33, 0x0a, 0x07, 0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x53,
	0x6f, 0x63, 0x69, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x73, 0x6f, 0x63,
	0x69, 0x61, 0x6c, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x73,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x2e, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x77, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x73, 0x1a, 0x52, 0x0a, 0x0e,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x2a, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x41, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x1a, 0x4f, 0x0a, 0x0c, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x29, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x2e,
	0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x45, 0x0a, 0x0d, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xf3, 0x01, 0x0a, 0x07, 0x41, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x54, 0x77, 0x6f, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x54, 0x77, 0x6f, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x69,
	0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x7a, 0x69, 0x70, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x7a, 0x69, 0x70, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x20, 0x0a, 0x0b,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x1a, 0xb9,
	0x02, 0x0a, 0x06, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x61, 0x72,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x61, 0x72, 0x64, 0x12, 0x33, 0x0a,
	0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x44, 0x65, 0x73,
	0x69, 0x67, 0x6e, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61,
	0x72, 0x79, 0x12, 0x31, 0x0a, 0x06, 0x61, 0x63, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x19, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x2e, 0x44, 0x65, 0x73, 0x69, 0x67, 0x6e, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x06, 0x61,
	0x63, 0x63, 0x65, 0x6e, 0x74, 0x22, 0xb2, 0x01, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12,
	0x0f, 0x0a, 0x0b, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x10, 0x00,
	0x12, 0x0b, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x61, 0x72, 0x79, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08,
	0x54, 0x65, 0x72, 0x74, 0x69, 0x61, 0x72, 0x79, 0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x72,
	0x69, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65,
	0x6e, 0x74, 0x50, 0x69, 0x6e, 0x6b, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65,
	0x6e, 0x74, 0x42, 0x6c, 0x75, 0x65, 0x10, 0x06, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x63, 0x63, 0x65,
	0x6e, 0x74, 0x4e, 0x61, 0x76, 0x79, 0x10, 0x07, 0x12, 0x10, 0x0a, 0x0c, 0x41, 0x63, 0x63, 0x65,
	0x6e, 0x74, 0x50, 0x75, 0x72, 0x70, 0x6c, 0x65, 0x10, 0x08, 0x12, 0x09, 0x0a, 0x05, 0x42, 0x6c,
	0x61, 0x63, 0x6b, 0x10, 0x09, 0x12, 0x09, 0x0a, 0x05, 0x57, 0x68, 0x69, 0x74, 0x65, 0x10, 0x0a,
	0x12, 0x08, 0x0a, 0x04, 0x47, 0x72, 0x65, 0x79, 0x10, 0x0b, 0x1a, 0xf3, 0x08, 0x0a, 0x07, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x4e, 0x61, 0x6d, 0x65, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x2d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x2e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64,
	0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x52,
	0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x43, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x50, 0x68, 0x6f,
	0x6e, 0x65, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x30, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x43, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c,
	0x2e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x1a, 0x72, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x75, 0x66, 0x66, 0x69, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x75, 0x66, 0x66, 0x69, 0x78, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6d, 0x69, 0x64, 0x64, 0x6c,
	0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x4e, 0x61, 0x6d,
	0x65, 0x1a, 0x98, 0x01, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x62, 0x69,
	0x72, 0x74, 0x68, 0x64, 0x61, 0x79, 0x12, 0x3a, 0x0a, 0x05, 0x64, 0x61, 0x74, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x44, 0x61, 0x74, 0x65,
	0x2e, 0x44, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x64, 0x61, 0x74,
	0x65, 0x73, 0x1a, 0x38, 0x0a, 0x0a, 0x44, 0x61, 0x74, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x75, 0x0a, 0x06,
	0x47, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x39, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43,
	0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x47, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x22, 0x30, 0x0a, 0x07, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x0f, 0x0a, 0x0b,
	0x55, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69, 0x65, 0x64, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x4d, 0x61, 0x6c, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x65, 0x6d, 0x61, 0x6c,
	0x65, 0x10, 0x02, 0x1a, 0xa0, 0x01, 0x0a, 0x05, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x41, 0x0a, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65,
	0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x6c, 0x2e, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x2e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x07, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x73, 0x1a, 0x3a, 0x0a, 0x0c, 0x4e, 0x75,
	0x6d, 0x62, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0xa8, 0x01, 0x0a, 0x05, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x47, 0x0a, 0x09, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x6c, 0x2e, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x1a, 0x3c, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x65, 0x73,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38,
	0x01, 0x1a, 0x3d, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d,
	0x70, 0x61, 0x6e, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x1a, 0xa6, 0x0b, 0x0a, 0x06, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x69,
	0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09,
	0x69, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x70, 0x69, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x62, 0x69, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x62, 0x69, 0x6f, 0x12, 0x3e, 0x0a, 0x0a, 0x76, 0x69, 0x73,
	0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69,
	0x61, 0x6c, 0x2e, 0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0a, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x2e, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x49, 0x63, 0x6f,
	0x6e, 0x48, 0x00, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x04, 0x66, 0x65, 0x65,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x46, 0x65, 0x65,
	0x64, 0x48, 0x00, 0x52, 0x04, 0x66, 0x65, 0x65, 0x64, 0x12, 0x3a, 0x0a, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c,
	0x2e, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x79, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72,
	0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x04, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61,
	0x72, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x48,
	0x01, 0x52, 0x05, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x12, 0x31, 0x0a, 0x05, 0x6d, 0x75, 0x73, 0x69,
	0x63, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x2e, 0x4d, 0x75, 0x73,
	0x69, 0x63, 0x48, 0x01, 0x52, 0x05, 0x6d, 0x75, 0x73, 0x69, 0x63, 0x12, 0x37, 0x0a, 0x07, 0x70,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x53, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x2e, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x01, 0x52, 0x07, 0x70, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x1a, 0x6e, 0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x1a, 0x6e, 0x0a, 0x04, 0x46, 0x65, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f, 0x77, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x1a, 0x72, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x6c, 0x69, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f,
	0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x1a, 0x6e, 0x0a, 0x04, 0x50, 0x6f, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x70, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x6f,
	0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x6f, 0x77, 0x12, 0x16, 0x0a, 0x06,
	0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xb1, 0x01, 0x0a, 0x05, 0x4d, 0x65, 0x64,
	0x69, 0x61, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x67, 0x72, 0x61, 0x6d, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x69, 0x6b, 0x54, 0x6f, 0x6b, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x59,
	0x6f, 0x75, 0x54, 0x75, 0x62, 0x65, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x4d, 0x65, 0x64, 0x69,
	0x75, 0x6d, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x10,
	0x06, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x6e, 0x61, 0x70, 0x63, 0x68, 0x61, 0x74, 0x10, 0x07, 0x12,
	0x0a, 0x0a, 0x06, 0x47, 0x69, 0x74, 0x68, 0x75, 0x62, 0x10, 0x08, 0x12, 0x0c, 0x0a, 0x08, 0x4c,
	0x69, 0x6e, 0x6b, 0x65, 0x64, 0x49, 0x6e, 0x10, 0x09, 0x12, 0x0a, 0x0a, 0x06, 0x54, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x10, 0x0a, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x65,
	0x73, 0x74, 0x10, 0x0b, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x69, 0x6d, 0x65, 0x6f, 0x10, 0x0c, 0x12,
	0x0b, 0x0a, 0x07, 0x47, 0x75, 0x6d, 0x72, 0x6f, 0x61, 0x64, 0x10, 0x0d, 0x22, 0x34, 0x0a, 0x05,
	0x4d, 0x75, 0x73, 0x69, 0x63, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x70, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x6c, 0x65, 0x4d, 0x75, 0x73, 0x69, 0x63,
	0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x53, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6c, 0x6f, 0x75, 0x64,
	0x10, 0x02, 0x22, 0x48, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0b, 0x0a,
	0x07, 0x43, 0x61, 0x73, 0x68, 0x41, 0x70, 0x70, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x56, 0x65,
	0x6e, 0x6d, 0x6f, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x61, 0x79, 0x50, 0x61, 0x6c, 0x10,
	0x02, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x69, 0x74, 0x63, 0x6f, 0x69, 0x6e, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x45, 0x74, 0x68, 0x65, 0x72, 0x65, 0x75, 0x6d, 0x10, 0x04, 0x22, 0x57, 0x0a, 0x0a,
	0x56, 0x69, 0x73, 0x69, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x72, 0x69, 0x76, 0x61,
	0x74, 0x65, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x10, 0x02,
	0x12, 0x11, 0x0a, 0x0d, 0x50, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x48, 0x69, 0x64, 0x64, 0x65,
	0x6e, 0x10, 0x03, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x48, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x10, 0x04, 0x42, 0x06, 0x0a, 0x04, 0x74, 0x69, 0x6c, 0x65, 0x42, 0x0a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x76, 0x69, 0x64, 0x65, 0x72, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_contact_proto_rawDescOnce sync.Once
	file_contact_proto_rawDescData = file_contact_proto_rawDesc
)

func file_contact_proto_rawDescGZIP() []byte {
	file_contact_proto_rawDescOnce.Do(func() {
		file_contact_proto_rawDescData = protoimpl.X.CompressGZIP(file_contact_proto_rawDescData)
	})
	return file_contact_proto_rawDescData
}

var file_contact_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_contact_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_contact_proto_goTypes = []interface{}{
	(ContactCard_Design_Color)(0),           // 0: ContactCard.Design.Color
	(ContactCard_General_Gender_Options)(0), // 1: ContactCard.General.Gender.Options
	(ContactCard_Social_Media)(0),           // 2: ContactCard.Social.Media
	(ContactCard_Social_Music)(0),           // 3: ContactCard.Social.Music
	(ContactCard_Social_Payment)(0),         // 4: ContactCard.Social.Payment
	(ContactCard_Social_Visibility)(0),      // 5: ContactCard.Social.Visibility
	(*ContactCard)(nil),                     // 6: ContactCard
	nil,                                     // 7: ContactCard.AddressesEntry
	nil,                                     // 8: ContactCard.SocialsEntry
	nil,                                     // 9: ContactCard.WebsitesEntry
	(*ContactCard_Address)(nil),             // 10: ContactCard.Address
	(*ContactCard_Design)(nil),              // 11: ContactCard.Design
	(*ContactCard_General)(nil),             // 12: ContactCard.General
	(*ContactCard_Social)(nil),              // 13: ContactCard.Social
	(*ContactCard_General_Name)(nil),        // 14: ContactCard.General.Name
	(*ContactCard_General_Date)(nil),        // 15: ContactCard.General.Date
	(*ContactCard_General_Gender)(nil),      // 16: ContactCard.General.Gender
	(*ContactCard_General_Phone)(nil),       // 17: ContactCard.General.Phone
	(*ContactCard_General_Email)(nil),       // 18: ContactCard.General.Email
	(*ContactCard_General_Title)(nil),       // 19: ContactCard.General.Title
	nil,                                     // 20: ContactCard.General.Date.DatesEntry
	nil,                                     // 21: ContactCard.General.Phone.NumbersEntry
	nil,                                     // 22: ContactCard.General.Email.AddressesEntry
	(*ContactCard_Social_Icon)(nil),         // 23: ContactCard.Social.Icon
	(*ContactCard_Social_Feed)(nil),         // 24: ContactCard.Social.Feed
	(*ContactCard_Social_Playlist)(nil),     // 25: ContactCard.Social.Playlist
	(*ContactCard_Social_Post)(nil),         // 26: ContactCard.Social.Post
	(*Profile)(nil),                         // 27: Profile
	(*URLLink)(nil),                         // 28: URLLink
}
var file_contact_proto_depIdxs = []int32{
	27, // 0: ContactCard.profile:type_name -> Profile
	12, // 1: ContactCard.general:type_name -> ContactCard.General
	11, // 2: ContactCard.design:type_name -> ContactCard.Design
	7,  // 3: ContactCard.addresses:type_name -> ContactCard.AddressesEntry
	8,  // 4: ContactCard.socials:type_name -> ContactCard.SocialsEntry
	9,  // 5: ContactCard.websites:type_name -> ContactCard.WebsitesEntry
	10, // 6: ContactCard.AddressesEntry.value:type_name -> ContactCard.Address
	13, // 7: ContactCard.SocialsEntry.value:type_name -> ContactCard.Social
	28, // 8: ContactCard.WebsitesEntry.value:type_name -> URLLink
	0,  // 9: ContactCard.Design.primary:type_name -> ContactCard.Design.Color
	0,  // 10: ContactCard.Design.accent:type_name -> ContactCard.Design.Color
	14, // 11: ContactCard.General.name:type_name -> ContactCard.General.Name
	15, // 12: ContactCard.General.date:type_name -> ContactCard.General.Date
	16, // 13: ContactCard.General.gender:type_name -> ContactCard.General.Gender
	17, // 14: ContactCard.General.phone:type_name -> ContactCard.General.Phone
	18, // 15: ContactCard.General.email:type_name -> ContactCard.General.Email
	19, // 16: ContactCard.General.title:type_name -> ContactCard.General.Title
	5,  // 17: ContactCard.Social.visibility:type_name -> ContactCard.Social.Visibility
	23, // 18: ContactCard.Social.icon:type_name -> ContactCard.Social.Icon
	24, // 19: ContactCard.Social.feed:type_name -> ContactCard.Social.Feed
	25, // 20: ContactCard.Social.playlist:type_name -> ContactCard.Social.Playlist
	26, // 21: ContactCard.Social.post:type_name -> ContactCard.Social.Post
	2,  // 22: ContactCard.Social.media:type_name -> ContactCard.Social.Media
	3,  // 23: ContactCard.Social.music:type_name -> ContactCard.Social.Music
	4,  // 24: ContactCard.Social.payment:type_name -> ContactCard.Social.Payment
	20, // 25: ContactCard.General.Date.dates:type_name -> ContactCard.General.Date.DatesEntry
	1,  // 26: ContactCard.General.Gender.value:type_name -> ContactCard.General.Gender.Options
	21, // 27: ContactCard.General.Phone.numbers:type_name -> ContactCard.General.Phone.NumbersEntry
	22, // 28: ContactCard.General.Email.addresses:type_name -> ContactCard.General.Email.AddressesEntry
	29, // [29:29] is the sub-list for method output_type
	29, // [29:29] is the sub-list for method input_type
	29, // [29:29] is the sub-list for extension type_name
	29, // [29:29] is the sub-list for extension extendee
	0,  // [0:29] is the sub-list for field type_name
}

func init() { file_contact_proto_init() }
func file_contact_proto_init() {
	if File_contact_proto != nil {
		return
	}
	file_data_proto_init()
	file_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_contact_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contact_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCard_Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contact_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCard_Design); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contact_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCard_General); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contact_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCard_Social); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contact_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCard_General_Name); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contact_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCard_General_Date); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contact_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCard_General_Gender); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contact_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCard_General_Phone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contact_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCard_General_Email); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contact_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCard_General_Title); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contact_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCard_Social_Icon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contact_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCard_Social_Feed); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contact_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCard_Social_Playlist); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_contact_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContactCard_Social_Post); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_contact_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*ContactCard_Social_Icon_)(nil),
		(*ContactCard_Social_Feed_)(nil),
		(*ContactCard_Social_Playlist_)(nil),
		(*ContactCard_Social_Post_)(nil),
		(*ContactCard_Social_Media_)(nil),
		(*ContactCard_Social_Music_)(nil),
		(*ContactCard_Social_Payment_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_contact_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_contact_proto_goTypes,
		DependencyIndexes: file_contact_proto_depIdxs,
		EnumInfos:         file_contact_proto_enumTypes,
		MessageInfos:      file_contact_proto_msgTypes,
	}.Build()
	File_contact_proto = out.File
	file_contact_proto_rawDesc = nil
	file_contact_proto_goTypes = nil
	file_contact_proto_depIdxs = nil
}
