// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: api.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RestMethodType int32

const (
	RestMethodType_DEFAULT RestMethodType = 0
	RestMethodType_GET     RestMethodType = 1
	RestMethodType_PUT     RestMethodType = 2
	RestMethodType_POST    RestMethodType = 3
)

// Enum value maps for RestMethodType.
var (
	RestMethodType_name = map[int32]string{
		0: "DEFAULT",
		1: "GET",
		2: "PUT",
		3: "POST",
	}
	RestMethodType_value = map[string]int32{
		"DEFAULT": 0,
		"GET":     1,
		"PUT":     2,
		"POST":    3,
	}
)

func (x RestMethodType) Enum() *RestMethodType {
	p := new(RestMethodType)
	*p = x
	return p
}

func (x RestMethodType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RestMethodType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[0].Descriptor()
}

func (RestMethodType) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[0]
}

func (x RestMethodType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RestMethodType.Descriptor instead.
func (RestMethodType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

// Connection Request Type
type ConnectionRequest_Type int32

const (
	ConnectionRequest_CONNECT ConnectionRequest_Type = 0
	ConnectionRequest_STORJ   ConnectionRequest_Type = 1
	ConnectionRequest_LINK    ConnectionRequest_Type = 2
	ConnectionRequest_AUTH    ConnectionRequest_Type = 3
)

// Enum value maps for ConnectionRequest_Type.
var (
	ConnectionRequest_Type_name = map[int32]string{
		0: "CONNECT",
		1: "STORJ",
		2: "LINK",
		3: "AUTH",
	}
	ConnectionRequest_Type_value = map[string]int32{
		"CONNECT": 0,
		"STORJ":   1,
		"LINK":    2,
		"AUTH":    3,
	}
)

func (x ConnectionRequest_Type) Enum() *ConnectionRequest_Type {
	p := new(ConnectionRequest_Type)
	*p = x
	return p
}

func (x ConnectionRequest_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConnectionRequest_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[1].Descriptor()
}

func (ConnectionRequest_Type) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[1]
}

func (x ConnectionRequest_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConnectionRequest_Type.Descriptor instead.
func (ConnectionRequest_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1, 0}
}

type InviteResponse_Type int32

const (
	InviteResponse_None        InviteResponse_Type = 0
	InviteResponse_Transfer    InviteResponse_Type = 1
	InviteResponse_Contact     InviteResponse_Type = 2
	InviteResponse_FlatContact InviteResponse_Type = 3
	InviteResponse_Cancel      InviteResponse_Type = 4
)

// Enum value maps for InviteResponse_Type.
var (
	InviteResponse_Type_name = map[int32]string{
		0: "None",
		1: "Transfer",
		2: "Contact",
		3: "FlatContact",
		4: "Cancel",
	}
	InviteResponse_Type_value = map[string]int32{
		"None":        0,
		"Transfer":    1,
		"Contact":     2,
		"FlatContact": 3,
		"Cancel":      4,
	}
)

func (x InviteResponse_Type) Enum() *InviteResponse_Type {
	p := new(InviteResponse_Type)
	*p = x
	return p
}

func (x InviteResponse_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InviteResponse_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_enumTypes[2].Descriptor()
}

func (InviteResponse_Type) Type() protoreflect.EnumType {
	return &file_api_proto_enumTypes[2]
}

func (x InviteResponse_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InviteResponse_Type.Descriptor instead.
func (InviteResponse_Type) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9, 0}
}

// Message for Status Update
type StatusUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value Status `protobuf:"varint,1,opt,name=value,proto3,enum=Status" json:"value,omitempty"`
	User  *User  `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
}

func (x *StatusUpdate) Reset() {
	*x = StatusUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusUpdate) ProtoMessage() {}

func (x *StatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusUpdate.ProtoReflect.Descriptor instead.
func (*StatusUpdate) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *StatusUpdate) GetValue() Status {
	if x != nil {
		return x.Value
	}
	return Status_IDLE
}

func (x *StatusUpdate) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

// Initial Connection Message to Establish Sonr
type ConnectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     ConnectionRequest_Type `protobuf:"varint,1,opt,name=type,proto3,enum=ConnectionRequest_Type" json:"type,omitempty"` // Connection Request Type
	Location *Location              `protobuf:"bytes,2,opt,name=location,proto3" json:"location,omitempty"`                      // Current Runtime Location
	Device   *Device                `protobuf:"bytes,3,opt,name=device,proto3" json:"device,omitempty"`                          // Users Device
	Contact  *Contact               `protobuf:"bytes,4,opt,name=contact,proto3" json:"contact,omitempty"`                        // Users Contact Card
	ApiKeys  *APIKeys               `protobuf:"bytes,5,opt,name=apiKeys,proto3" json:"apiKeys,omitempty"`                        // Client Keys
}

func (x *ConnectionRequest) Reset() {
	*x = ConnectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionRequest) ProtoMessage() {}

func (x *ConnectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionRequest.ProtoReflect.Descriptor instead.
func (*ConnectionRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *ConnectionRequest) GetType() ConnectionRequest_Type {
	if x != nil {
		return x.Type
	}
	return ConnectionRequest_CONNECT
}

func (x *ConnectionRequest) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *ConnectionRequest) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *ConnectionRequest) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *ConnectionRequest) GetApiKeys() *APIKeys {
	if x != nil {
		return x.ApiKeys
	}
	return nil
}

// Response to Connection Request
type ConnectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	User *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	Id   *Peer_ID `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *ConnectionResponse) Reset() {
	*x = ConnectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConnectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionResponse) ProtoMessage() {}

func (x *ConnectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionResponse.ProtoReflect.Descriptor instead.
func (*ConnectionResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (x *ConnectionResponse) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *ConnectionResponse) GetId() *Peer_ID {
	if x != nil {
		return x.Id
	}
	return nil
}

// Request to Create or Return Username
type UsernameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsReturning bool   `protobuf:"varint,1,opt,name=isReturning,proto3" json:"isReturning,omitempty"`
	Mnemonic    string `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	SName       string `protobuf:"bytes,3,opt,name=sName,proto3" json:"sName,omitempty"`
}

func (x *UsernameRequest) Reset() {
	*x = UsernameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsernameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsernameRequest) ProtoMessage() {}

func (x *UsernameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsernameRequest.ProtoReflect.Descriptor instead.
func (*UsernameRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *UsernameRequest) GetIsReturning() bool {
	if x != nil {
		return x.IsReturning
	}
	return false
}

func (x *UsernameRequest) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *UsernameRequest) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

// Response for Create or Return Username
type UsernameResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsValid  bool   `protobuf:"varint,1,opt,name=isValid,proto3" json:"isValid,omitempty"`
	Prefix   string `protobuf:"bytes,2,opt,name=prefix,proto3" json:"prefix,omitempty"`
	SName    string `protobuf:"bytes,3,opt,name=sName,proto3" json:"sName,omitempty"`
	Mnemonic string `protobuf:"bytes,4,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
}

func (x *UsernameResponse) Reset() {
	*x = UsernameResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UsernameResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UsernameResponse) ProtoMessage() {}

func (x *UsernameResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UsernameResponse.ProtoReflect.Descriptor instead.
func (*UsernameResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

func (x *UsernameResponse) GetIsValid() bool {
	if x != nil {
		return x.IsValid
	}
	return false
}

func (x *UsernameResponse) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *UsernameResponse) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

func (x *UsernameResponse) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

// Request to Access Storj Data
type StorjRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Keys
	StorjApiKey       string `protobuf:"bytes,1,opt,name=storjApiKey,proto3" json:"storjApiKey,omitempty"`
	StorjRootPassword string `protobuf:"bytes,2,opt,name=storjRootPassword,proto3" json:"storjRootPassword,omitempty"`
	// Data for Get/Put
	//
	// Types that are assignable to Data:
	//	*StorjRequest_Prefix
	//	*StorjRequest_User
	Data isStorjRequest_Data `protobuf_oneof:"data"`
}

func (x *StorjRequest) Reset() {
	*x = StorjRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorjRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorjRequest) ProtoMessage() {}

func (x *StorjRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorjRequest.ProtoReflect.Descriptor instead.
func (*StorjRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

func (x *StorjRequest) GetStorjApiKey() string {
	if x != nil {
		return x.StorjApiKey
	}
	return ""
}

func (x *StorjRequest) GetStorjRootPassword() string {
	if x != nil {
		return x.StorjRootPassword
	}
	return ""
}

func (m *StorjRequest) GetData() isStorjRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *StorjRequest) GetPrefix() string {
	if x, ok := x.GetData().(*StorjRequest_Prefix); ok {
		return x.Prefix
	}
	return ""
}

func (x *StorjRequest) GetUser() *User {
	if x, ok := x.GetData().(*StorjRequest_User); ok {
		return x.User
	}
	return nil
}

type isStorjRequest_Data interface {
	isStorjRequest_Data()
}

type StorjRequest_Prefix struct {
	Prefix string `protobuf:"bytes,3,opt,name=prefix,proto3,oneof"`
}

type StorjRequest_User struct {
	User *User `protobuf:"bytes,4,opt,name=user,proto3,oneof"`
}

func (*StorjRequest_Prefix) isStorjRequest_Data() {}

func (*StorjRequest_User) isStorjRequest_Data() {}

// Response Data for Storj
type StorjResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Data for Get/Put
	//
	// Types that are assignable to Data:
	//	*StorjResponse_Success
	//	*StorjResponse_User
	Data isStorjResponse_Data `protobuf_oneof:"data"`
}

func (x *StorjResponse) Reset() {
	*x = StorjResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StorjResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StorjResponse) ProtoMessage() {}

func (x *StorjResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StorjResponse.ProtoReflect.Descriptor instead.
func (*StorjResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

func (m *StorjResponse) GetData() isStorjResponse_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *StorjResponse) GetSuccess() bool {
	if x, ok := x.GetData().(*StorjResponse_Success); ok {
		return x.Success
	}
	return false
}

func (x *StorjResponse) GetUser() *User {
	if x, ok := x.GetData().(*StorjResponse_User); ok {
		return x.User
	}
	return nil
}

type isStorjResponse_Data interface {
	isStorjResponse_Data()
}

type StorjResponse_Success struct {
	Success bool `protobuf:"varint,1,opt,name=success,proto3,oneof"`
}

type StorjResponse_User struct {
	User *User `protobuf:"bytes,2,opt,name=user,proto3,oneof"`
}

func (*StorjResponse_Success) isStorjResponse_Data() {}

func (*StorjResponse_User) isStorjResponse_Data() {}

// Updated Peer Info Request
type UpdateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//	*UpdateRequest_Properties
	//	*UpdateRequest_Contact
	//	*UpdateRequest_Position
	Data isUpdateRequest_Data `protobuf_oneof:"data"`
}

func (x *UpdateRequest) Reset() {
	*x = UpdateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateRequest) ProtoMessage() {}

func (x *UpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateRequest.ProtoReflect.Descriptor instead.
func (*UpdateRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

func (m *UpdateRequest) GetData() isUpdateRequest_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *UpdateRequest) GetProperties() *Peer_Properties {
	if x, ok := x.GetData().(*UpdateRequest_Properties); ok {
		return x.Properties
	}
	return nil
}

func (x *UpdateRequest) GetContact() *Contact {
	if x, ok := x.GetData().(*UpdateRequest_Contact); ok {
		return x.Contact
	}
	return nil
}

func (x *UpdateRequest) GetPosition() *Position {
	if x, ok := x.GetData().(*UpdateRequest_Position); ok {
		return x.Position
	}
	return nil
}

type isUpdateRequest_Data interface {
	isUpdateRequest_Data()
}

type UpdateRequest_Properties struct {
	Properties *Peer_Properties `protobuf:"bytes,1,opt,name=properties,proto3,oneof"` // Updated Peer Properties
}

type UpdateRequest_Contact struct {
	Contact *Contact `protobuf:"bytes,2,opt,name=contact,proto3,oneof"` // Users Updated Contact Card
}

type UpdateRequest_Position struct {
	Position *Position `protobuf:"bytes,3,opt,name=position,proto3,oneof"` // Users updated Position
}

func (*UpdateRequest_Properties) isUpdateRequest_Data() {}

func (*UpdateRequest_Contact) isUpdateRequest_Data() {}

func (*UpdateRequest_Position) isUpdateRequest_Data() {}

// Invitation Message sent on RPC
type InviteRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload Payload   `protobuf:"varint,1,opt,name=payload,proto3,enum=Payload" json:"payload,omitempty"` // Type of Transfer
	From    *Peer     `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`                     // Users Peer Data
	To      *Peer     `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`                         // Receivers Peer Data
	Data    *Transfer `protobuf:"bytes,4,opt,name=data,proto3" json:"data,omitempty"`                     // Attached Data
}

func (x *InviteRequest) Reset() {
	*x = InviteRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteRequest) ProtoMessage() {}

func (x *InviteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteRequest.ProtoReflect.Descriptor instead.
func (*InviteRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

func (x *InviteRequest) GetPayload() Payload {
	if x != nil {
		return x.Payload
	}
	return Payload_NONE
}

func (x *InviteRequest) GetFrom() *Peer {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *InviteRequest) GetTo() *Peer {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *InviteRequest) GetData() *Transfer {
	if x != nil {
		return x.Data
	}
	return nil
}

// Reply Message sent on RPC
type InviteResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     InviteResponse_Type `protobuf:"varint,1,opt,name=type,proto3,enum=InviteResponse_Type" json:"type,omitempty"` // Cancel Reply
	From     *Peer               `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`                           // Users Peer Data
	To       *Peer               `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`                               // Receivers Peer Data
	Decision bool                `protobuf:"varint,4,opt,name=decision,proto3" json:"decision,omitempty"`                  // Users Decision for the Invitation
	Data     *Transfer           `protobuf:"bytes,5,opt,name=data,proto3" json:"data,omitempty"`                           // Card contains all Data Info, Transfer Info
}

func (x *InviteResponse) Reset() {
	*x = InviteResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteResponse) ProtoMessage() {}

func (x *InviteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteResponse.ProtoReflect.Descriptor instead.
func (*InviteResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

func (x *InviteResponse) GetType() InviteResponse_Type {
	if x != nil {
		return x.Type
	}
	return InviteResponse_None
}

func (x *InviteResponse) GetFrom() *Peer {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *InviteResponse) GetTo() *Peer {
	if x != nil {
		return x.To
	}
	return nil
}

func (x *InviteResponse) GetDecision() bool {
	if x != nil {
		return x.Decision
	}
	return false
}

func (x *InviteResponse) GetData() *Transfer {
	if x != nil {
		return x.Data
	}
	return nil
}

// REST API Request over HTTP
type RestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type       RestMethodType    `protobuf:"varint,1,opt,name=type,proto3,enum=RestMethodType" json:"type,omitempty"`
	Method     string            `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Parameters map[string]string `protobuf:"bytes,3,rep,name=parameters,proto3" json:"parameters,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Types that are assignable to Host:
	//	*RestRequest_Peer
	//	*RestRequest_Id
	//	*RestRequest_SName
	Host isRestRequest_Host `protobuf_oneof:"host"`
}

func (x *RestRequest) Reset() {
	*x = RestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestRequest) ProtoMessage() {}

func (x *RestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestRequest.ProtoReflect.Descriptor instead.
func (*RestRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

func (x *RestRequest) GetType() RestMethodType {
	if x != nil {
		return x.Type
	}
	return RestMethodType_DEFAULT
}

func (x *RestRequest) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *RestRequest) GetParameters() map[string]string {
	if x != nil {
		return x.Parameters
	}
	return nil
}

func (m *RestRequest) GetHost() isRestRequest_Host {
	if m != nil {
		return m.Host
	}
	return nil
}

func (x *RestRequest) GetPeer() *Peer {
	if x, ok := x.GetHost().(*RestRequest_Peer); ok {
		return x.Peer
	}
	return nil
}

func (x *RestRequest) GetId() string {
	if x, ok := x.GetHost().(*RestRequest_Id); ok {
		return x.Id
	}
	return ""
}

func (x *RestRequest) GetSName() string {
	if x, ok := x.GetHost().(*RestRequest_SName); ok {
		return x.SName
	}
	return ""
}

type isRestRequest_Host interface {
	isRestRequest_Host()
}

type RestRequest_Peer struct {
	Peer *Peer `protobuf:"bytes,4,opt,name=peer,proto3,oneof"`
}

type RestRequest_Id struct {
	Id string `protobuf:"bytes,5,opt,name=id,proto3,oneof"`
}

type RestRequest_SName struct {
	SName string `protobuf:"bytes,6,opt,name=sName,proto3,oneof"`
}

func (*RestRequest_Peer) isRestRequest_Host() {}

func (*RestRequest_Id) isRestRequest_Host() {}

func (*RestRequest_SName) isRestRequest_Host() {}

// REST API Response over HTTP
type RestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   RestMethodType    `protobuf:"varint,1,opt,name=type,proto3,enum=RestMethodType" json:"type,omitempty"`
	Method string            `protobuf:"bytes,2,opt,name=method,proto3" json:"method,omitempty"`
	Code   int32             `protobuf:"varint,3,opt,name=code,proto3" json:"code,omitempty"`
	Body   map[string]string `protobuf:"bytes,4,rep,name=body,proto3" json:"body,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *RestResponse) Reset() {
	*x = RestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestResponse) ProtoMessage() {}

func (x *RestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestResponse.ProtoReflect.Descriptor instead.
func (*RestResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *RestResponse) GetType() RestMethodType {
	if x != nil {
		return x.Type
	}
	return RestMethodType_DEFAULT
}

func (x *RestResponse) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *RestResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *RestResponse) GetBody() map[string]string {
	if x != nil {
		return x.Body
	}
	return nil
}

// User is the Saved Data from Client that Passes to Proxy, During ConnRequest
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connection *User_Connection `protobuf:"bytes,1,opt,name=connection,proto3" json:"connection,omitempty"` // Clients Connection Reference
	Peer       *Peer            `protobuf:"bytes,2,opt,name=peer,proto3" json:"peer,omitempty"`             // Clients Peer Reference
	Location   *Location        `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`     // Clients current Location
	Device     *Device          `protobuf:"bytes,4,opt,name=device,proto3" json:"device,omitempty"`         // Clients Current Device
	Contact    *Contact         `protobuf:"bytes,5,opt,name=contact,proto3" json:"contact,omitempty"`       // Clients Contact Card
	Crypto     *User_Crypto     `protobuf:"bytes,6,opt,name=crypto,proto3" json:"crypto,omitempty"`         // User Cryptographic Data
	Settings   *User_Settings   `protobuf:"bytes,7,opt,name=settings,proto3" json:"settings,omitempty"`
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12}
}

func (x *User) GetConnection() *User_Connection {
	if x != nil {
		return x.Connection
	}
	return nil
}

func (x *User) GetPeer() *Peer {
	if x != nil {
		return x.Peer
	}
	return nil
}

func (x *User) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

func (x *User) GetDevice() *Device {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *User) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *User) GetCrypto() *User_Crypto {
	if x != nil {
		return x.Crypto
	}
	return nil
}

func (x *User) GetSettings() *User_Settings {
	if x != nil {
		return x.Settings
	}
	return nil
}

// User Connection Management - Attached from Node Client
type User_Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApiKeys *APIKeys     `protobuf:"bytes,1,opt,name=apiKeys,proto3" json:"apiKeys,omitempty"`
	Status  Status       `protobuf:"varint,2,opt,name=status,proto3,enum=Status" json:"status,omitempty"` // Client Node Status
	Router  *User_Router `protobuf:"bytes,3,opt,name=router,proto3" json:"router,omitempty"`              // Client Routing Information
}

func (x *User_Connection) Reset() {
	*x = User_Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Connection) ProtoMessage() {}

func (x *User_Connection) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Connection.ProtoReflect.Descriptor instead.
func (*User_Connection) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12, 0}
}

func (x *User_Connection) GetApiKeys() *APIKeys {
	if x != nil {
		return x.ApiKeys
	}
	return nil
}

func (x *User_Connection) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_IDLE
}

func (x *User_Connection) GetRouter() *User_Router {
	if x != nil {
		return x.Router
	}
	return nil
}

// Crypto Data to Place in DHT
type User_Crypto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Prefix   string `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"`
	Mnemonic string `protobuf:"bytes,2,opt,name=mnemonic,proto3" json:"mnemonic,omitempty"`
	SName    string `protobuf:"bytes,3,opt,name=sName,proto3" json:"sName,omitempty"`
}

func (x *User_Crypto) Reset() {
	*x = User_Crypto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Crypto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Crypto) ProtoMessage() {}

func (x *User_Crypto) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Crypto.ProtoReflect.Descriptor instead.
func (*User_Crypto) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12, 1}
}

func (x *User_Crypto) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

func (x *User_Crypto) GetMnemonic() string {
	if x != nil {
		return x.Mnemonic
	}
	return ""
}

func (x *User_Crypto) GetSName() string {
	if x != nil {
		return x.SName
	}
	return ""
}

// Router Manages Peer Routing for Topics/Transfers - Attached from Node
// Client
type User_Router struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceTopic string    `protobuf:"bytes,1,opt,name=deviceTopic,proto3" json:"deviceTopic,omitempty"`
	LocalTopic  string    `protobuf:"bytes,2,opt,name=localTopic,proto3" json:"localTopic,omitempty"`
	Rendevouz   string    `protobuf:"bytes,3,opt,name=rendevouz,proto3" json:"rendevouz,omitempty"`
	Location    *Location `protobuf:"bytes,4,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *User_Router) Reset() {
	*x = User_Router{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Router) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Router) ProtoMessage() {}

func (x *User_Router) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Router.ProtoReflect.Descriptor instead.
func (*User_Router) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12, 2}
}

func (x *User_Router) GetDeviceTopic() string {
	if x != nil {
		return x.DeviceTopic
	}
	return ""
}

func (x *User_Router) GetLocalTopic() string {
	if x != nil {
		return x.LocalTopic
	}
	return ""
}

func (x *User_Router) GetRendevouz() string {
	if x != nil {
		return x.Rendevouz
	}
	return ""
}

func (x *User_Router) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

// User Settings
type User_Settings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Primary     *Device                   `protobuf:"bytes,1,opt,name=primary,proto3" json:"primary,omitempty"`
	Devices     map[string]*Device        `protobuf:"bytes,2,rep,name=devices,proto3" json:"devices,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`         // Clients Devices: Name, Device
	Preferences map[string]*User_Settings `protobuf:"bytes,3,rep,name=preferences,proto3" json:"preferences,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Clients Specified Preferences
}

func (x *User_Settings) Reset() {
	*x = User_Settings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User_Settings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User_Settings) ProtoMessage() {}

func (x *User_Settings) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User_Settings.ProtoReflect.Descriptor instead.
func (*User_Settings) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{12, 3}
}

func (x *User_Settings) GetPrimary() *Device {
	if x != nil {
		return x.Primary
	}
	return nil
}

func (x *User_Settings) GetDevices() map[string]*Device {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *User_Settings) GetPreferences() map[string]*User_Settings {
	if x != nil {
		return x.Preferences
	}
	return nil
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x64, 0x61, 0x74,
	0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0x48, 0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x22, 0x84, 0x02,
	0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x17, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x25, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c,
	0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x07,
	0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x41, 0x50, 0x49, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73,
	0x22, 0x32, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e, 0x4e,
	0x45, 0x43, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x4f, 0x52, 0x4a, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4e, 0x4b, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x55,
	0x54, 0x48, 0x10, 0x03, 0x22, 0x49, 0x0a, 0x12, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x2e, 0x49, 0x44, 0x52, 0x02, 0x69, 0x64, 0x22,
	0x65, 0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x69, 0x73, 0x52, 0x65, 0x74, 0x75, 0x72,
	0x6e, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73,
	0x56, 0x61, 0x6c, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x56,
	0x61, 0x6c, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d, 0x6f, 0x6e, 0x69, 0x63, 0x22, 0x9d,
	0x01, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x20, 0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x6a, 0x41, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x6f, 0x72, 0x6a, 0x41, 0x70, 0x69, 0x4b, 0x65,
	0x79, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x74, 0x6f, 0x72, 0x6a, 0x52, 0x6f, 0x6f, 0x74, 0x50, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x73, 0x74,
	0x6f, 0x72, 0x6a, 0x52, 0x6f, 0x6f, 0x74, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12,
	0x18, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1b, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x48, 0x00,
	0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x50,
	0x0a, 0x0d, 0x53, 0x74, 0x6f, 0x72, 0x6a, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1a, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x48, 0x00, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1b, 0x0a, 0x04, 0x75,
	0x73, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x48, 0x00, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x22, 0x9a, 0x01, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x32, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x2e, 0x50, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x48, 0x00, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x27, 0x0a, 0x08,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x84, 0x01,
	0x0a, 0x0d, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x22, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x08, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x15,
	0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x1d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x22, 0xf1, 0x01, 0x0a, 0x0e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x14, 0x2e, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x19, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x05, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x15, 0x0a, 0x02,
	0x74, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52,
	0x02, 0x74, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x64, 0x65, 0x63, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x1d, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x48,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x6f, 0x6e, 0x65, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x46,
	0x6c, 0x61, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x10, 0x04, 0x22, 0x96, 0x02, 0x0a, 0x0b, 0x52, 0x65, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d,
	0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x3c, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x52, 0x65, 0x73, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65,
	0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0a, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x73, 0x12, 0x1b, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x48, 0x00, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72,
	0x12, 0x10, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x06, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x22, 0xc5, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0f, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x2b, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x42, 0x6f, 0x64, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x1a, 0x37, 0x0a, 0x09, 0x42, 0x6f, 0x64, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xaf, 0x07, 0x0a, 0x04, 0x55, 0x73,
	0x65, 0x72, 0x12, 0x30, 0x0a, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x19, 0x0a, 0x04, 0x70, 0x65, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x70, 0x65, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x52,
	0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x24, 0x0a, 0x06, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x2e, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x52, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x6f, 0x12, 0x2a, 0x0a, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x52, 0x08, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x77, 0x0a,
	0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x07, 0x61,
	0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41,
	0x50, 0x49, 0x4b, 0x65, 0x79, 0x73, 0x52, 0x07, 0x61, 0x70, 0x69, 0x4b, 0x65, 0x79, 0x73, 0x12,
	0x1f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x07, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x24, 0x0a, 0x06, 0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0c, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x52, 0x06,
	0x72, 0x6f, 0x75, 0x74, 0x65, 0x72, 0x1a, 0x52, 0x0a, 0x06, 0x43, 0x72, 0x79, 0x70, 0x74, 0x6f,
	0x12, 0x16, 0x0a, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x70, 0x72, 0x65, 0x66, 0x69, 0x78, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d, 0x6e, 0x65, 0x6d,
	0x6f, 0x6e, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x8f, 0x01, 0x0a, 0x06, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x54,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x54, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x6f, 0x63,
	0x61, 0x6c, 0x54, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x6e, 0x64, 0x65,
	0x76, 0x6f, 0x75, 0x7a, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x6e, 0x64,
	0x65, 0x76, 0x6f, 0x75, 0x7a, 0x12, 0x25, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xbc, 0x02, 0x0a,
	0x08, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x21, 0x0a, 0x07, 0x70, 0x72, 0x69,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x44, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x52, 0x07, 0x70, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x35, 0x0a, 0x07,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e,
	0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x1a, 0x43, 0x0a, 0x0c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x07, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x4e, 0x0a, 0x10, 0x50,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x24, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x39, 0x0a, 0x0e, 0x52,
	0x65, 0x73, 0x74, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a,
	0x07, 0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x47, 0x45,
	0x54, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x55, 0x54, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04,
	0x50, 0x4f, 0x53, 0x54, 0x10, 0x03, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_api_proto_goTypes = []interface{}{
	(RestMethodType)(0),         // 0: RestMethodType
	(ConnectionRequest_Type)(0), // 1: ConnectionRequest.Type
	(InviteResponse_Type)(0),    // 2: InviteResponse.Type
	(*StatusUpdate)(nil),        // 3: StatusUpdate
	(*ConnectionRequest)(nil),   // 4: ConnectionRequest
	(*ConnectionResponse)(nil),  // 5: ConnectionResponse
	(*UsernameRequest)(nil),     // 6: UsernameRequest
	(*UsernameResponse)(nil),    // 7: UsernameResponse
	(*StorjRequest)(nil),        // 8: StorjRequest
	(*StorjResponse)(nil),       // 9: StorjResponse
	(*UpdateRequest)(nil),       // 10: UpdateRequest
	(*InviteRequest)(nil),       // 11: InviteRequest
	(*InviteResponse)(nil),      // 12: InviteResponse
	(*RestRequest)(nil),         // 13: RestRequest
	(*RestResponse)(nil),        // 14: RestResponse
	(*User)(nil),                // 15: User
	nil,                         // 16: RestRequest.ParametersEntry
	nil,                         // 17: RestResponse.BodyEntry
	(*User_Connection)(nil),     // 18: User.Connection
	(*User_Crypto)(nil),         // 19: User.Crypto
	(*User_Router)(nil),         // 20: User.Router
	(*User_Settings)(nil),       // 21: User.Settings
	nil,                         // 22: User.Settings.DevicesEntry
	nil,                         // 23: User.Settings.PreferencesEntry
	(Status)(0),                 // 24: Status
	(*Location)(nil),            // 25: Location
	(*Device)(nil),              // 26: Device
	(*Contact)(nil),             // 27: Contact
	(*APIKeys)(nil),             // 28: APIKeys
	(*Peer_ID)(nil),             // 29: Peer.ID
	(*Peer_Properties)(nil),     // 30: Peer.Properties
	(*Position)(nil),            // 31: Position
	(Payload)(0),                // 32: Payload
	(*Peer)(nil),                // 33: Peer
	(*Transfer)(nil),            // 34: Transfer
}
var file_api_proto_depIdxs = []int32{
	24, // 0: StatusUpdate.value:type_name -> Status
	15, // 1: StatusUpdate.user:type_name -> User
	1,  // 2: ConnectionRequest.type:type_name -> ConnectionRequest.Type
	25, // 3: ConnectionRequest.location:type_name -> Location
	26, // 4: ConnectionRequest.device:type_name -> Device
	27, // 5: ConnectionRequest.contact:type_name -> Contact
	28, // 6: ConnectionRequest.apiKeys:type_name -> APIKeys
	15, // 7: ConnectionResponse.user:type_name -> User
	29, // 8: ConnectionResponse.id:type_name -> Peer.ID
	15, // 9: StorjRequest.user:type_name -> User
	15, // 10: StorjResponse.user:type_name -> User
	30, // 11: UpdateRequest.properties:type_name -> Peer.Properties
	27, // 12: UpdateRequest.contact:type_name -> Contact
	31, // 13: UpdateRequest.position:type_name -> Position
	32, // 14: InviteRequest.payload:type_name -> Payload
	33, // 15: InviteRequest.from:type_name -> Peer
	33, // 16: InviteRequest.to:type_name -> Peer
	34, // 17: InviteRequest.data:type_name -> Transfer
	2,  // 18: InviteResponse.type:type_name -> InviteResponse.Type
	33, // 19: InviteResponse.from:type_name -> Peer
	33, // 20: InviteResponse.to:type_name -> Peer
	34, // 21: InviteResponse.data:type_name -> Transfer
	0,  // 22: RestRequest.type:type_name -> RestMethodType
	16, // 23: RestRequest.parameters:type_name -> RestRequest.ParametersEntry
	33, // 24: RestRequest.peer:type_name -> Peer
	0,  // 25: RestResponse.type:type_name -> RestMethodType
	17, // 26: RestResponse.body:type_name -> RestResponse.BodyEntry
	18, // 27: User.connection:type_name -> User.Connection
	33, // 28: User.peer:type_name -> Peer
	25, // 29: User.location:type_name -> Location
	26, // 30: User.device:type_name -> Device
	27, // 31: User.contact:type_name -> Contact
	19, // 32: User.crypto:type_name -> User.Crypto
	21, // 33: User.settings:type_name -> User.Settings
	28, // 34: User.Connection.apiKeys:type_name -> APIKeys
	24, // 35: User.Connection.status:type_name -> Status
	20, // 36: User.Connection.router:type_name -> User.Router
	25, // 37: User.Router.location:type_name -> Location
	26, // 38: User.Settings.primary:type_name -> Device
	22, // 39: User.Settings.devices:type_name -> User.Settings.DevicesEntry
	23, // 40: User.Settings.preferences:type_name -> User.Settings.PreferencesEntry
	26, // 41: User.Settings.DevicesEntry.value:type_name -> Device
	21, // 42: User.Settings.PreferencesEntry.value:type_name -> User.Settings
	43, // [43:43] is the sub-list for method output_type
	43, // [43:43] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	file_data_proto_init()
	file_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConnectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsernameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UsernameResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorjRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StorjResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InviteResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Crypto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Router); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User_Settings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[5].OneofWrappers = []interface{}{
		(*StorjRequest_Prefix)(nil),
		(*StorjRequest_User)(nil),
	}
	file_api_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*StorjResponse_Success)(nil),
		(*StorjResponse_User)(nil),
	}
	file_api_proto_msgTypes[7].OneofWrappers = []interface{}{
		(*UpdateRequest_Properties)(nil),
		(*UpdateRequest_Contact)(nil),
		(*UpdateRequest_Position)(nil),
	}
	file_api_proto_msgTypes[10].OneofWrappers = []interface{}{
		(*RestRequest_Peer)(nil),
		(*RestRequest_Id)(nil),
		(*RestRequest_SName)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		EnumInfos:         file_api_proto_enumTypes,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}
