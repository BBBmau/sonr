// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: data.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Payload is type of Data being transferred
type Payload int32

const (
	Payload_UNDEFINED    Payload = 0 // Not Specified
	Payload_CONTACT      Payload = 1 // Sonr Based Contact
	Payload_MEDIA        Payload = 2 // Image, Audio, Video
	Payload_URL          Payload = 3 // Link to Site
	Payload_TEXT         Payload = 4 // Text based document
	Payload_PDF          Payload = 5 // PDF File
	Payload_PRESENTATION Payload = 6 // Presentation based File from PPT or Keynote
	Payload_SPREADSHEET  Payload = 7 // Spreadsheet based File from Excel or Numbers
)

// Enum value maps for Payload.
var (
	Payload_name = map[int32]string{
		0: "UNDEFINED",
		1: "CONTACT",
		2: "MEDIA",
		3: "URL",
		4: "TEXT",
		5: "PDF",
		6: "PRESENTATION",
		7: "SPREADSHEET",
	}
	Payload_value = map[string]int32{
		"UNDEFINED":    0,
		"CONTACT":      1,
		"MEDIA":        2,
		"URL":          3,
		"TEXT":         4,
		"PDF":          5,
		"PRESENTATION": 6,
		"SPREADSHEET":  7,
	}
)

func (x Payload) Enum() *Payload {
	p := new(Payload)
	*p = x
	return p
}

func (x Payload) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Payload) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[0].Descriptor()
}

func (Payload) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[0]
}

func (x Payload) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Payload.Descriptor instead.
func (Payload) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0}
}

type LobbyEvent_Event int32

const (
	LobbyEvent_EXCHANGE LobbyEvent_Event = 0 // Peer has joined wants Info
	LobbyEvent_STANDBY  LobbyEvent_Event = 1 // Peer is taking break from lobby
	LobbyEvent_RESUME   LobbyEvent_Event = 2 // Peer has rejoined Lobby
	LobbyEvent_UPDATE   LobbyEvent_Event = 3 // Peer has changed position
	LobbyEvent_MESSAGE  LobbyEvent_Event = 4 // Peer has been messaged by a user
)

// Enum value maps for LobbyEvent_Event.
var (
	LobbyEvent_Event_name = map[int32]string{
		0: "EXCHANGE",
		1: "STANDBY",
		2: "RESUME",
		3: "UPDATE",
		4: "MESSAGE",
	}
	LobbyEvent_Event_value = map[string]int32{
		"EXCHANGE": 0,
		"STANDBY":  1,
		"RESUME":   2,
		"UPDATE":   3,
		"MESSAGE":  4,
	}
)

func (x LobbyEvent_Event) Enum() *LobbyEvent_Event {
	p := new(LobbyEvent_Event)
	*p = x
	return p
}

func (x LobbyEvent_Event) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LobbyEvent_Event) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[1].Descriptor()
}

func (LobbyEvent_Event) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[1]
}

func (x LobbyEvent_Event) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LobbyEvent_Event.Descriptor instead.
func (LobbyEvent_Event) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{1, 0}
}

type MIME_Type int32

const (
	MIME_application MIME_Type = 0 // Document Files
	MIME_audio       MIME_Type = 1 // Sound, Audio Files
	MIME_image       MIME_Type = 2 // Image Files
	MIME_text        MIME_Type = 3 // Text Based Files
	MIME_video       MIME_Type = 4 // Video Files
)

// Enum value maps for MIME_Type.
var (
	MIME_Type_name = map[int32]string{
		0: "application",
		1: "audio",
		2: "image",
		3: "text",
		4: "video",
	}
	MIME_Type_value = map[string]int32{
		"application": 0,
		"audio":       1,
		"image":       2,
		"text":        3,
		"video":       4,
	}
)

func (x MIME_Type) Enum() *MIME_Type {
	p := new(MIME_Type)
	*p = x
	return p
}

func (x MIME_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MIME_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[2].Descriptor()
}

func (MIME_Type) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[2]
}

func (x MIME_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MIME_Type.Descriptor instead.
func (MIME_Type) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{3, 0}
}

// Card Transfer Status
type TransferCard_Status int32

const (
	TransferCard_NONE       TransferCard_Status = 0 // Default, Idle or Post-Completion
	TransferCard_INVITE     TransferCard_Status = 1 // An Invited Transfer
	TransferCard_DIRECT     TransferCard_Status = 2 // A Direct Transfer
	TransferCard_REPLY      TransferCard_Status = 3 // A Response Card (Usually Contact only)
	TransferCard_INPROGRESS TransferCard_Status = 4 // A Transfer in Progress
	TransferCard_COMPLETED  TransferCard_Status = 5 // A Received and Completed Transfer
)

// Enum value maps for TransferCard_Status.
var (
	TransferCard_Status_name = map[int32]string{
		0: "NONE",
		1: "INVITE",
		2: "DIRECT",
		3: "REPLY",
		4: "INPROGRESS",
		5: "COMPLETED",
	}
	TransferCard_Status_value = map[string]int32{
		"NONE":       0,
		"INVITE":     1,
		"DIRECT":     2,
		"REPLY":      3,
		"INPROGRESS": 4,
		"COMPLETED":  5,
	}
)

func (x TransferCard_Status) Enum() *TransferCard_Status {
	p := new(TransferCard_Status)
	*p = x
	return p
}

func (x TransferCard_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferCard_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_data_proto_enumTypes[3].Descriptor()
}

func (TransferCard_Status) Type() protoreflect.EnumType {
	return &file_data_proto_enumTypes[3]
}

func (x TransferCard_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferCard_Status.Descriptor instead.
func (TransferCard_Status) EnumDescriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{5, 0}
}

// For Info about Lobby
type Lobby struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLocal bool             `protobuf:"varint,1,opt,name=isLocal,proto3" json:"isLocal,omitempty"`                                                                                    // Is Local Lobby
	Name    string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                           // Open Location Code of Lobby
	Size    int32            `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                                                                                          // Total Number of Devices in Lobby
	Count   int32            `protobuf:"varint,4,opt,name=count,proto3" json:"count,omitempty"`                                                                                        // Total Devices in Lobby EXCLUDING User
	Peers   map[string]*Peer `protobuf:"bytes,5,rep,name=peers,proto3" json:"peers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Total Data of Active Peers
	User    *Peer            `protobuf:"bytes,6,opt,name=user,proto3" json:"user,omitempty"`                                                                                           // User Peer reference
}

func (x *Lobby) Reset() {
	*x = Lobby{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lobby) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lobby) ProtoMessage() {}

func (x *Lobby) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lobby.ProtoReflect.Descriptor instead.
func (*Lobby) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{0}
}

func (x *Lobby) GetIsLocal() bool {
	if x != nil {
		return x.IsLocal
	}
	return false
}

func (x *Lobby) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Lobby) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Lobby) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Lobby) GetPeers() map[string]*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *Lobby) GetUser() *Peer {
	if x != nil {
		return x.User
	}
	return nil
}

// Message Sent when peer messages Lobby Topic
type LobbyEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                              // Peer ID
	Event   LobbyEvent_Event `protobuf:"varint,2,opt,name=event,proto3,enum=LobbyEvent_Event" json:"event,omitempty"` // What Peer is Doing
	From    *Peer            `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`                          // User Information
	To      string           `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`                              // Peer ID for DM
	Message string           `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`                    // Message being sent
}

func (x *LobbyEvent) Reset() {
	*x = LobbyEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LobbyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbyEvent) ProtoMessage() {}

func (x *LobbyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbyEvent.ProtoReflect.Descriptor instead.
func (*LobbyEvent) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{1}
}

func (x *LobbyEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LobbyEvent) GetEvent() LobbyEvent_Event {
	if x != nil {
		return x.Event
	}
	return LobbyEvent_EXCHANGE
}

func (x *LobbyEvent) GetFrom() *Peer {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *LobbyEvent) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *LobbyEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// For Received Transfer File Information
type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`              // Time based Assignment
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`           // File Name without Path
	Path      string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`           // File Location
	Size      int32  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`          // File Size in Bytes
	Mime      *MIME  `protobuf:"bytes,5,opt,name=mime,proto3" json:"mime,omitempty"`           // Standard Mime Type
	Thumbnail []byte `protobuf:"bytes,6,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"` // Thumbnail Preview of File
	AssetID   string `protobuf:"bytes,7,opt,name=assetID,proto3" json:"assetID,omitempty"`     // Local Asset ID
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{2}
}

func (x *Metadata) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Metadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Metadata) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Metadata) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Metadata) GetMime() *MIME {
	if x != nil {
		return x.Mime
	}
	return nil
}

func (x *Metadata) GetThumbnail() []byte {
	if x != nil {
		return x.Thumbnail
	}
	return nil
}

func (x *Metadata) GetAssetID() string {
	if x != nil {
		return x.AssetID
	}
	return ""
}

// Protobuf for Standard MIME
type MIME struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type    MIME_Type `protobuf:"varint,1,opt,name=type,proto3,enum=MIME_Type" json:"type,omitempty"` // Type of File
	Subtype string    `protobuf:"bytes,2,opt,name=subtype,proto3" json:"subtype,omitempty"`           // Extension of File
	Value   string    `protobuf:"bytes,3,opt,name=value,proto3" json:"value,omitempty"`               // Type/Subtype i.e. (image/jpeg)
}

func (x *MIME) Reset() {
	*x = MIME{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MIME) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MIME) ProtoMessage() {}

func (x *MIME) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MIME.ProtoReflect.Descriptor instead.
func (*MIME) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{3}
}

func (x *MIME) GetType() MIME_Type {
	if x != nil {
		return x.Type
	}
	return MIME_application
}

func (x *MIME) GetSubtype() string {
	if x != nil {
		return x.Subtype
	}
	return ""
}

func (x *MIME) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

// RemoteInfo is for Joining/Creating a New Topic
type RemoteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsJoin  bool     `protobuf:"varint,1,opt,name=isJoin,proto3" json:"isJoin,omitempty"`
	Count   int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Display string   `protobuf:"bytes,3,opt,name=display,proto3" json:"display,omitempty"`
	Topic   string   `protobuf:"bytes,4,opt,name=topic,proto3" json:"topic,omitempty"`
	Words   []string `protobuf:"bytes,5,rep,name=words,proto3" json:"words,omitempty"`
}

func (x *RemoteInfo) Reset() {
	*x = RemoteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteInfo) ProtoMessage() {}

func (x *RemoteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteInfo.ProtoReflect.Descriptor instead.
func (*RemoteInfo) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{4}
}

func (x *RemoteInfo) GetIsJoin() bool {
	if x != nil {
		return x.IsJoin
	}
	return false
}

func (x *RemoteInfo) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *RemoteInfo) GetDisplay() string {
	if x != nil {
		return x.Display
	}
	return ""
}

func (x *RemoteInfo) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *RemoteInfo) GetWords() []string {
	if x != nil {
		return x.Words
	}
	return nil
}

// TransferCard holds data passed between Exchange
type TransferCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int32                    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                                   // SQL: Id reference
	Payload     Payload                  `protobuf:"varint,2,opt,name=payload,proto3,enum=Payload" json:"payload,omitempty"`            // SQL: Type of Data received
	Received    int32                    `protobuf:"varint,3,opt,name=received,proto3" json:"received,omitempty"`                       // SQL: UnixTime of received Date/Time
	Preview     []byte                   `protobuf:"bytes,4,opt,name=preview,proto3" json:"preview,omitempty"`                          // SQL: Thumbnail Preview Bytes
	HasExported bool                     `protobuf:"varint,5,opt,name=hasExported,proto3" json:"hasExported,omitempty"`                 // SQL: Notifies if saved to Gallery
	Platform    Platform                 `protobuf:"varint,6,opt,name=platform,proto3,enum=Platform" json:"platform,omitempty"`         // OWNER: Operating System of Owner
	Username    string                   `protobuf:"bytes,7,opt,name=username,proto3" json:"username,omitempty"`                        // OWNER: Sonr Username Reference
	FirstName   string                   `protobuf:"bytes,8,opt,name=firstName,proto3" json:"firstName,omitempty"`                      // OWNER: General FirstName Reference
	LastName    string                   `protobuf:"bytes,9,opt,name=lastName,proto3" json:"lastName,omitempty"`                        // OWNER: General LastName Reference
	Progress    *TransferCard_Progress   `protobuf:"bytes,10,opt,name=progress,proto3" json:"progress,omitempty"`                       // TRANSFER: Progress of Transfer - File Only
	Status      TransferCard_Status      `protobuf:"varint,11,opt,name=status,proto3,enum=TransferCard_Status" json:"status,omitempty"` // TRANSFER: Status of the Card - File Only
	Properties  *TransferCard_Properties `protobuf:"bytes,12,opt,name=properties,proto3" json:"properties,omitempty"`                   // TRANSFER: Card Properties - File Only
	Contact     *Contact                 `protobuf:"bytes,13,opt,name=contact,proto3" json:"contact,omitempty"`                         // DATA(Optional): Received Contact Information
	Metadata    *Metadata                `protobuf:"bytes,14,opt,name=metadata,proto3" json:"metadata,omitempty"`                       // DATA(Optional): Received a File or Media
	Url         *URLLink                 `protobuf:"bytes,15,opt,name=url,proto3" json:"url,omitempty"`                                 // DATA(Optional): Received a Website Link
}

func (x *TransferCard) Reset() {
	*x = TransferCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCard) ProtoMessage() {}

func (x *TransferCard) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCard.ProtoReflect.Descriptor instead.
func (*TransferCard) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{5}
}

func (x *TransferCard) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TransferCard) GetPayload() Payload {
	if x != nil {
		return x.Payload
	}
	return Payload_UNDEFINED
}

func (x *TransferCard) GetReceived() int32 {
	if x != nil {
		return x.Received
	}
	return 0
}

func (x *TransferCard) GetPreview() []byte {
	if x != nil {
		return x.Preview
	}
	return nil
}

func (x *TransferCard) GetHasExported() bool {
	if x != nil {
		return x.HasExported
	}
	return false
}

func (x *TransferCard) GetPlatform() Platform {
	if x != nil {
		return x.Platform
	}
	return Platform_Unknown
}

func (x *TransferCard) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *TransferCard) GetFirstName() string {
	if x != nil {
		return x.FirstName
	}
	return ""
}

func (x *TransferCard) GetLastName() string {
	if x != nil {
		return x.LastName
	}
	return ""
}

func (x *TransferCard) GetProgress() *TransferCard_Progress {
	if x != nil {
		return x.Progress
	}
	return nil
}

func (x *TransferCard) GetStatus() TransferCard_Status {
	if x != nil {
		return x.Status
	}
	return TransferCard_NONE
}

func (x *TransferCard) GetProperties() *TransferCard_Properties {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *TransferCard) GetContact() *Contact {
	if x != nil {
		return x.Contact
	}
	return nil
}

func (x *TransferCard) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *TransferCard) GetUrl() *URLLink {
	if x != nil {
		return x.Url
	}
	return nil
}

// URLLink Contains metadata of provided URL
type URLLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link        string                    `protobuf:"bytes,1,opt,name=link,proto3" json:"link,omitempty"`               // Entered URL
	Title       string                    `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`             // Meta Field for Title
	Type        string                    `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`               // OG Type
	Url         string                    `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`                 // OG URL Link
	Site        string                    `protobuf:"bytes,5,opt,name=site,proto3" json:"site,omitempty"`               // Meta field for site
	SiteName    string                    `protobuf:"bytes,6,opt,name=siteName,proto3" json:"siteName,omitempty"`       // Meta field for sitename
	Description string                    `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"` // Meta field for description
	Locale      string                    `protobuf:"bytes,8,opt,name=locale,proto3" json:"locale,omitempty"`           // Meta field for locale
	Images      []*URLLink_OpenGraphImage `protobuf:"bytes,9,rep,name=images,proto3" json:"images,omitempty"`           // Images
	Videos      []*URLLink_OpenGraphVideo `protobuf:"bytes,10,rep,name=videos,proto3" json:"videos,omitempty"`          // Videos
	Audios      []*URLLink_OpenGraphAudio `protobuf:"bytes,11,rep,name=audios,proto3" json:"audios,omitempty"`          // Audios
	Twitter     *URLLink_TwitterCard      `protobuf:"bytes,12,opt,name=twitter,proto3" json:"twitter,omitempty"`        // Twitter Card
	Content     string                    `protobuf:"bytes,13,opt,name=content,proto3" json:"content,omitempty"`        // URL Content
}

func (x *URLLink) Reset() {
	*x = URLLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink) ProtoMessage() {}

func (x *URLLink) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink.ProtoReflect.Descriptor instead.
func (*URLLink) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{6}
}

func (x *URLLink) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *URLLink) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *URLLink) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *URLLink) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLLink) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *URLLink) GetSiteName() string {
	if x != nil {
		return x.SiteName
	}
	return ""
}

func (x *URLLink) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *URLLink) GetLocale() string {
	if x != nil {
		return x.Locale
	}
	return ""
}

func (x *URLLink) GetImages() []*URLLink_OpenGraphImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *URLLink) GetVideos() []*URLLink_OpenGraphVideo {
	if x != nil {
		return x.Videos
	}
	return nil
}

func (x *URLLink) GetAudios() []*URLLink_OpenGraphAudio {
	if x != nil {
		return x.Audios
	}
	return nil
}

func (x *URLLink) GetTwitter() *URLLink_TwitterCard {
	if x != nil {
		return x.Twitter
	}
	return nil
}

func (x *URLLink) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// Card Properties based on File
type TransferCard_Properties struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mime     *MIME  `protobuf:"bytes,1,opt,name=mime,proto3" json:"mime,omitempty"`          // Standard MIME Type Values
	Size     int32  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`         // Size of File in Bytes
	Duration int32  `protobuf:"varint,3,opt,name=duration,proto3" json:"duration,omitempty"` // Length of Video - Optional
	Name     string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`          // Name of File
}

func (x *TransferCard_Properties) Reset() {
	*x = TransferCard_Properties{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCard_Properties) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCard_Properties) ProtoMessage() {}

func (x *TransferCard_Properties) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCard_Properties.ProtoReflect.Descriptor instead.
func (*TransferCard_Properties) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{5, 0}
}

func (x *TransferCard_Properties) GetMime() *MIME {
	if x != nil {
		return x.Mime
	}
	return nil
}

func (x *TransferCard_Properties) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *TransferCard_Properties) GetDuration() int32 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *TransferCard_Properties) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

// Progress Variables to determine completion
type TransferCard_Progress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CurrentSize int32 `protobuf:"varint,1,opt,name=currentSize,proto3" json:"currentSize,omitempty"` // Current size of File in Transfer
	Interval    int32 `protobuf:"varint,2,opt,name=interval,proto3" json:"interval,omitempty"`       // Current Interval of Transfer
	TotalChunks int32 `protobuf:"varint,3,opt,name=totalChunks,proto3" json:"totalChunks,omitempty"` // Total Chunks of File
	TotalSize   int32 `protobuf:"varint,4,opt,name=totalSize,proto3" json:"totalSize,omitempty"`     // Total Size of File
}

func (x *TransferCard_Progress) Reset() {
	*x = TransferCard_Progress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferCard_Progress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferCard_Progress) ProtoMessage() {}

func (x *TransferCard_Progress) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferCard_Progress.ProtoReflect.Descriptor instead.
func (*TransferCard_Progress) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{5, 1}
}

func (x *TransferCard_Progress) GetCurrentSize() int32 {
	if x != nil {
		return x.CurrentSize
	}
	return 0
}

func (x *TransferCard_Progress) GetInterval() int32 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *TransferCard_Progress) GetTotalChunks() int32 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

func (x *TransferCard_Progress) GetTotalSize() int32 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

// OpenGraph Image
type URLLink_OpenGraphImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`             // `meta:"og:image,og:image:url"`
	SecureUrl string `protobuf:"bytes,2,opt,name=secureUrl,proto3" json:"secureUrl,omitempty"` // `meta:"og:image:secure_url"`
	Width     int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`        // `meta:"og:image:width"`
	Height    int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`      // `meta:"og:image:height"`
	Type      string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`           // `meta:"og:image:type"`
}

func (x *URLLink_OpenGraphImage) Reset() {
	*x = URLLink_OpenGraphImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_OpenGraphImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_OpenGraphImage) ProtoMessage() {}

func (x *URLLink_OpenGraphImage) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_OpenGraphImage.ProtoReflect.Descriptor instead.
func (*URLLink_OpenGraphImage) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{6, 0}
}

func (x *URLLink_OpenGraphImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLLink_OpenGraphImage) GetSecureUrl() string {
	if x != nil {
		return x.SecureUrl
	}
	return ""
}

func (x *URLLink_OpenGraphImage) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *URLLink_OpenGraphImage) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *URLLink_OpenGraphImage) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// OpenGraph Video
type URLLink_OpenGraphVideo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`             // `meta:"og:video,og:video:url"`
	SecureUrl string `protobuf:"bytes,2,opt,name=secureUrl,proto3" json:"secureUrl,omitempty"` // `meta:"og:video:secure_url"`
	Width     int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`        // `meta:"og:video:width"`
	Height    int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`      // `meta:"og:video:height"`
	Type      string `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`           // `meta:"og:video:type"`
}

func (x *URLLink_OpenGraphVideo) Reset() {
	*x = URLLink_OpenGraphVideo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_OpenGraphVideo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_OpenGraphVideo) ProtoMessage() {}

func (x *URLLink_OpenGraphVideo) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_OpenGraphVideo.ProtoReflect.Descriptor instead.
func (*URLLink_OpenGraphVideo) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{6, 1}
}

func (x *URLLink_OpenGraphVideo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLLink_OpenGraphVideo) GetSecureUrl() string {
	if x != nil {
		return x.SecureUrl
	}
	return ""
}

func (x *URLLink_OpenGraphVideo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *URLLink_OpenGraphVideo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *URLLink_OpenGraphVideo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// OpenGraph Audio
type URLLink_OpenGraphAudio struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url       string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`             // `meta:"og:audio,og:audio:url"`
	SecureUrl string `protobuf:"bytes,2,opt,name=secureUrl,proto3" json:"secureUrl,omitempty"` // `meta:"og:audio:secure_url"`
	Type      string `protobuf:"bytes,3,opt,name=type,proto3" json:"type,omitempty"`           // `meta:"og:audio:type"`
}

func (x *URLLink_OpenGraphAudio) Reset() {
	*x = URLLink_OpenGraphAudio{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_OpenGraphAudio) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_OpenGraphAudio) ProtoMessage() {}

func (x *URLLink_OpenGraphAudio) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_OpenGraphAudio.ProtoReflect.Descriptor instead.
func (*URLLink_OpenGraphAudio) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{6, 2}
}

func (x *URLLink_OpenGraphAudio) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLLink_OpenGraphAudio) GetSecureUrl() string {
	if x != nil {
		return x.SecureUrl
	}
	return ""
}

func (x *URLLink_OpenGraphAudio) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// Twitter Card
type URLLink_TwitterCard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Card        string                          `protobuf:"bytes,1,opt,name=card,proto3" json:"card,omitempty"`               // `meta:"twitter:card"`
	Site        string                          `protobuf:"bytes,2,opt,name=site,proto3" json:"site,omitempty"`               // `meta:"twitter:site"`
	SiteId      string                          `protobuf:"bytes,3,opt,name=siteId,proto3" json:"siteId,omitempty"`           // `meta:"twitter:site:id"`
	Creator     string                          `protobuf:"bytes,4,opt,name=creator,proto3" json:"creator,omitempty"`         // `meta:"twitter:creator"`
	CreatorId   string                          `protobuf:"bytes,5,opt,name=creatorId,proto3" json:"creatorId,omitempty"`     // `meta:"twitter:creator:id"`
	Description string                          `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"` // `meta:"twitter:description"`
	Title       string                          `protobuf:"bytes,7,opt,name=title,proto3" json:"title,omitempty"`             // `meta:"twitter:title"`
	Image       string                          `protobuf:"bytes,8,opt,name=image,proto3" json:"image,omitempty"`             // `meta:"twitter:image,twitter:image:src"`
	ImageAlt    string                          `protobuf:"bytes,9,opt,name=imageAlt,proto3" json:"imageAlt,omitempty"`       // `meta:"twitter:image:alt"`
	Url         string                          `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`                // `meta:"twitter:url"`
	Player      *URLLink_TwitterCard_Player     `protobuf:"bytes,11,opt,name=player,proto3" json:"player,omitempty"`          // Twitter Item Player
	Iphone      *URLLink_TwitterCard_IPhone     `protobuf:"bytes,12,opt,name=iphone,proto3" json:"iphone,omitempty"`          // Twitter iPhone Data
	Ipad        *URLLink_TwitterCard_IPad       `protobuf:"bytes,13,opt,name=ipad,proto3" json:"ipad,omitempty"`              // Twitter iPad Data
	GooglePlay  *URLLink_TwitterCard_GooglePlay `protobuf:"bytes,14,opt,name=googlePlay,proto3" json:"googlePlay,omitempty"`  // Twitter Android Data
}

func (x *URLLink_TwitterCard) Reset() {
	*x = URLLink_TwitterCard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_TwitterCard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_TwitterCard) ProtoMessage() {}

func (x *URLLink_TwitterCard) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_TwitterCard.ProtoReflect.Descriptor instead.
func (*URLLink_TwitterCard) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{6, 3}
}

func (x *URLLink_TwitterCard) GetCard() string {
	if x != nil {
		return x.Card
	}
	return ""
}

func (x *URLLink_TwitterCard) GetSite() string {
	if x != nil {
		return x.Site
	}
	return ""
}

func (x *URLLink_TwitterCard) GetSiteId() string {
	if x != nil {
		return x.SiteId
	}
	return ""
}

func (x *URLLink_TwitterCard) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *URLLink_TwitterCard) GetCreatorId() string {
	if x != nil {
		return x.CreatorId
	}
	return ""
}

func (x *URLLink_TwitterCard) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *URLLink_TwitterCard) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *URLLink_TwitterCard) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *URLLink_TwitterCard) GetImageAlt() string {
	if x != nil {
		return x.ImageAlt
	}
	return ""
}

func (x *URLLink_TwitterCard) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLLink_TwitterCard) GetPlayer() *URLLink_TwitterCard_Player {
	if x != nil {
		return x.Player
	}
	return nil
}

func (x *URLLink_TwitterCard) GetIphone() *URLLink_TwitterCard_IPhone {
	if x != nil {
		return x.Iphone
	}
	return nil
}

func (x *URLLink_TwitterCard) GetIpad() *URLLink_TwitterCard_IPad {
	if x != nil {
		return x.Ipad
	}
	return nil
}

func (x *URLLink_TwitterCard) GetGooglePlay() *URLLink_TwitterCard_GooglePlay {
	if x != nil {
		return x.GooglePlay
	}
	return nil
}

type URLLink_TwitterCard_Player struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url    string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`        // `meta:"twitter:player"`
	Width  int32  `protobuf:"varint,2,opt,name=width,proto3" json:"width,omitempty"`   // `meta:"twitter:width"`
	Height int32  `protobuf:"varint,3,opt,name=height,proto3" json:"height,omitempty"` // `meta:"twitter:height"`
	Stream string `protobuf:"bytes,4,opt,name=stream,proto3" json:"stream,omitempty"`  // `meta:"twitter:stream"`
}

func (x *URLLink_TwitterCard_Player) Reset() {
	*x = URLLink_TwitterCard_Player{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_TwitterCard_Player) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_TwitterCard_Player) ProtoMessage() {}

func (x *URLLink_TwitterCard_Player) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_TwitterCard_Player.ProtoReflect.Descriptor instead.
func (*URLLink_TwitterCard_Player) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{6, 3, 0}
}

func (x *URLLink_TwitterCard_Player) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *URLLink_TwitterCard_Player) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *URLLink_TwitterCard_Player) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *URLLink_TwitterCard_Player) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

type URLLink_TwitterCard_IPhone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // `meta:"twitter:app:name:iphone"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`     // `meta:"twitter:app:id:iphone"`
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`   // `meta:"twitter:app:url:iphone"`
}

func (x *URLLink_TwitterCard_IPhone) Reset() {
	*x = URLLink_TwitterCard_IPhone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_TwitterCard_IPhone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_TwitterCard_IPhone) ProtoMessage() {}

func (x *URLLink_TwitterCard_IPhone) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_TwitterCard_IPhone.ProtoReflect.Descriptor instead.
func (*URLLink_TwitterCard_IPhone) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{6, 3, 1}
}

func (x *URLLink_TwitterCard_IPhone) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *URLLink_TwitterCard_IPhone) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *URLLink_TwitterCard_IPhone) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type URLLink_TwitterCard_IPad struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // `meta:"twitter:app:name:ipad"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`     // `meta:"twitter:app:id:ipad"`
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`   // `meta:"twitter:app:url:ipad"`
}

func (x *URLLink_TwitterCard_IPad) Reset() {
	*x = URLLink_TwitterCard_IPad{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_TwitterCard_IPad) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_TwitterCard_IPad) ProtoMessage() {}

func (x *URLLink_TwitterCard_IPad) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_TwitterCard_IPad.ProtoReflect.Descriptor instead.
func (*URLLink_TwitterCard_IPad) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{6, 3, 2}
}

func (x *URLLink_TwitterCard_IPad) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *URLLink_TwitterCard_IPad) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *URLLink_TwitterCard_IPad) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type URLLink_TwitterCard_GooglePlay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // `meta:"twitter:app:name:googleplay"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`     // `meta:"twitter:app:id:googleplay"`
	Url  string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`   // `meta:"twitter:app:url:googleplay"`
}

func (x *URLLink_TwitterCard_GooglePlay) Reset() {
	*x = URLLink_TwitterCard_GooglePlay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_data_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *URLLink_TwitterCard_GooglePlay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*URLLink_TwitterCard_GooglePlay) ProtoMessage() {}

func (x *URLLink_TwitterCard_GooglePlay) ProtoReflect() protoreflect.Message {
	mi := &file_data_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use URLLink_TwitterCard_GooglePlay.ProtoReflect.Descriptor instead.
func (*URLLink_TwitterCard_GooglePlay) Descriptor() ([]byte, []int) {
	return file_data_proto_rawDescGZIP(), []int{6, 3, 3}
}

func (x *URLLink_TwitterCard_GooglePlay) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *URLLink_TwitterCard_GooglePlay) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *URLLink_TwitterCard_GooglePlay) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

var File_data_proto protoreflect.FileDescriptor

var file_data_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe4, 0x01, 0x0a, 0x05, 0x4c, 0x6f, 0x62,
	0x62, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x65,
	0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4c, 0x6f, 0x62, 0x62,
	0x79, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x65,
	0x65, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x3f,
	0x0a, 0x0a, 0x50, 0x65, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e,
	0x50, 0x65, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0xd3, 0x01, 0x0a, 0x0a, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x27,
	0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e,
	0x4c, 0x6f, 0x62, 0x62, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x47, 0x0a, 0x05,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47,
	0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x42, 0x59, 0x10, 0x01,
	0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x53, 0x55, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06,
	0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x4d, 0x45, 0x53, 0x53,
	0x41, 0x47, 0x45, 0x10, 0x04, 0x22, 0xa9, 0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x19,
	0x0a, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4d,
	0x49, 0x4d, 0x45, 0x52, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x49, 0x44, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x73, 0x73, 0x65, 0x74, 0x49,
	0x44, 0x22, 0x9a, 0x01, 0x0a, 0x04, 0x4d, 0x49, 0x4d, 0x45, 0x12, 0x1e, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0a, 0x2e, 0x4d, 0x49, 0x4d, 0x45, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x42, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x10, 0x01, 0x12, 0x09,
	0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x10, 0x04, 0x22, 0x80,
	0x01, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a,
	0x06, 0x69, 0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69,
	0x73, 0x4a, 0x6f, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x64, 0x69,
	0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x14, 0x0a, 0x05, 0x77,
	0x6f, 0x72, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x77, 0x6f, 0x72, 0x64,
	0x73, 0x22, 0xe8, 0x06, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x61,
	0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x22, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x08, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07, 0x70,
	0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76,
	0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x07, 0x70, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x20, 0x0a, 0x0b,
	0x68, 0x61, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x45, 0x78, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x12, 0x25,
	0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x09, 0x2e, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x52, 0x08, 0x70, 0x6c, 0x61,
	0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6c, 0x61, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x08, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x2c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x14, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64,
	0x2e, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x22, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61,
	0x63, 0x74, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x12, 0x25, 0x0a, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x12, 0x1a, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x08, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x6b,
	0x0a, 0x0a, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x04,
	0x6d, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4d, 0x49, 0x4d,
	0x45, 0x52, 0x04, 0x6d, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0x88, 0x01, 0x0a, 0x08,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x76, 0x61, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x6f, 0x74, 0x61,
	0x6c, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x54, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x4e,
	0x56, 0x49, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x49, 0x52, 0x45, 0x43, 0x54,
	0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x50, 0x4c, 0x59, 0x10, 0x03, 0x12, 0x0e, 0x0a,
	0x0a, 0x49, 0x4e, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x10, 0x04, 0x12, 0x0d, 0x0a,
	0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x05, 0x22, 0x82, 0x0c, 0x0a,
	0x07, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x69, 0x74, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f, 0x63, 0x61,
	0x6c, 0x65, 0x12, 0x2f, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x4f, 0x70, 0x65,
	0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x0a, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x4f, 0x70,
	0x65, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x06, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x73, 0x12, 0x2f, 0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x18, 0x0b,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x4f,
	0x70, 0x65, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x06, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x74, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b,
	0x2e, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x52, 0x07, 0x74, 0x77,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x1a,
	0x82, 0x01, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x55, 0x72,
	0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x1a, 0x82, 0x01, 0x0a, 0x0e, 0x4f, 0x70, 0x65, 0x6e, 0x47, 0x72, 0x61,
	0x70, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65,
	0x63, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68,
	0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a, 0x54, 0x0a, 0x0e, 0x4f, 0x70, 0x65,
	0x6e, 0x47, 0x72, 0x61, 0x70, 0x68, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x73, 0x65, 0x63, 0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x1a,
	0xff, 0x05, 0x0a, 0x0b, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x61, 0x72, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x73, 0x69, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x69, 0x74, 0x65, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x6c,
	0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x41, 0x6c,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x12, 0x33, 0x0a, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x77,
	0x69, 0x74, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72,
	0x52, 0x06, 0x70, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x33, 0x0a, 0x06, 0x69, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69,
	0x6e, 0x6b, 0x2e, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x49,
	0x50, 0x68, 0x6f, 0x6e, 0x65, 0x52, 0x06, 0x69, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x2d, 0x0a,
	0x04, 0x69, 0x70, 0x61, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x55, 0x52,
	0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x77, 0x69, 0x74, 0x74, 0x65, 0x72, 0x43, 0x61, 0x72,
	0x64, 0x2e, 0x49, 0x50, 0x61, 0x64, 0x52, 0x04, 0x69, 0x70, 0x61, 0x64, 0x12, 0x3f, 0x0a, 0x0a,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x55, 0x52, 0x4c, 0x4c, 0x69, 0x6e, 0x6b, 0x2e, 0x54, 0x77, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x43, 0x61, 0x72, 0x64, 0x2e, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61,
	0x79, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x1a, 0x60, 0x0a,
	0x06, 0x50, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x1a,
	0x3e, 0x0a, 0x06, 0x49, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a,
	0x3c, 0x0a, 0x04, 0x49, 0x50, 0x61, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75,
	0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x42, 0x0a,
	0x0a, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x2a, 0x6f, 0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x0d, 0x0a, 0x09,
	0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x43,
	0x4f, 0x4e, 0x54, 0x41, 0x43, 0x54, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x45, 0x44, 0x49,
	0x41, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x55, 0x52, 0x4c, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04,
	0x54, 0x45, 0x58, 0x54, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x44, 0x46, 0x10, 0x05, 0x12,
	0x10, 0x0a, 0x0c, 0x50, 0x52, 0x45, 0x53, 0x45, 0x4e, 0x54, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x06, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x50, 0x52, 0x45, 0x41, 0x44, 0x53, 0x48, 0x45, 0x45, 0x54,
	0x10, 0x07, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_data_proto_rawDescOnce sync.Once
	file_data_proto_rawDescData = file_data_proto_rawDesc
)

func file_data_proto_rawDescGZIP() []byte {
	file_data_proto_rawDescOnce.Do(func() {
		file_data_proto_rawDescData = protoimpl.X.CompressGZIP(file_data_proto_rawDescData)
	})
	return file_data_proto_rawDescData
}

var file_data_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_data_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_data_proto_goTypes = []interface{}{
	(Payload)(0),                           // 0: Payload
	(LobbyEvent_Event)(0),                  // 1: LobbyEvent.Event
	(MIME_Type)(0),                         // 2: MIME.Type
	(TransferCard_Status)(0),               // 3: TransferCard.Status
	(*Lobby)(nil),                          // 4: Lobby
	(*LobbyEvent)(nil),                     // 5: LobbyEvent
	(*Metadata)(nil),                       // 6: Metadata
	(*MIME)(nil),                           // 7: MIME
	(*RemoteInfo)(nil),                     // 8: RemoteInfo
	(*TransferCard)(nil),                   // 9: TransferCard
	(*URLLink)(nil),                        // 10: URLLink
	nil,                                    // 11: Lobby.PeersEntry
	(*TransferCard_Properties)(nil),        // 12: TransferCard.Properties
	(*TransferCard_Progress)(nil),          // 13: TransferCard.Progress
	(*URLLink_OpenGraphImage)(nil),         // 14: URLLink.OpenGraphImage
	(*URLLink_OpenGraphVideo)(nil),         // 15: URLLink.OpenGraphVideo
	(*URLLink_OpenGraphAudio)(nil),         // 16: URLLink.OpenGraphAudio
	(*URLLink_TwitterCard)(nil),            // 17: URLLink.TwitterCard
	(*URLLink_TwitterCard_Player)(nil),     // 18: URLLink.TwitterCard.Player
	(*URLLink_TwitterCard_IPhone)(nil),     // 19: URLLink.TwitterCard.IPhone
	(*URLLink_TwitterCard_IPad)(nil),       // 20: URLLink.TwitterCard.IPad
	(*URLLink_TwitterCard_GooglePlay)(nil), // 21: URLLink.TwitterCard.GooglePlay
	(*Peer)(nil),                           // 22: Peer
	(Platform)(0),                          // 23: Platform
	(*Contact)(nil),                        // 24: Contact
}
var file_data_proto_depIdxs = []int32{
	11, // 0: Lobby.peers:type_name -> Lobby.PeersEntry
	22, // 1: Lobby.user:type_name -> Peer
	1,  // 2: LobbyEvent.event:type_name -> LobbyEvent.Event
	22, // 3: LobbyEvent.from:type_name -> Peer
	7,  // 4: Metadata.mime:type_name -> MIME
	2,  // 5: MIME.type:type_name -> MIME.Type
	0,  // 6: TransferCard.payload:type_name -> Payload
	23, // 7: TransferCard.platform:type_name -> Platform
	13, // 8: TransferCard.progress:type_name -> TransferCard.Progress
	3,  // 9: TransferCard.status:type_name -> TransferCard.Status
	12, // 10: TransferCard.properties:type_name -> TransferCard.Properties
	24, // 11: TransferCard.contact:type_name -> Contact
	6,  // 12: TransferCard.metadata:type_name -> Metadata
	10, // 13: TransferCard.url:type_name -> URLLink
	14, // 14: URLLink.images:type_name -> URLLink.OpenGraphImage
	15, // 15: URLLink.videos:type_name -> URLLink.OpenGraphVideo
	16, // 16: URLLink.audios:type_name -> URLLink.OpenGraphAudio
	17, // 17: URLLink.twitter:type_name -> URLLink.TwitterCard
	22, // 18: Lobby.PeersEntry.value:type_name -> Peer
	7,  // 19: TransferCard.Properties.mime:type_name -> MIME
	18, // 20: URLLink.TwitterCard.player:type_name -> URLLink.TwitterCard.Player
	19, // 21: URLLink.TwitterCard.iphone:type_name -> URLLink.TwitterCard.IPhone
	20, // 22: URLLink.TwitterCard.ipad:type_name -> URLLink.TwitterCard.IPad
	21, // 23: URLLink.TwitterCard.googlePlay:type_name -> URLLink.TwitterCard.GooglePlay
	24, // [24:24] is the sub-list for method output_type
	24, // [24:24] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_data_proto_init() }
func file_data_proto_init() {
	if File_data_proto != nil {
		return
	}
	file_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_data_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lobby); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LobbyEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MIME); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCard_Properties); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferCard_Progress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_OpenGraphImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_OpenGraphVideo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_OpenGraphAudio); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_TwitterCard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_TwitterCard_Player); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_TwitterCard_IPhone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_TwitterCard_IPad); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_data_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*URLLink_TwitterCard_GooglePlay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_data_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_data_proto_goTypes,
		DependencyIndexes: file_data_proto_depIdxs,
		EnumInfos:         file_data_proto_enumTypes,
		MessageInfos:      file_data_proto_msgTypes,
	}.Build()
	File_data_proto = out.File
	file_data_proto_rawDesc = nil
	file_data_proto_goTypes = nil
	file_data_proto_depIdxs = nil
}
