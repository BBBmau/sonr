// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: topic.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Lobby_Type int32

const (
	Lobby_Local  Lobby_Type = 0
	Lobby_Remote Lobby_Type = 1
	Lobby_User   Lobby_Type = 2
)

// Enum value maps for Lobby_Type.
var (
	Lobby_Type_name = map[int32]string{
		0: "Local",
		1: "Remote",
		2: "User",
	}
	Lobby_Type_value = map[string]int32{
		"Local":  0,
		"Remote": 1,
		"User":   2,
	}
)

func (x Lobby_Type) Enum() *Lobby_Type {
	p := new(Lobby_Type)
	*p = x
	return p
}

func (x Lobby_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Lobby_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_topic_proto_enumTypes[0].Descriptor()
}

func (Lobby_Type) Type() protoreflect.EnumType {
	return &file_topic_proto_enumTypes[0]
}

func (x Lobby_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Lobby_Type.Descriptor instead.
func (Lobby_Type) EnumDescriptor() ([]byte, []int) {
	return file_topic_proto_rawDescGZIP(), []int{0, 0}
}

type LobbyEvent_Event int32

const (
	LobbyEvent_EXCHANGE LobbyEvent_Event = 0 // Peer has joined wants Info
	LobbyEvent_STANDBY  LobbyEvent_Event = 1 // Peer is taking break from lobby
	LobbyEvent_RESUME   LobbyEvent_Event = 2 // Peer has rejoined Lobby
	LobbyEvent_UPDATE   LobbyEvent_Event = 3 // Peer has changed position
	LobbyEvent_MESSAGE  LobbyEvent_Event = 4 // Peer has been messaged by a user
	LobbyEvent_EXIT     LobbyEvent_Event = 5 // Peer has Exited
)

// Enum value maps for LobbyEvent_Event.
var (
	LobbyEvent_Event_name = map[int32]string{
		0: "EXCHANGE",
		1: "STANDBY",
		2: "RESUME",
		3: "UPDATE",
		4: "MESSAGE",
		5: "EXIT",
	}
	LobbyEvent_Event_value = map[string]int32{
		"EXCHANGE": 0,
		"STANDBY":  1,
		"RESUME":   2,
		"UPDATE":   3,
		"MESSAGE":  4,
		"EXIT":     5,
	}
)

func (x LobbyEvent_Event) Enum() *LobbyEvent_Event {
	p := new(LobbyEvent_Event)
	*p = x
	return p
}

func (x LobbyEvent_Event) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LobbyEvent_Event) Descriptor() protoreflect.EnumDescriptor {
	return file_topic_proto_enumTypes[1].Descriptor()
}

func (LobbyEvent_Event) Type() protoreflect.EnumType {
	return &file_topic_proto_enumTypes[1]
}

func (x LobbyEvent_Event) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LobbyEvent_Event.Descriptor instead.
func (LobbyEvent_Event) EnumDescriptor() ([]byte, []int) {
	return file_topic_proto_rawDescGZIP(), []int{1, 0}
}

type RemoteEvent_Event int32

const (
	RemoteEvent_REQUEST   RemoteEvent_Event = 0 // Peer has joined wants Info
	RemoteEvent_ACCEPT    RemoteEvent_Event = 1 // Peer is taking break from lobby
	RemoteEvent_DECLINE   RemoteEvent_Event = 2 // Peer has rejoined Lobby
	RemoteEvent_COMPLETED RemoteEvent_Event = 3 // Peer has changed position
)

// Enum value maps for RemoteEvent_Event.
var (
	RemoteEvent_Event_name = map[int32]string{
		0: "REQUEST",
		1: "ACCEPT",
		2: "DECLINE",
		3: "COMPLETED",
	}
	RemoteEvent_Event_value = map[string]int32{
		"REQUEST":   0,
		"ACCEPT":    1,
		"DECLINE":   2,
		"COMPLETED": 3,
	}
)

func (x RemoteEvent_Event) Enum() *RemoteEvent_Event {
	p := new(RemoteEvent_Event)
	*p = x
	return p
}

func (x RemoteEvent_Event) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RemoteEvent_Event) Descriptor() protoreflect.EnumDescriptor {
	return file_topic_proto_enumTypes[2].Descriptor()
}

func (RemoteEvent_Event) Type() protoreflect.EnumType {
	return &file_topic_proto_enumTypes[2]
}

func (x RemoteEvent_Event) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RemoteEvent_Event.Descriptor instead.
func (RemoteEvent_Event) EnumDescriptor() ([]byte, []int) {
	return file_topic_proto_rawDescGZIP(), []int{2, 0}
}

// For Info about Lobby
type Lobby struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  Lobby_Type       `protobuf:"varint,1,opt,name=type,proto3,enum=Lobby_Type" json:"type,omitempty"`                                                                          // Type of Lobby
	Name  string           `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                           // Open Location Code of Lobby
	Topic string           `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`                                                                                         // Pubsub Address with OLC
	Size  int32            `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`                                                                                          // Total Number of Devices in Lobby
	Count int32            `protobuf:"varint,5,opt,name=count,proto3" json:"count,omitempty"`                                                                                        // Total Devices in Lobby EXCLUDING User
	Peers map[string]*Peer `protobuf:"bytes,6,rep,name=peers,proto3" json:"peers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Total Data of Active Peers
	User  *Peer            `protobuf:"bytes,7,opt,name=user,proto3" json:"user,omitempty"`                                                                                           // User Peer reference
}

func (x *Lobby) Reset() {
	*x = Lobby{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lobby) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lobby) ProtoMessage() {}

func (x *Lobby) ProtoReflect() protoreflect.Message {
	mi := &file_topic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lobby.ProtoReflect.Descriptor instead.
func (*Lobby) Descriptor() ([]byte, []int) {
	return file_topic_proto_rawDescGZIP(), []int{0}
}

func (x *Lobby) GetType() Lobby_Type {
	if x != nil {
		return x.Type
	}
	return Lobby_Local
}

func (x *Lobby) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Lobby) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Lobby) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Lobby) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *Lobby) GetPeers() map[string]*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *Lobby) GetUser() *Peer {
	if x != nil {
		return x.User
	}
	return nil
}

// Message Sent when peer messages Lobby Topic
type LobbyEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                              // Peer ID
	Event   LobbyEvent_Event `protobuf:"varint,2,opt,name=event,proto3,enum=LobbyEvent_Event" json:"event,omitempty"` // What Peer is Doing
	From    *Peer            `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`                          // User Information
	To      string           `protobuf:"bytes,4,opt,name=to,proto3" json:"to,omitempty"`                              // Peer ID for DM
	Message string           `protobuf:"bytes,5,opt,name=message,proto3" json:"message,omitempty"`                    // Message being sent
}

func (x *LobbyEvent) Reset() {
	*x = LobbyEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LobbyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbyEvent) ProtoMessage() {}

func (x *LobbyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_topic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbyEvent.ProtoReflect.Descriptor instead.
func (*LobbyEvent) Descriptor() ([]byte, []int) {
	return file_topic_proto_rawDescGZIP(), []int{1}
}

func (x *LobbyEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LobbyEvent) GetEvent() LobbyEvent_Event {
	if x != nil {
		return x.Event
	}
	return LobbyEvent_EXCHANGE
}

func (x *LobbyEvent) GetFrom() *Peer {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *LobbyEvent) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *LobbyEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Message Sent when peer messages Remote Topic
type RemoteEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`                               // Peer ID
	Event RemoteEvent_Event `protobuf:"varint,2,opt,name=event,proto3,enum=RemoteEvent_Event" json:"event,omitempty"` // What Peer is Doing
	From  *Peer             `protobuf:"bytes,3,opt,name=from,proto3" json:"from,omitempty"`                           // User Information
}

func (x *RemoteEvent) Reset() {
	*x = RemoteEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topic_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RemoteEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RemoteEvent) ProtoMessage() {}

func (x *RemoteEvent) ProtoReflect() protoreflect.Message {
	mi := &file_topic_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RemoteEvent.ProtoReflect.Descriptor instead.
func (*RemoteEvent) Descriptor() ([]byte, []int) {
	return file_topic_proto_rawDescGZIP(), []int{2}
}

func (x *RemoteEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *RemoteEvent) GetEvent() RemoteEvent_Event {
	if x != nil {
		return x.Event
	}
	return RemoteEvent_REQUEST
}

func (x *RemoteEvent) GetFrom() *Peer {
	if x != nil {
		return x.From
	}
	return nil
}

var File_topic_proto protoreflect.FileDescriptor

var file_topic_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xaa, 0x02, 0x0a, 0x05, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x12,
	0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x4c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a,
	0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65,
	0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x1a, 0x3f, 0x0a, 0x0a, 0x50, 0x65, 0x65, 0x72,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x27, 0x0a, 0x04, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x09, 0x0a, 0x05, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x10, 0x02, 0x22, 0xdd, 0x01, 0x0a, 0x0a, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x27, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x11, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x04, 0x66, 0x72,
	0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52,
	0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22,
	0x51, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x58, 0x43, 0x48,
	0x41, 0x4e, 0x47, 0x45, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x42,
	0x59, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x53, 0x55, 0x4d, 0x45, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x4d,
	0x45, 0x53, 0x53, 0x41, 0x47, 0x45, 0x10, 0x04, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x58, 0x49, 0x54,
	0x10, 0x05, 0x22, 0xa0, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x12, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x52, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x19, 0x0a, 0x04,
	0x66, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x22, 0x3c, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a,
	0x06, 0x41, 0x43, 0x43, 0x45, 0x50, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x43,
	0x4c, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45,
	0x54, 0x45, 0x44, 0x10, 0x03, 0x42, 0x09, 0x5a, 0x07, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_topic_proto_rawDescOnce sync.Once
	file_topic_proto_rawDescData = file_topic_proto_rawDesc
)

func file_topic_proto_rawDescGZIP() []byte {
	file_topic_proto_rawDescOnce.Do(func() {
		file_topic_proto_rawDescData = protoimpl.X.CompressGZIP(file_topic_proto_rawDescData)
	})
	return file_topic_proto_rawDescData
}

var file_topic_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_topic_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_topic_proto_goTypes = []interface{}{
	(Lobby_Type)(0),        // 0: Lobby.Type
	(LobbyEvent_Event)(0),  // 1: LobbyEvent.Event
	(RemoteEvent_Event)(0), // 2: RemoteEvent.Event
	(*Lobby)(nil),          // 3: Lobby
	(*LobbyEvent)(nil),     // 4: LobbyEvent
	(*RemoteEvent)(nil),    // 5: RemoteEvent
	nil,                    // 6: Lobby.PeersEntry
	(*Peer)(nil),           // 7: Peer
}
var file_topic_proto_depIdxs = []int32{
	0, // 0: Lobby.type:type_name -> Lobby.Type
	6, // 1: Lobby.peers:type_name -> Lobby.PeersEntry
	7, // 2: Lobby.user:type_name -> Peer
	1, // 3: LobbyEvent.event:type_name -> LobbyEvent.Event
	7, // 4: LobbyEvent.from:type_name -> Peer
	2, // 5: RemoteEvent.event:type_name -> RemoteEvent.Event
	7, // 6: RemoteEvent.from:type_name -> Peer
	7, // 7: Lobby.PeersEntry.value:type_name -> Peer
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_topic_proto_init() }
func file_topic_proto_init() {
	if File_topic_proto != nil {
		return
	}
	file_user_proto_init()
	file_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_topic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lobby); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LobbyEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topic_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RemoteEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_topic_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_topic_proto_goTypes,
		DependencyIndexes: file_topic_proto_depIdxs,
		EnumInfos:         file_topic_proto_enumTypes,
		MessageInfos:      file_topic_proto_msgTypes,
	}.Build()
	File_topic_proto = out.File
	file_topic_proto_rawDesc = nil
	file_topic_proto_goTypes = nil
	file_topic_proto_depIdxs = nil
}
