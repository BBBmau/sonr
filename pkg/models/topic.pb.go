// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.15.6
// source: topic.proto

package models

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Lobby_Type int32

const (
	Lobby_LOCAL_IP  Lobby_Type = 0
	Lobby_LOCAL_GEO Lobby_Type = 1
	Lobby_REMOTE    Lobby_Type = 2
)

// Enum value maps for Lobby_Type.
var (
	Lobby_Type_name = map[int32]string{
		0: "LOCAL_IP",
		1: "LOCAL_GEO",
		2: "REMOTE",
	}
	Lobby_Type_value = map[string]int32{
		"LOCAL_IP":  0,
		"LOCAL_GEO": 1,
		"REMOTE":    2,
	}
)

func (x Lobby_Type) Enum() *Lobby_Type {
	p := new(Lobby_Type)
	*p = x
	return p
}

func (x Lobby_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Lobby_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_topic_proto_enumTypes[0].Descriptor()
}

func (Lobby_Type) Type() protoreflect.EnumType {
	return &file_topic_proto_enumTypes[0]
}

func (x Lobby_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Lobby_Type.Descriptor instead.
func (Lobby_Type) EnumDescriptor() ([]byte, []int) {
	return file_topic_proto_rawDescGZIP(), []int{0, 0}
}

// Local Type Event
type LobbyEvent_LocalEvent int32

const (
	LobbyEvent_EXCHANGE LobbyEvent_LocalEvent = 0 // Peer has joined wants Info
	LobbyEvent_STANDBY  LobbyEvent_LocalEvent = 1 // Peer is taking break from lobby
	LobbyEvent_RESUME   LobbyEvent_LocalEvent = 2 // Peer has rejoined Lobby
	LobbyEvent_UPDATE   LobbyEvent_LocalEvent = 3 // Peer has changed position
	LobbyEvent_EXIT     LobbyEvent_LocalEvent = 4 // Peer has Exited
)

// Enum value maps for LobbyEvent_LocalEvent.
var (
	LobbyEvent_LocalEvent_name = map[int32]string{
		0: "EXCHANGE",
		1: "STANDBY",
		2: "RESUME",
		3: "UPDATE",
		4: "EXIT",
	}
	LobbyEvent_LocalEvent_value = map[string]int32{
		"EXCHANGE": 0,
		"STANDBY":  1,
		"RESUME":   2,
		"UPDATE":   3,
		"EXIT":     4,
	}
)

func (x LobbyEvent_LocalEvent) Enum() *LobbyEvent_LocalEvent {
	p := new(LobbyEvent_LocalEvent)
	*p = x
	return p
}

func (x LobbyEvent_LocalEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LobbyEvent_LocalEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_topic_proto_enumTypes[1].Descriptor()
}

func (LobbyEvent_LocalEvent) Type() protoreflect.EnumType {
	return &file_topic_proto_enumTypes[1]
}

func (x LobbyEvent_LocalEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LobbyEvent_LocalEvent.Descriptor instead.
func (LobbyEvent_LocalEvent) EnumDescriptor() ([]byte, []int) {
	return file_topic_proto_rawDescGZIP(), []int{1, 0}
}

// Remote Type Event
type LobbyEvent_RemoteEvent int32

const (
	LobbyEvent_REQUEST   LobbyEvent_RemoteEvent = 0 // Peer has joined wants Info
	LobbyEvent_ACCEPT    LobbyEvent_RemoteEvent = 1 // Peer is taking break from lobby
	LobbyEvent_DECLINE   LobbyEvent_RemoteEvent = 2 // Peer has rejoined Lobby
	LobbyEvent_COMPLETED LobbyEvent_RemoteEvent = 3 // Peer has changed position
)

// Enum value maps for LobbyEvent_RemoteEvent.
var (
	LobbyEvent_RemoteEvent_name = map[int32]string{
		0: "REQUEST",
		1: "ACCEPT",
		2: "DECLINE",
		3: "COMPLETED",
	}
	LobbyEvent_RemoteEvent_value = map[string]int32{
		"REQUEST":   0,
		"ACCEPT":    1,
		"DECLINE":   2,
		"COMPLETED": 3,
	}
)

func (x LobbyEvent_RemoteEvent) Enum() *LobbyEvent_RemoteEvent {
	p := new(LobbyEvent_RemoteEvent)
	*p = x
	return p
}

func (x LobbyEvent_RemoteEvent) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LobbyEvent_RemoteEvent) Descriptor() protoreflect.EnumDescriptor {
	return file_topic_proto_enumTypes[2].Descriptor()
}

func (LobbyEvent_RemoteEvent) Type() protoreflect.EnumType {
	return &file_topic_proto_enumTypes[2]
}

func (x LobbyEvent_RemoteEvent) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LobbyEvent_RemoteEvent.Descriptor instead.
func (LobbyEvent_RemoteEvent) EnumDescriptor() ([]byte, []int) {
	return file_topic_proto_rawDescGZIP(), []int{1, 1}
}

// For Info about Lobby
type Lobby struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type  Lobby_Type       `protobuf:"varint,1,opt,name=type,proto3,enum=Lobby_Type" json:"type,omitempty"`                                                                          // Type of Lobby
	Peers map[string]*Peer `protobuf:"bytes,2,rep,name=peers,proto3" json:"peers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Total Data of Active Peers
	User  *Peer            `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`                                                                                           // User Peer reference
	// Lobby Info
	//
	// Types that are assignable to Info:
	//	*Lobby_Local
	//	*Lobby_Remote
	Info isLobby_Info `protobuf_oneof:"info"`
}

func (x *Lobby) Reset() {
	*x = Lobby{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topic_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lobby) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lobby) ProtoMessage() {}

func (x *Lobby) ProtoReflect() protoreflect.Message {
	mi := &file_topic_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lobby.ProtoReflect.Descriptor instead.
func (*Lobby) Descriptor() ([]byte, []int) {
	return file_topic_proto_rawDescGZIP(), []int{0}
}

func (x *Lobby) GetType() Lobby_Type {
	if x != nil {
		return x.Type
	}
	return Lobby_LOCAL_IP
}

func (x *Lobby) GetPeers() map[string]*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *Lobby) GetUser() *Peer {
	if x != nil {
		return x.User
	}
	return nil
}

func (m *Lobby) GetInfo() isLobby_Info {
	if m != nil {
		return m.Info
	}
	return nil
}

func (x *Lobby) GetLocal() *Lobby_LocalInfo {
	if x, ok := x.GetInfo().(*Lobby_Local); ok {
		return x.Local
	}
	return nil
}

func (x *Lobby) GetRemote() *Lobby_RemoteInfo {
	if x, ok := x.GetInfo().(*Lobby_Remote); ok {
		return x.Remote
	}
	return nil
}

type isLobby_Info interface {
	isLobby_Info()
}

type Lobby_Local struct {
	Local *Lobby_LocalInfo `protobuf:"bytes,4,opt,name=local,proto3,oneof"`
}

type Lobby_Remote struct {
	Remote *Lobby_RemoteInfo `protobuf:"bytes,5,opt,name=remote,proto3,oneof"`
}

func (*Lobby_Local) isLobby_Info() {}

func (*Lobby_Remote) isLobby_Info() {}

// Message Sent when peer messages Lobby Topic
type LobbyEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`           // Peer ID
	From    *Peer  `protobuf:"bytes,2,opt,name=from,proto3" json:"from,omitempty"`       // User Information
	To      string `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`           // Peer ID for DM
	Message string `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"` // Message being sent
	// Event Type
	//
	// Types that are assignable to Event:
	//	*LobbyEvent_Local
	//	*LobbyEvent_Remote
	Event isLobbyEvent_Event `protobuf_oneof:"event"`
}

func (x *LobbyEvent) Reset() {
	*x = LobbyEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topic_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LobbyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LobbyEvent) ProtoMessage() {}

func (x *LobbyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_topic_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LobbyEvent.ProtoReflect.Descriptor instead.
func (*LobbyEvent) Descriptor() ([]byte, []int) {
	return file_topic_proto_rawDescGZIP(), []int{1}
}

func (x *LobbyEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *LobbyEvent) GetFrom() *Peer {
	if x != nil {
		return x.From
	}
	return nil
}

func (x *LobbyEvent) GetTo() string {
	if x != nil {
		return x.To
	}
	return ""
}

func (x *LobbyEvent) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (m *LobbyEvent) GetEvent() isLobbyEvent_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *LobbyEvent) GetLocal() LobbyEvent_LocalEvent {
	if x, ok := x.GetEvent().(*LobbyEvent_Local); ok {
		return x.Local
	}
	return LobbyEvent_EXCHANGE
}

func (x *LobbyEvent) GetRemote() LobbyEvent_RemoteEvent {
	if x, ok := x.GetEvent().(*LobbyEvent_Remote); ok {
		return x.Remote
	}
	return LobbyEvent_REQUEST
}

type isLobbyEvent_Event interface {
	isLobbyEvent_Event()
}

type LobbyEvent_Local struct {
	Local LobbyEvent_LocalEvent `protobuf:"varint,5,opt,name=local,proto3,enum=LobbyEvent_LocalEvent,oneof"`
}

type LobbyEvent_Remote struct {
	Remote LobbyEvent_RemoteEvent `protobuf:"varint,6,opt,name=remote,proto3,enum=LobbyEvent_RemoteEvent,oneof"`
}

func (*LobbyEvent_Local) isLobbyEvent_Event() {}

func (*LobbyEvent_Remote) isLobbyEvent_Event() {}

type Lobby_LocalInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Topic    string    `protobuf:"bytes,2,opt,name=topic,proto3" json:"topic,omitempty"`
	Location *Location `protobuf:"bytes,3,opt,name=location,proto3" json:"location,omitempty"`
}

func (x *Lobby_LocalInfo) Reset() {
	*x = Lobby_LocalInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topic_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lobby_LocalInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lobby_LocalInfo) ProtoMessage() {}

func (x *Lobby_LocalInfo) ProtoReflect() protoreflect.Message {
	mi := &file_topic_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lobby_LocalInfo.ProtoReflect.Descriptor instead.
func (*Lobby_LocalInfo) Descriptor() ([]byte, []int) {
	return file_topic_proto_rawDescGZIP(), []int{0, 1}
}

func (x *Lobby_LocalInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Lobby_LocalInfo) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Lobby_LocalInfo) GetLocation() *Location {
	if x != nil {
		return x.Location
	}
	return nil
}

type Lobby_RemoteInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsJoin  bool      `protobuf:"varint,1,opt,name=isJoin,proto3" json:"isJoin,omitempty"`
	Display string    `protobuf:"bytes,2,opt,name=display,proto3" json:"display,omitempty"`
	Topic   string    `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	Words   []string  `protobuf:"bytes,4,rep,name=words,proto3" json:"words,omitempty"`
	File    *SonrFile `protobuf:"bytes,5,opt,name=file,proto3" json:"file,omitempty"`
	Owner   *Peer     `protobuf:"bytes,6,opt,name=owner,proto3" json:"owner,omitempty"`
}

func (x *Lobby_RemoteInfo) Reset() {
	*x = Lobby_RemoteInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_topic_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Lobby_RemoteInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Lobby_RemoteInfo) ProtoMessage() {}

func (x *Lobby_RemoteInfo) ProtoReflect() protoreflect.Message {
	mi := &file_topic_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Lobby_RemoteInfo.ProtoReflect.Descriptor instead.
func (*Lobby_RemoteInfo) Descriptor() ([]byte, []int) {
	return file_topic_proto_rawDescGZIP(), []int{0, 2}
}

func (x *Lobby_RemoteInfo) GetIsJoin() bool {
	if x != nil {
		return x.IsJoin
	}
	return false
}

func (x *Lobby_RemoteInfo) GetDisplay() string {
	if x != nil {
		return x.Display
	}
	return ""
}

func (x *Lobby_RemoteInfo) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *Lobby_RemoteInfo) GetWords() []string {
	if x != nil {
		return x.Words
	}
	return nil
}

func (x *Lobby_RemoteInfo) GetFile() *SonrFile {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *Lobby_RemoteInfo) GetOwner() *Peer {
	if x != nil {
		return x.Owner
	}
	return nil
}

var File_topic_proto protoreflect.FileDescriptor

var file_topic_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x64, 0x61, 0x74, 0x61, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x04, 0x0a, 0x05, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x12,
	0x1f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e,
	0x4c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x27, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x12, 0x19, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x4c, 0x6f, 0x63, 0x61,
	0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x12, 0x2b,
	0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x2e, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x1a, 0x3f, 0x0a, 0x0a, 0x50,
	0x65, 0x65, 0x72, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1b, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a, 0x5c, 0x0a, 0x09,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x70, 0x69, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x12, 0x25, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xa6, 0x01, 0x0a, 0x0a, 0x52,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x4a,
	0x6f, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4a, 0x6f, 0x69,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x6f, 0x70, 0x69, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69,
	0x63, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x05, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x53, 0x6f, 0x6e, 0x72, 0x46, 0x69, 0x6c, 0x65,
	0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x22, 0x2f, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x4c,
	0x4f, 0x43, 0x41, 0x4c, 0x5f, 0x49, 0x50, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x4f, 0x43,
	0x41, 0x4c, 0x5f, 0x47, 0x45, 0x4f, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x52, 0x45, 0x4d, 0x4f,
	0x54, 0x45, 0x10, 0x02, 0x42, 0x06, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0xdc, 0x02, 0x0a,
	0x0a, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a, 0x04, 0x66,
	0x72, 0x6f, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x6f, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x74, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x2e, 0x0a, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x16, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x05, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x12, 0x31, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x4c, 0x6f, 0x62, 0x62, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x52, 0x65,
	0x6d, 0x6f, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x22, 0x49, 0x0a, 0x0a, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x53, 0x54, 0x41, 0x4e, 0x44, 0x42, 0x59, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x52, 0x45, 0x53, 0x55, 0x4d, 0x45, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x55, 0x50, 0x44, 0x41,
	0x54, 0x45, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x45, 0x58, 0x49, 0x54, 0x10, 0x04, 0x22, 0x42,
	0x0a, 0x0b, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x0b, 0x0a,
	0x07, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x43,
	0x43, 0x45, 0x50, 0x54, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45, 0x43, 0x4c, 0x49, 0x4e,
	0x45, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x44,
	0x10, 0x03, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x09, 0x5a, 0x07, 0x2f,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_topic_proto_rawDescOnce sync.Once
	file_topic_proto_rawDescData = file_topic_proto_rawDesc
)

func file_topic_proto_rawDescGZIP() []byte {
	file_topic_proto_rawDescOnce.Do(func() {
		file_topic_proto_rawDescData = protoimpl.X.CompressGZIP(file_topic_proto_rawDescData)
	})
	return file_topic_proto_rawDescData
}

var file_topic_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_topic_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_topic_proto_goTypes = []interface{}{
	(Lobby_Type)(0),             // 0: Lobby.Type
	(LobbyEvent_LocalEvent)(0),  // 1: LobbyEvent.LocalEvent
	(LobbyEvent_RemoteEvent)(0), // 2: LobbyEvent.RemoteEvent
	(*Lobby)(nil),               // 3: Lobby
	(*LobbyEvent)(nil),          // 4: LobbyEvent
	nil,                         // 5: Lobby.PeersEntry
	(*Lobby_LocalInfo)(nil),     // 6: Lobby.LocalInfo
	(*Lobby_RemoteInfo)(nil),    // 7: Lobby.RemoteInfo
	(*Peer)(nil),                // 8: Peer
	(*Location)(nil),            // 9: Location
	(*SonrFile)(nil),            // 10: SonrFile
}
var file_topic_proto_depIdxs = []int32{
	0,  // 0: Lobby.type:type_name -> Lobby.Type
	5,  // 1: Lobby.peers:type_name -> Lobby.PeersEntry
	8,  // 2: Lobby.user:type_name -> Peer
	6,  // 3: Lobby.local:type_name -> Lobby.LocalInfo
	7,  // 4: Lobby.remote:type_name -> Lobby.RemoteInfo
	8,  // 5: LobbyEvent.from:type_name -> Peer
	1,  // 6: LobbyEvent.local:type_name -> LobbyEvent.LocalEvent
	2,  // 7: LobbyEvent.remote:type_name -> LobbyEvent.RemoteEvent
	8,  // 8: Lobby.PeersEntry.value:type_name -> Peer
	9,  // 9: Lobby.LocalInfo.location:type_name -> Location
	10, // 10: Lobby.RemoteInfo.file:type_name -> SonrFile
	8,  // 11: Lobby.RemoteInfo.owner:type_name -> Peer
	12, // [12:12] is the sub-list for method output_type
	12, // [12:12] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_topic_proto_init() }
func file_topic_proto_init() {
	if File_topic_proto != nil {
		return
	}
	file_user_proto_init()
	file_data_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_topic_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lobby); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topic_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LobbyEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topic_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lobby_LocalInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_topic_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Lobby_RemoteInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_topic_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Lobby_Local)(nil),
		(*Lobby_Remote)(nil),
	}
	file_topic_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*LobbyEvent_Local)(nil),
		(*LobbyEvent_Remote)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_topic_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_topic_proto_goTypes,
		DependencyIndexes: file_topic_proto_depIdxs,
		EnumInfos:         file_topic_proto_enumTypes,
		MessageInfos:      file_topic_proto_msgTypes,
	}.Build()
	File_topic_proto = out.File
	file_topic_proto_rawDesc = nil
	file_topic_proto_goTypes = nil
	file_topic_proto_depIdxs = nil
}
