syntax = "proto3";

import "data.proto";
import "user.proto";

// Require Go Package
option go_package = ".;models";

// Define ConnectionRequest: Initial Connection Message
message ConnectionRequest {
  double latitude = 1;
  double longitude = 2;
  Profile profile = 3;
  Device device = 4;
  Directories directories = 5;
  Contact contact = 6;
}

// Define InviteRequest: Processes Given File and Invites Peer
message InviteRequest {
  // Transfer Properties
  TransferType type = 1;
  Peer to = 2;
  bool isDirect = 3;

  // Attached Data
  string url = 4;
  Contact contact = 5;
  repeated FileInfo files = 6;

  // FileInfo Message for Attached Files
  message FileInfo {
    string path = 1;
    bool hasThumbnail = 2;
    string thumbpath = 3;
    int32 duration = 4;
  }

  // Enum for Type of Transfer
  enum TransferType {
    Unknown = 0;
    File = 1;
    MultiFiles = 2;
    Contact = 3;
    URL = 4;
  }
}

// Define AuthInvite: Invitation Message sent on RPC
message AuthInvite {
  Payload payload = 1;
  Peer from = 2;
  TransferCard card = 3;
  bool isDirect = 4;
}

// Define AuthReply: Reply Message sent on RPC
message AuthReply {
  Payload payload = 1;
  Peer from = 2;
  bool decision = 3;
  TransferCard card = 4;
}

// Define TransferCard Type: Transferred Data Card
message TransferCard {
  // SQL Properties
  int32 id = 1;
  Status status = 2;
  Payload payload = 3;
  Properties properties = 4;
  int32 received = 5;
  Platform platform = 6;
  bytes preview = 7;

  // Owner Properties
  string username = 8;
  string firstName = 9;
  string lastName = 10;

  // Transfer Properties
  Progress progress = 11;

  // Data Properties
  Contact contact = 12;
  Metadata metadata = 13;
  string url = 14;

  // Card Status
  enum Status {
    NONE = 0;
    PROCESSED = 1;
    INVITE = 2;
    DIRECT = 3;
    REPLY = 4;
    INPROGRESS = 5;
    COMPLETED = 6;
  }

  // -- Card Properties -- //
  message Properties {
    MIME mime = 1;
    int32 size = 2;
    int32 duration = 3;
    string name = 4;
    int32 total = 5;
  }

  // -- Progress Variables -- //
  message Progress {
    int32 currentSize = 1;
    int32 interval = 2;
    int32 totalChunks = 3;
    int32 totalSize = 4;
  }
}

// Define ErrorMessage: Error Message
message ErrorMessage {
  string message = 1;
  string method = 2;
}
