syntax = "proto3";

// Require Go Package
option go_package = ".;models";

// Define Metadata Type: For Transfer Request
message Metadata {
  int32 id = 1;
  string name = 2;
  string path = 3;
  int32 size = 4;
  MIME mime = 5;
  bytes thumbnail = 6;
  Peer owner = 7;
  int32 lastOpened = 8;
}

// Define MIME: Protobuf Version of Mime
message MIME {
  Type type = 1;
  string subtype = 2;
  string value = 3;
  enum Type { application = 0; audio = 1; image = 2; text = 3; video = 4; }
}

// Define Lobby Type: For Info about Lobby
message Lobby {
  string code = 1;
  int32 size = 2;
  map<string, Peer> peers = 3;
}

message Link {
  string display = 1;
  string url = 2;
}

// Define Contact Type: Will be CSV in Future
message Contact {
  // Default
  string firstName = 1;
  string lastName = 2;
  string phone = 3;
  string website = 4;
  string email = 5;
  bytes profilePic = 6;
  string header = 7;

  repeated SocialTile socials = 8;

  // Extended Social Media Integration
  message SocialTile {
    Provider provider = 1;
    TileType type = 2;
    int32 position = 3; // 0-7
    string url = 4;
    string username = 5;

    enum TileType { Icon = 0; Feed = 1; Showcase = 2; }
    enum Provider {
      Instagram = 0; // Feed/Link Option
      TikTok = 1;    // Feed/Link Option
      Facebook = 2;  // Link Only
      YouTube = 3;   // Feed/Link Option
      Spotify = 4;   // Feed/Link Option
      Medium = 5;    // Feed/Link Option
      Twitter = 6;   // Feed/Link Option
      Snapchat = 7;  // Feed/Link Option
      Github = 8;    // Feed/Link Option
    }
  }
}

// Define Device Type: Information about device
message Device {
  string platform = 1;
  string model = 2;
  string name = 3;
  string version = 4;
  int32 sdk = 5; // For Android
}

// Define Directories Type: Where Data can be stored
message Directories {
  string documents = 1;
  string library = 2;
  string temporary = 3;
}

// Define Peer: Basic Info Sent to Peers
message Peer {
  string id = 1;
  Device device = 2;
  string discovery = 3;
  string username = 4;
  string firstName = 5;
  bytes profilePic = 6;
  double direction = 7;
  double difference = 8;
  double distance = 9;
  Proximity proximity = 10;
  enum Proximity { NONE = 0; IMMEDIATE = 1; NEAR = 2; FAR = 3; }
}
