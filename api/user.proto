syntax = "proto3";

import "peer.proto";
import "data.proto";

// Require Go Package
option go_package = "/models";

// Client Keys for Services
message APIKeys {
  string ipApiKey = 1;
  string rapidApiKey = 2;
  string handshakeKey = 3;
  string handshakeSecret = 4;
  string mapQuestKey = 5;
  string mapQuestSecret = 6;
  string textileKey = 7;
  string textileSecret = 8;
}

// Information about device for User
message Device {
  string id = 1;             // Device Identifier
  string name = 2;           // User Defined Name
  Platform platform = 3;     // Operating System
  string model = 4;          // Model of Device
  string version = 5;        // Operating System Version
  FileSystem fileSystem = 6; // Directories for this Device
  KeyPair keyPair = 7;
}

// FileSystem is for Directores Where Data can be stored
message FileSystem {
  string documents = 1; // User Generated Files - Both
  string downloads = 2; // Downloaded Files - Desktop
  string library = 3;   // Persistent Non Exposed Files - Desktop
  string support = 4;   // Non Exposed Support Files - Mobile
  string temporary = 5; // Temporary Storage - Mobile
}

// KeyPair Encryption Type
enum KeyType {
  RSA = 0;
  Ed25519 = 1;
  Secp256k1 = 2;
  ECDSA = 3;
}

// Private Public Key Pair
message KeyPair {
  Private private = 1; // Private Key Ref
  Public public = 2;   // Public Key Ref
  KeyType type = 3;    // Type of Key Encryption

  // User Private Key Saved to Disk
  message Private {
    string path = 1;  // Private Key Path
    bytes buffer = 2; // Key Buffer
  }

  // Public Key for Thread ID/ Libp2p ID
  message Public {
    string id = 1;    // P2P Id derived from Public Key
    bytes buffer = 2; // Public Key Buffer
  }

  // Shared Key for Device Linking
  message Shared {
    bytes ephermal = 1; // Public Ephermal Key Generated from "P-256" Curve
  }
}

// Status is User Node Situation
enum Status {
  DEFAULT = 0;   // Default Status on Launch
  IDLE = 1;      // Node has not been Authenticated
  CONNECTED = 2; // Status after starting Host
  AVAILABLE = 3; // Bootstrapped and Visible Locally
  PENDING = 4;   // Awaiting Peer Authorization
  INVITED = 5;   // Has received Invitation
  TRANSFER = 6;  // In Progress of Transfer
  STANDBY = 7;   // Away from Sonr Application
  FAILED = 8;    // Failed to Connect Host
}

// User is the Saved Data from Client that Passes to Proxy, During ConnRequest
message User {
  string sName = 1; // User Snr Domain

  // From InitializeRequest
  APIKeys apiKeys = 2; // App Env Variables for API Keys
  Status status = 3;   // Client Node Status
  Device device = 4;   // Clients Current Device

  // From ConnectionRequest
  Peer peer = 5;         // Clients Peer Reference
  Crypto crypto = 6;     // User Cryptographic Data
  Settings settings = 7; // User Settings
  Contact contact = 8;   // Users Contact Card
  Router router = 9;     // Client Routing Information

  // Crypto Data to Place in DHT
  message Crypto {
    string prefix = 1;   // Created from DeviceID and SName
    string mnemonic = 2; // Used to generate fingerprint
  }

  // Router Manages Peer Routing for Topics/Transfers - Attached from Node
  // Client
  message Router {
    string deviceTopic = 1;
    string localTopic = 2;
    string rendevouz = 3;
    Location location = 4;
  }

  // User Settings
  message Settings {
    Device primary = 1;
    map<string, Device> devices = 2;     // Clients Devices: Name, Device
    map<string, Option> preferences = 3; // Clients Specified Preferences

    message Option {
      Type type = 1;  // Type of Option
      string key = 2; // Option as String
      oneof value {
        bool enabled = 3; // If Value is for simple enable/disable
        string text = 4;  // If Value is complex
      }

      // Available Settings Options
      enum Type {
        None = 0;              // Arbitrary Zero Value
        DefaultVideoCall = 1;  // Default App to be used for Video Calls
        FallbackVideoCall = 2; // Fallback App for Video Calls
        DarkMode = 3;          // Dark Mode Preference
        RunInBackground = 4;   // Sonr Background Run Preference
      }
    }
  }
}
