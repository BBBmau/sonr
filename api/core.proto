syntax = "proto3";

import "api.proto";
import "data.proto";
import "user.proto";

// Require Go Package
option go_package = "/models";

// Sent on Data Transfer to Add piece of File - Binary
message Chunk {
  bytes buffer = 1;    // Binary Value of Chunk
  int32 size = 2;      // Size of this Chunk
  bool isComplete = 3; // Whether this is final chunk
}

// Traffic Direction of Session
enum Direction {
  Default = 0;  // From Memory/Viewing
  Incoming = 1; // Incoming Transfer
  Outgoing = 2; // Outgoing Transfer
}

message RemoteTopic {
  User owner = 1;
  SonrFile file = 2;
  RemoteInfo info = 3;
  map<string, Peer> peers = 4;
}

// Message Sent when peer messages Remote Topic
message RemoteEvent {
  string id = 1;   // Peer ID
  Event event = 2; // What Peer is Doing
  Peer from = 3;   // User Information

  enum Event {
    REQUEST = 0;   // Peer has joined wants Info
    ACCEPT = 1;    // Peer is taking break from lobby
    DECLINE = 2;   // Peer has rejoined Lobby
    COMPLETED = 3; // Peer has changed position
  }
}
