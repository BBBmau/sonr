syntax = "proto3";

import "user.proto";
import "data.proto";

// Require Go Package
option go_package = "/models";

// For Info about Lobby
message Lobby {
  Type type = 1;               // Type of Lobby
  map<string, Peer> peers = 2; // Total Data of Active Peers
  Peer user = 3;               // User Peer reference

  // Lobby Info
  oneof info {
    LocalInfo local = 4;
    RemoteInfo remote = 5;
  }

  enum Type {
    LOCAL = 0;
    REMOTE = 1;
    LINKER = 2;
  }

  message LocalInfo {
    string name = 1;       // Topic without Prefix
    string topic = 2;      // Full Topic Address
    Location location = 3; // Topic Location
  }

  message RemoteInfo {
    bool isJoin = 1;        // Whether User Created
    string topic = 2;       // Calculated Topic Name in Link Format
    string words = 3;       // Bip39 Words
    string fingerprint = 4; // User Signed Fingerprint for Words
    SonrFile file = 5;      // File to be transfered
    Peer owner = 6;         // Owner of File
  }
}

// Message Sent when peer messages Remote Topic
message RemoteEvent {
  string id = 1;       // Peer ID
  Peer from = 2;       // User Information
  Subject subject = 3; // Remote Event Subject

  // Remote Type Event
  enum Subject {
    REQUEST = 0;   // Peer has joined wants Info
    ACCEPT = 1;    // Peer is taking break from lobby
    DECLINE = 2;   // Peer has rejoined Lobby
    COMPLETED = 3; // Peer has changed position
  }
}

// Message Sent when peer messages Local Topic
message LocalEvent {
  string id = 1;       // Peer ID
  Peer from = 2;       // User Information
  string to = 3;       // Peer ID for DM
  string message = 4;  // Message being sent
  Subject subject = 5; // Local Event Subject

  // Local Type Event
  enum Subject {
    EXCHANGE = 0; // Peer has joined wants Info
    STANDBY = 1;  // Peer is taking break from lobby
    RESUME = 2;   // Peer has rejoined Lobby
    UPDATE = 3;   // Peer has changed position
    EXIT = 4;     // Peer has Exited
  }
}
