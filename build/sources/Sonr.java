// Code generated by gobind. DO NOT EDIT.

// Java class sonr.Sonr is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java github.com/sonr-io/core/bind
package sonr;

import go.Seq;

public abstract class Sonr {
	static {
		Seq.touch(); // for loading the native library
		_init();
	}
	
	private Sonr() {} // uninstantiable
	
	// touch is called from other bound packages to initialize this package
	public static void touch() {}
	
	private static native void _init();
	
	private static final class proxyCallback implements Seq.Proxy, Callback {
		private final int refnum;
		
		@Override public final int incRefnum() {
		      Seq.incGoRef(refnum, this);
		      return refnum;
		}
		
		proxyCallback(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
		
		public native void onAccepted(String s);
		public native void onComplete(String s);
		public native void onDenied(String s);
		public native void onMessage(String s);
		public native void onProgress(String s);
		public native void onRefresh(String s);
		public native void onRequested(String s);
	}
	
	
	/**
	 * Start begins the mobile host
	 */
	public static native Node start(String data, Callback call);
}
