// Code generated by gobind. DO NOT EDIT.

// Java class sonr.Node is a proxy for talking to a Go program.
//
//   autogenerated by gobind -lang=java github.com/sonr-io/core/bind
package sonr;

import go.Seq;

/**
 * Node contains all values for user
 */
public final class Node implements Seq.Proxy {
	static { Sonr.touch(); }
	
	private final int refnum;
	
	@Override public final int incRefnum() {
	      Seq.incGoRef(refnum, this);
	      return refnum;
	}
	
	Node(int refnum) { this.refnum = refnum; Seq.trackGoRef(refnum, this); }
	
	public Node() { this.refnum = __New(); Seq.trackGoRef(refnum, this); }
	
	private static native int __New();
	
	public final native String getPeerID();
	public final native void setPeerID(String v);
	
	// skipped field Node.Host with unsupported type: github.com/libp2p/go-libp2p-core/host.Host
	
	// skipped field Node.Lobby with unsupported type: github.com/sonr-io/core/pkg/lobby.Lobby
	
	// skipped field Node.Profile with unsupported type: github.com/sonr-io/core/pkg/user.Profile
	
	// skipped field Node.Contact with unsupported type: github.com/sonr-io/core/pkg/user.Contact
	
	/**
	 * GetUser returns profile and contact in a map as string
	 */
	public native String getUser();
	/**
	 * Send publishes a message to the SonrNode lobby
	 */
	public native boolean send(String data);
	// skipped method Node.SetUser with unsupported parameter or return types
	
	/**
	 * Update occurs when status or direction changes
	 */
	public native boolean update(String data);
	@Override public boolean equals(Object o) {
		if (o == null || !(o instanceof Node)) {
		    return false;
		}
		Node that = (Node)o;
		String thisPeerID = getPeerID();
		String thatPeerID = that.getPeerID();
		if (thisPeerID == null) {
			if (thatPeerID != null) {
			    return false;
			}
		} else if (!thisPeerID.equals(thatPeerID)) {
		    return false;
		}
		// skipped field Node.Host with unsupported type: github.com/libp2p/go-libp2p-core/host.Host
		
		// skipped field Node.Lobby with unsupported type: github.com/sonr-io/core/pkg/lobby.Lobby
		
		// skipped field Node.Profile with unsupported type: github.com/sonr-io/core/pkg/user.Profile
		
		// skipped field Node.Contact with unsupported type: github.com/sonr-io/core/pkg/user.Contact
		
		return true;
	}
	
	@Override public int hashCode() {
	    return java.util.Arrays.hashCode(new Object[] {getPeerID()});
	}
	
	@Override public String toString() {
		StringBuilder b = new StringBuilder();
		b.append("Node").append("{");
		b.append("PeerID:").append(getPeerID()).append(",");
		return b.append("}").toString();
	}
}

