name: Core Workflow

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the release branch
  push:
    branches: [release]

  pull_request:
    branches: [release]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Runs the `build` job
  build:
    name: Setup Go and Dependencies

    # The type of runner that the job will run on
    runs-on: macos-latest

    # Env Variables for the job
    env:
      GO111MODULE: on
      GONOPROXY: "github.com/sonr-io/*"
      GOPRIVATE: "github.com/sonr-io/*"
      GOMOD: ${{ github.workspace }}/go.mod
      GOROOT: ${HOME}/goroot

    strategy:
      matrix:
        go-version: [1.16.x]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # Setup Go Enviornment
      - uses: actions/setup-go@v1
        with:
          go-version: ${{ matrix.go-version }}

      - name: Set env vars
        run: |
          echo "CGO_ENABLED=0" >> $GITHUB_ENV
          echo "${HOME}/goroot/bin" >> $GITHUB_PATH

      # Create a Build Directory
      - name: Create Build Directory
        run: |
          mkdir -p ${{ github.workspace }}/build/ios
          mkdir -p ${{ github.workspace }}/build/android

      # Download and Initialize Gomobile
      - name: Setup Gomobile
        run: |
          go get golang.org/x/mobile/bind
          cd ${{ github.workspace }}/bind && gomobile init

      # Bind iOS Framework to Plugin
      - name: Bind iOS Framework
        run: |
          cd ${{ github.workspace }}/bind && gomobile bind -ldflags='-s -w' -v -target=ios -bundleid=io.sonr.core -o ${{ github.workspace }}/build/ios/Core.framework

      # Bind Android Framework to Plugin
      - name: Bind Android Framework
        run: |
          cd ${{ github.workspace }}/bind && gomobile bind -ldflags='-s -w' -v -target=android -o ${{ github.workspace }}/build/android/io.sonr.core.aar

      # Change Directory to cmd
      - name: Change Directory to cmd
        run: cd ${{ github.workspace }}/cmd

      # Build Cmd with Goreleaser
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
